{"ast":null,"code":"var _jsxFileName = \"/Users/gabrieldossantos/Google Drive (webmaster@wigoo.com.br)/Wigoo Desenvolvimento/justfit.com.br/clicoupersonal.com.br/checkout/pages-sections/checkout/SectionAnamnese.js\";\nvar __jsx = React.createElement;\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nimport React from \"react\";\nimport { useEffect, useState } from \"react\";\nimport axios from 'axios'; // react components used to create a google map\n\nimport { withScriptjs, withGoogleMap, GoogleMap, Marker } from \"react-google-maps\";\nimport TagManager from 'react-gtm-module'; // @material-ui/core components\n\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Checkbox from \"@material-ui/core/Checkbox\";\nimport FormControlLabel from \"@material-ui/core/FormControlLabel\";\nimport InputAdornment from \"@material-ui/core/InputAdornment\"; // @material-ui/icons\n\nimport PinDrop from \"@material-ui/icons/PinDrop\";\nimport Phone from \"@material-ui/icons/Phone\";\nimport Check from \"@material-ui/icons/Check\";\nimport Email from \"@material-ui/icons/Email\";\nimport EventIcon from '@material-ui/icons/Event';\nimport Favorite from \"@material-ui/icons/Favorite\";\nimport AssignmentInd from \"@material-ui/icons/AssignmentInd\"; // core components\n\nimport CircularProgress from '@material-ui/core/CircularProgress';\nimport GridContainer from \"components/Grid/GridContainer.js\";\nimport GridItem from \"components/Grid/GridItem.js\";\nimport InfoArea from \"components/InfoArea/InfoArea.js\";\nimport Card from \"components/Card/Card.js\";\nimport CardHeader from \"components/Card/CardHeader.js\";\nimport CardBody from \"components/Card/CardBody.js\";\nimport CardFooter from \"components/Card/CardFooter.js\";\nimport CustomInput from \"components/CustomInput/CustomInput.js\";\nimport Button from \"components/CustomButtons/Button.js\";\nimport SnackbarContent from \"components/Snackbar/SnackbarContent.js\";\nimport FormHelperText from '@material-ui/core/FormHelperText';\nimport FormControl from '@material-ui/core/FormControl';\nimport FormGroup from '@material-ui/core/FormGroup';\nimport Select from \"@material-ui/core/Select\";\nimport MenuItem from \"@material-ui/core/MenuItem\";\nimport InputLabel from \"@material-ui/core/InputLabel\";\nimport Grow from '@material-ui/core/Grow';\nimport InputMask from \"react-input-mask\";\nimport MaskedInput from 'react-text-mask';\nimport PropTypes from 'prop-types';\nimport createNumberMask from 'text-mask-addons/dist/createNumberMask';\nimport { useForm } from \"react-hook-form\";\nimport { yupResolver } from '@hookform/resolvers';\nimport * as yup from \"yup\";\nimport { setLocale } from 'yup';\nimport checkoutStyle from \"assets/jss/nextjs-material-kit-pro/pages/checkoutSections/checkoutStyle.js\";\nimport city from \"assets/img/examples/city.jpg\";\nconst useStyles = makeStyles(checkoutStyle);\n\nfunction TextMaskCustom(props) {\n  const {\n    inputRef\n  } = props,\n        other = _objectWithoutProperties(props, [\"inputRef\"]);\n\n  return __jsx(MaskedInput, _extends({}, other, {\n    ref: ref => {\n      inputRef(ref ? ref.inputElement : null);\n    },\n    mask: [/[0-9]/, /[0-9]/, /[0-9]/, '.', /[0-9]/, /[0-9]/, /[0-9]/, '.', /[0-9]/, /[0-9]/, /[0-9]/, '-', /[0-9]/, /[0-9]/] // placeholderChar={'\\u2000'}\n    ,\n    showMask: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 5\n    }\n  }));\n}\n\nTextMaskCustom.propTypes = {\n  inputRef: PropTypes.func.isRequired\n};\n\nfunction PhoneMask(props) {\n  const {\n    inputRef\n  } = props,\n        other = _objectWithoutProperties(props, [\"inputRef\"]);\n\n  return __jsx(MaskedInput, _extends({}, other, {\n    ref: ref => {\n      inputRef(ref ? ref.inputElement : null);\n    },\n    mask: ['(', /[1-9]/, /[0-9]/, ')', ' ', /[1-9]/, /[0-9]/, /[0-9]/, /[0-9]/, /[0-9]/, '-', /[0-9]/, /[0-9]/, /[0-9]/, /[0-9]/] // placeholderChar={'\\u2000'}\n    ,\n    showMask: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 5\n    }\n  }));\n}\n\nPhoneMask.propTypes = {\n  inputRef: PropTypes.func.isRequired\n};\n\nfunction DateMask(props) {\n  const {\n    inputRef\n  } = props,\n        other = _objectWithoutProperties(props, [\"inputRef\"]);\n\n  return __jsx(MaskedInput, _extends({}, other, {\n    ref: ref => {\n      inputRef(ref ? ref.inputElement : null);\n    } // mask={['(', /[1-9]/, /\\d/, /\\d/, ')', ' ', /\\d/, /\\d/, /\\d/, '-', /\\d/, /\\d/, /\\d/, /\\d/]}\n    ,\n    mask: [/\\d/, /\\d/, '/', /\\d/, /\\d/, '/', /\\d/, /\\d/, /\\d/, /\\d/] // placeholderChar={'\\u2000'}\n    ,\n    showMask: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 109,\n      columnNumber: 5\n    }\n  }));\n}\n\nDateMask.propTypes = {\n  inputRef: PropTypes.func.isRequired\n};\n\nfunction AlturaMask(props) {\n  const {\n    inputRef\n  } = props,\n        other = _objectWithoutProperties(props, [\"inputRef\"]);\n\n  return __jsx(MaskedInput, _extends({}, other, {\n    ref: ref => {\n      inputRef(ref ? ref.inputElement : null);\n    } // mask={['(', /[1-9]/, /\\d/, /\\d/, ')', ' ', /\\d/, /\\d/, /\\d/, '-', /\\d/, /\\d/, /\\d/, /\\d/]}\n    ,\n    mask: [/[0-9]/, ',', /[0-9]/, /[0-9]/] // guide={false}\n    ,\n    placeholderChar: '\\u2000',\n    showMask: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 130,\n      columnNumber: 5\n    }\n  }));\n}\n\nAlturaMask.propTypes = {\n  inputRef: PropTypes.func.isRequired\n};\nconst defaultMaskOptions = {\n  prefix: '',\n  suffix: '',\n  includeThousandsSeparator: true,\n  thousandsSeparatorSymbol: ',',\n  allowDecimal: true,\n  decimalSymbol: ',',\n  decimalLimit: 2,\n  // how many digits allowed after the decimal\n  integerLimit: 3,\n  // limit length of integer numbers\n  // requireDecimal: true,\n  allowNegative: false,\n  allowLeadingZeroes: true\n};\n\nconst PesoMask = props => {\n  const {\n    inputRef,\n    maskOptions\n  } = props,\n        other = _objectWithoutProperties(props, [\"inputRef\", \"maskOptions\"]);\n\n  const currencyMask = createNumberMask(_objectSpread({}, defaultMaskOptions, {}, maskOptions));\n  return __jsx(MaskedInput, _extends({}, other, {\n    ref: ref => {\n      inputRef(ref ? ref.inputElement : null);\n    },\n    mask: currencyMask,\n    guide: false,\n    placeholderChar: '\\u2000',\n    showMask: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 173,\n      columnNumber: 5\n    }\n  }));\n};\n\nPesoMask.defaultProps = {\n  inputMode: 'numeric',\n  maskOptions: {}\n};\nPesoMask.propTypes = {\n  inputRef: PropTypes.func.isRequired,\n  inputmode: PropTypes.string,\n  maskOptions: PropTypes.shape({\n    prefix: PropTypes.string,\n    suffix: PropTypes.string,\n    includeThousandsSeparator: PropTypes.boolean,\n    thousandsSeparatorSymbol: PropTypes.string,\n    allowDecimal: PropTypes.boolean,\n    decimalSymbol: PropTypes.string,\n    decimalLimit: PropTypes.string,\n    requireDecimal: PropTypes.boolean,\n    allowNegative: PropTypes.boolean,\n    allowLeadingZeroes: PropTypes.boolean,\n    integerLimit: PropTypes.number\n  })\n}; // const AlturaMask = (props) => {\n//   const { inputRef, maskOptions, ...other } = props;\n//   const currencyMask = createNumberMask({\n//     ...defaultMaskOptions,    \n//     ...maskOptions,\n//     integerLimit: 1, // limit length of integer numbers\n//   })\n//   return (\n//     <MaskedInput\n//       {...other}\n//       ref={(ref) => {\n//         inputRef(ref ? ref.inputElement : null);\n//       }}\n//       mask={currencyMask}\n//       guide={false}\n//       placeholderChar={'\\u2000'}\n//       showMask\n//     />\n//   );\n// }\n// AlturaMask.defaultProps = {\n//   inputMode: 'numeric',\n//   maskOptions: {},\n// }\n// AlturaMask.propTypes = {\n//   inputRef: PropTypes.func.isRequired,\n//   inputmode: PropTypes.string,\n//   maskOptions: PropTypes.shape({\n//     prefix: PropTypes.string,\n//     suffix: PropTypes.string,\n//     includeThousandsSeparator: PropTypes.boolean,\n//     thousandsSeparatorSymbol: PropTypes.string,\n//     allowDecimal: PropTypes.boolean,\n//     decimalSymbol: PropTypes.string,\n//     decimalLimit: PropTypes.string,\n//     requireDecimal: PropTypes.boolean,\n//     allowNegative: PropTypes.boolean,\n//     allowLeadingZeroes: PropTypes.boolean,\n//     integerLimit: PropTypes.number,\n//   }),\n// };\n\nsetLocale({\n  mixed: {\n    notType: function notType(_ref) {\n      switch (_ref.type) {\n        case 'number':\n          return 'deve ser um número';\n\n        case 'string':\n          return 'deve ser um texto';\n\n        default:\n          return 'formato errado';\n      }\n    },\n    default: 'é inválido',\n    required: 'Desculpe, este campo é obrigatório',\n    oneOf: 'deve ser um dos seguintes valores: ${values}',\n    notOneOf: 'não pode ser um dos seguintes valores: ${values}'\n  },\n  string: {\n    length: 'deve ter exatamente ${length} caracteres',\n    min: 'deve ter pelo menos ${min} caracteres',\n    max: 'deve ter no máximo ${max} caracteres',\n    email: 'Por favor, informe um e-mail inválido',\n    url: 'deve ter um formato de URL válida',\n    trim: 'não deve conter espaços no início ou no fim.',\n    lowercase: 'deve estar em maiúsculo',\n    uppercase: 'deve estar em minúsculo'\n  },\n  number: {\n    min: 'deve ser no mínimo ${min}',\n    max: 'deve ser no máximo ${max}',\n    lessThan: 'deve ser menor que ${less}',\n    moreThan: 'deve ser maior que ${more}',\n    notEqual: 'não pode ser igual à ${notEqual}',\n    positive: 'deve ser um número posítivo',\n    negative: 'deve ser um número negativo',\n    integer: 'deve ser um número inteiro'\n  },\n  date: {\n    min: 'deve ser maior que a data ${min}',\n    max: 'deve ser menor que a data ${max}'\n  },\n  array: {\n    min: 'deve ter no mínimo ${min} itens',\n    max: 'deve ter no máximo ${max} itens'\n  }\n});\nconst regexCPF = /([0-9]{2}[\\.]?[0-9]{3}[\\.]?[0-9]{3}[\\/]?[0-9]{4}[-]?[0-9]{2})|([0-9]{3}[\\.]?[0-9]{3}[\\.]?[0-9]{3}[-]?[0-9]{2})/gm;\n\nfunction cpfValidate(cpf) {\n  console.log(\"Validatring\", cpf);\n  return cpf.length > 10;\n}\n\nfunction isValidCPF(cpf) {\n  if (typeof cpf !== \"string\") return false;\n  cpf = cpf.replace(/[\\s.-]*/igm, '');\n\n  if (!cpf || cpf.length != 11 || cpf == \"00000000000\" || cpf == \"11111111111\" || cpf == \"22222222222\" || cpf == \"33333333333\" || cpf == \"44444444444\" || cpf == \"55555555555\" || cpf == \"66666666666\" || cpf == \"77777777777\" || cpf == \"88888888888\" || cpf == \"99999999999\") {\n    return false;\n  }\n\n  var soma = 0;\n  var resto;\n\n  for (var i = 1; i <= 9; i++) soma = soma + parseInt(cpf.substring(i - 1, i)) * (11 - i);\n\n  resto = soma * 10 % 11;\n  if (resto == 10 || resto == 11) resto = 0;\n  if (resto != parseInt(cpf.substring(9, 10))) return false;\n  soma = 0;\n\n  for (var i = 1; i <= 10; i++) soma = soma + parseInt(cpf.substring(i - 1, i)) * (12 - i);\n\n  resto = soma * 10 % 11;\n  if (resto == 10 || resto == 11) resto = 0;\n  if (resto != parseInt(cpf.substring(10, 11))) return false;\n  return true;\n}\n\nfunction isValidPhone(phone) {\n  return /^(?:(?:\\+|00)?(55)\\s?)?(?:\\(?([1-9][0-9])\\)?\\s?)?(?:((?:9\\d|[2-9])\\d{3})\\-?(\\d{4}))$/.test(phone);\n}\n\nfunction isValidDate(date) {\n  return /^((((0?[1-9]|[12]\\d|3[01])[\\.\\-\\/](0?[13578]|1[02])      [\\.\\-\\/]((1[6-9]|[2-9]\\d)?\\d{2}))|((0?[1-9]|[12]\\d|30)[\\.\\-\\/](0?[13456789]|1[012])[\\.\\-\\/]((1[6-9]|[2-9]\\d)?\\d{2}))|((0?[1-9]|1\\d|2[0-8])[\\.\\-\\/]0?2[\\.\\-\\/]((1[6-9]|[2-9]\\d)?\\d{2}))|(29[\\.\\-\\/]0?2[\\.\\-\\/]((1[6-9]|[2-9]\\d)?(0[48]|[2468][048]|[13579][26])|((16|[2468][048]|[3579][26])00)|00)))|(((0[1-9]|[12]\\d|3[01])(0[13578]|1[02])((1[6-9]|[2-9]\\d)?\\d{2}))|((0[1-9]|[12]\\d|30)(0[13456789]|1[012])((1[6-9]|[2-9]\\d)?\\d{2}))|((0[1-9]|1\\d|2[0-8])02((1[6-9]|[2-9]\\d)?\\d{2}))|(2902((1[6-9]|[2-9]\\d)?(0[48]|[2468][048]|[13579][26])|((16|[2468][048]|[3579][26])00)|00))))$/.test(date);\n}\n\nyup.addMethod(yup.string, \"cpf\", function (message) {\n  // return yup.mixed().test(\"cpf\", message || \"número de CPF inválido\", value => cpfValidate(value));\n  return yup.mixed().test(\"cpf\", message || \"número de CPF inválido\", value => isValidCPF(value));\n});\nyup.addMethod(yup.string, \"phone\", function (message) {\n  return yup.mixed().test(\"phone\", message || \"número de celular inválido\", value => isValidPhone(value));\n});\nyup.addMethod(yup.string, \"date\", function (message) {\n  return yup.mixed().test(\"date\", message || \"data inválida\", value => isValidDate(value));\n}); // const SignupSchema = yup.object().shape({\n//   // firstName: yup.string().required(),\n//   cpf: yup\n//     .string()\n//     // .required(), \n// \t\t// .transform(function removeNonNumericalChar(value) {\n// \t\t// \tconsole.log(\"Transforming\", value);\n// \t\t// \treturn this.isType(value) && value !== null ? value.replace(/\\D/g, \"\") : value;\n// \t\t// })\n// \t\t// .matches(regexCPF, \"formato inválido\")\n//     .cpf(\"informe um CPF válido\")\n//     ,\n//   first: yup\n//     .string()\n//     .required(),  \n//   // email: yup.string().required(),\n//   last: yup\n//     .number()\n//     // .required()\n//     .positive()\n//     .integer(),    \n//   // message: yup.string().url(),\n//   // checkboxInput: yup.boolean().oneOf([true],'aceite obrigatório')\n// });\n\nconst SignupSchema = yup.object().shape({\n  cpf: yup.string().cpf(\"Por favor, informe um CPF válido\"),\n  nome: yup.string().required(),\n  email: yup.string().required().email(),\n  telefone: yup.string().phone(\"Por favor, informe um número de celular válido\"),\n  dataNascimento: yup.string().date(\"Por favor, informe uma data válida\"),\n  cep: yup.string().required(),\n  endereco: yup.string().required(),\n  numero: yup.number().required(),\n  complemento: yup.string(),\n  bairro: yup.string().required(),\n  estado: yup.string().required(),\n  cidade: yup.string().required(),\n  idade: yup.number().required(),\n  peso: yup.string().required(),\n  altura: yup.string().matches(/[0-9]{1}\\,[0-9]{2}/g, 'Por favor, insira uma altura válida').required(),\n  outroPatologia: yup.string().required() // receberContatoEmail: yup.boolean().oneOf([true],'aceite obrigatório'),\n  // receberContatoSMS: yup.boolean().oneOf([true],'aceite obrigatório'),\n  // receberContatoWhatsApp: yup.boolean().oneOf([true],'aceite obrigatório')\n\n}); // const schema = yup.object().shape({\n//   first: yup.string().required(),\n//   age: yup.number().positive().integer().required(),\n// });\n\nexport default function SectionAnamnese(props) {\n  // const { register, errors, handleSubmit} = useForm({\n  //   validationSchema: SignupSchema\n  // });\n  const {\n    register,\n    trigger,\n    handleSubmit,\n    setValue,\n    getValues,\n    errors\n  } = useForm({\n    resolver: yupResolver(SignupSchema),\n    mode: \"onBlur\" // mode: \"onChange\"\n\n  });\n\n  const onSubmit = data => {\n    console.log(data); // alert(JSON.stringify(data, null));\n  };\n\n  useEffect(() => {\n    // history.pushState({}, null, \"/checkout/anamnese\");\n    TagManager.dataLayer({\n      dataLayer: {\n        event: \"anamneseView\",\n        userId: '001',\n        userProject: 'project',\n        page: 'home'\n      }\n    });\n    TagManager.dataLayer({\n      dataLayer: {\n        'event': 'checkoutOption',\n        'ecommerce': {\n          'checkout_option': {\n            'actionField': {\n              'step': 3\n            }\n          }\n        }\n      }\n    });\n  }, []);\n  const [checked, setChecked] = React.useState([]);\n\n  const handleToggle = value => {\n    const currentIndex = checked.indexOf(value);\n    const newChecked = [...checked];\n\n    if (currentIndex === -1) {\n      newChecked.push(value);\n    } else {\n      newChecked.splice(currentIndex, 1);\n    }\n\n    setChecked(newChecked);\n  };\n\n  const [isAluno, setIsAluno] = React.useState(false);\n  const [activeForm, setActiveForm] = React.useState(17);\n  const [activeField, setActiveField] = React.useState([\"sexo\"]); // const [activeField, setActiveField] = React.useState([\"peso\", \"altura\"]);\n\n  const [isDisableNext, setIsDisableNext] = React.useState(true);\n  const {\n    0: error,\n    1: setError\n  } = useState(false);\n  const [isLoading, setIsLoading] = React.useState(false);\n  const [isOutro, setIsOutro] = React.useState(false);\n\n  const handleNext = async () => {\n    // console.log(activeField);\n    // const result = await trigger(activeField)\n    // console.log(result);\n    const result = true;\n\n    if (result) {\n      console.log(getValues());\n\n      if (activeForm == 17) {\n        setIsLoading(true);\n        const anamneseForm = getValues();\n        props.setDataSale(prevDataSale => {\n          return _objectSpread({}, prevDataSale, {\n            sexo: anamneseForm.sexo,\n            anamnese: _objectSpread({}, prevDataSale.anamnese, {}, anamneseForm)\n          });\n        }); // props.sendDataForm();\n      } else {\n        setIsDisableNext(true);\n        setIsOutro(false);\n        setActiveForm(prevActiveStep => prevActiveStep + 1);\n        handleFieldActive(activeForm + 1);\n      }\n    } // setActiveForm((prevActiveStep) => prevActiveStep + 1);\n\n  };\n\n  const handleBack = type => {\n    if (activeForm !== 0) {\n      setIsDisableNext(false);\n      setActiveForm(prevActiveStep => prevActiveStep - 1);\n      handleFieldActive(activeForm - 1);\n    } else {\n      props.setStepCheckout(1);\n    }\n  };\n\n  const handleFocus = event => {\n    // event.target.select()\n    if (event.target.value == \"\") {\n      event.target.selectionStart = 0;\n      event.target.selectionEnd = 0;\n    } else {\n      event.target.select();\n    }\n  };\n\n  const handleChange = async event => {\n    const result = await trigger(activeField);\n    console.log(activeField);\n    console.log(result);\n\n    if (result) {\n      setIsDisableNext(false);\n    } else {\n      setIsDisableNext(true);\n    }\n  };\n\n  const handleChangeOutro = async (event, name) => {\n    setValue(name, event.target.value);\n    const result = await trigger(name); // console.log(name);\n    // console.log(result);\n\n    if (result) {\n      setIsDisableNext(false);\n    } else {\n      setIsDisableNext(true);\n    }\n  };\n\n  const handleFieldActive = step => {\n    console.log(\"handleFieldActive\");\n\n    switch (step) {\n      case 0:\n        setActiveField(\"sexo\");\n        break;\n\n      case 1:\n        setActiveField([\"peso\", \"altura\"]);\n        break;\n\n      case 2:\n        setActiveField([\"objetivo\"]);\n        break;\n\n      case 3:\n        setActiveField([\"habitoTreino\", \"frequenciaTreino\"]);\n        break;\n\n      case 4:\n        setActiveField([\"fazMusculacao\"]);\n        break;\n\n      case 5:\n        setActiveField([\"fazAulas\"]);\n        break;\n\n      case 6:\n        setActiveField([\"sedentario\", \"sedentarioTempo\"]);\n        break;\n\n      case 7:\n        setActiveField([\"tempoPorDia\"]);\n        break;\n\n      case 8:\n        setActiveField([\"periodo\"]);\n        break;\n\n      case 9:\n        setActiveField([\"patologia\", \"outroPatologia\"]);\n        break;\n\n      case 10:\n        setActiveField([\"osseoArticular\", \"qualOsseoArticular\"]);\n        break;\n\n      case 11:\n        setActiveField([\"cirurgia\", \"qualCirurgia\"]);\n        break;\n\n      case 12:\n        setActiveField([\"internacao\", \"qualInternacao\"]);\n        break;\n\n      case 13:\n        setActiveField([\"medicamento\", \"qualMedicamento\"]);\n        break;\n\n      case 14:\n        setActiveField([\"fuma\"]);\n        break;\n\n      case 15:\n        setActiveField([\"nutricionista\"]);\n        break;\n\n      case 16:\n        setActiveField([\"personalTrainer\"]);\n        break;\n\n      case 17:\n        setActiveField([\"equipamentos\", \"qualEquipamentos\"]);\n        break;\n\n      default:\n        setActiveField(\"sexo\");\n        break;\n    }\n\n    console.log(step); // console.log(activeField);\n  };\n\n  const setValueForm = (name, value, outro) => {\n    setValue(name, value); // console.log(getValues());\n\n    if (outro) {\n      setIsOutro(true);\n    } else {\n      handleNext();\n    }\n  }; // useEffect(() => {\n  //   console.log(\"teste de erro\");\n  //   console.log(errors[activeField]);  \n  //   !errors[activeField] && setIsDisableNext(false);\n  // }, [ errors[activeField] ]);\n  // useEffect(() => {\n  //   if(isOutro) {\n  //     register(\"outroPatologia\");\n  //   }  \n  //  }, [ isOutro ]);\n\n\n  const [anamnese, setAnamnese] = React.useState({\n    sexo: \"TESTE\",\n    peso: \"TESTE\",\n    altura: \"TESTE\",\n    objetivo: \"TESTE\",\n    habitoTreino: \"TESTE\",\n    frequenciaTreino: \"TESTE\",\n    fazMusculacao: \"TESTE\",\n    fazAulas: \"TESTE\",\n    sedentario: \"TESTE\",\n    sedentarioTempo: \"TESTE\",\n    reclusaoTreino: \"TESTE\",\n    tempoPorDia: \"TESTE\",\n    periodo: \"TESTE\",\n    patologia: \"TESTE\",\n    outroPatologia: \"TESTE\",\n    osseoArticular: \"TESTE\",\n    qualOsseoArticular: \"TESTE\",\n    cirurgia: \"TESTE\",\n    qualCirurgia: \"TESTE\",\n    internacao: \"TESTE\",\n    qualInternacao: \"TESTE\",\n    medicamento: \"TESTE\",\n    qualMedicamento: \"TESTE\",\n    fuma: \"TESTE\",\n    nutricionista: \"TESTE\",\n    personalTrainer: \"TESTE\",\n    equipamentos: \"TESTE\"\n  });\n  const classes = useStyles();\n  return __jsx(\"div\", {\n    className: \"cd-section\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 790,\n      columnNumber: 5\n    }\n  }, __jsx(\"div\", {\n    className: classes.contacts + \" \" + classes.section // style={{ backgroundImage: `url(${city})` }}\n    ,\n    style: {\n      backgroundColor: \"#ffffff\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 792,\n      columnNumber: 7\n    }\n  }, __jsx(\"div\", {\n    className: classes.container,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 797,\n      columnNumber: 9\n    }\n  }, __jsx(GridContainer, {\n    justify: \"center\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 798,\n      columnNumber: 11\n    }\n  }, __jsx(GridItem, {\n    xs: 12,\n    sm: 12,\n    md: 5,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 800,\n      columnNumber: 13\n    }\n  }, __jsx(Grow, _extends({\n    in: true,\n    style: {\n      transformOrigin: '0 0 0'\n    }\n  }, true ? {\n    timeout: 1000\n  } : {}, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 801,\n      columnNumber: 15\n    }\n  }), __jsx(Card, {\n    className: classes.card1,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 806,\n      columnNumber: 17\n    }\n  }, __jsx(\"form\", {\n    onSubmit: handleSubmit(onSubmit),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 807,\n      columnNumber: 17\n    }\n  }, __jsx(CardHeader, {\n    contact: true,\n    color: \"primary\",\n    className: classes.textCenter,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 808,\n      columnNumber: 19\n    }\n  }, __jsx(\"h4\", {\n    className: classes.cardTitle,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 813,\n      columnNumber: 21\n    }\n  }, \"Sobre voc\\xEA\")), __jsx(Grow, _extends({\n    in: activeForm === 0,\n    style: {\n      transformOrigin: '0 0 0',\n      display: activeForm === 0 ? \"block\" : \"none\"\n    }\n  }, activeForm === 0 ? {\n    timeout: 1000\n  } : {}, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 851,\n      columnNumber: 19\n    }\n  }), __jsx(CardBody, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 857,\n      columnNumber: 21\n    }\n  }, __jsx(GridContainer, {\n    justify: \"center\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 858,\n      columnNumber: 23\n    }\n  }, __jsx(GridItem, {\n    xs: 12,\n    sm: 8,\n    md: 8,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 859,\n      columnNumber: 25\n    }\n  }, __jsx(\"input\", {\n    hidden: true,\n    name: \"sexo\",\n    type: \"text\",\n    ref: register,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 862,\n      columnNumber: 27\n    }\n  }), __jsx(\"label\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 864,\n      columnNumber: 27\n    }\n  }, \"Qual o seu sexo?\"), __jsx(Button, {\n    color: \"primary\",\n    fullWidth: true,\n    onClick: () => setValueForm(\"sexo\", \"M\"),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 866,\n      columnNumber: 27\n    }\n  }, \"Masculino\"), __jsx(Button, {\n    color: \"secondary\",\n    fullWidth: true,\n    onClick: () => setValueForm(\"sexo\", \"F\"),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 870,\n      columnNumber: 27\n    }\n  }, \"Feminino\"))))), __jsx(Grow, _extends({\n    in: activeForm === 1,\n    style: {\n      transformOrigin: '0 0 0',\n      display: activeForm === 1 ? \"block\" : \"none\"\n    }\n  }, activeForm === 1 ? {\n    timeout: 1000\n  } : {}, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 881,\n      columnNumber: 19\n    }\n  }), __jsx(CardBody, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 887,\n      columnNumber: 21\n    }\n  }, __jsx(GridContainer, {\n    justify: \"center\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 888,\n      columnNumber: 23\n    }\n  }, __jsx(GridItem, {\n    xs: 12,\n    sm: 8,\n    md: 8,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 889,\n      columnNumber: 25\n    }\n  }, __jsx(CustomInput, {\n    labelText: \"Qual \\xE9 o seu peso?\",\n    labelError: errors.peso && errors.peso.message,\n    error: errors.peso ? true : false,\n    id: \"peso\",\n    formControlProps: {\n      fullWidth: true\n    },\n    inputProps: {\n      type: \"tel\",\n      name: \"peso\",\n      placeholder: \"0,00\",\n      inputComponent: PesoMask,\n      inputRef: register,\n      onChange: handleChange,\n      endAdornment: __jsx(InputAdornment, {\n        position: \"start\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 906,\n          columnNumber: 33\n        }\n      }, \"Kg\")\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 890,\n      columnNumber: 27\n    }\n  }), __jsx(CustomInput, {\n    labelText: \"Qual a sua altura? \",\n    labelError: errors.altura && errors.altura.message,\n    error: errors.altura ? true : false,\n    id: \"altura\",\n    formControlProps: {\n      fullWidth: true\n    },\n    inputProps: {\n      type: \"tel\",\n      name: \"altura\",\n      // placeholder: \"0,00\",\n      inputComponent: AlturaMask,\n      inputRef: register,\n      onChange: handleChange,\n      onClick: handleFocus,\n      endAdornment: __jsx(InputAdornment, {\n        position: \"start\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 929,\n          columnNumber: 33\n        }\n      }, \"m\")\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 912,\n      columnNumber: 27\n    }\n  }))))), __jsx(Grow, _extends({\n    in: activeForm === 2,\n    style: {\n      transformOrigin: '0 0 0',\n      display: activeForm === 2 ? \"block\" : \"none\"\n    }\n  }, activeForm === 2 ? {\n    timeout: 1000\n  } : {}, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 942,\n      columnNumber: 19\n    }\n  }), __jsx(CardBody, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 948,\n      columnNumber: 21\n    }\n  }, error && __jsx(SnackbarContent, {\n    message: __jsx(\"span\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 953,\n        columnNumber: 27\n      }\n    }, __jsx(\"b\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 954,\n        columnNumber: 29\n      }\n    }, \"N\\xE3o encontramos seu CEP\"), \" \", __jsx(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 954,\n        columnNumber: 60\n      }\n    }), \" Tente novamente\") // close\n    ,\n    color: \"warning\",\n    icon: \"info_outline\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 951,\n      columnNumber: 23\n    }\n  }), __jsx(GridContainer, {\n    justify: \"center\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 963,\n      columnNumber: 23\n    }\n  }, __jsx(GridItem, {\n    xs: 12,\n    sm: 12,\n    md: 9,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 964,\n      columnNumber: 25\n    }\n  }, __jsx(\"input\", {\n    hidden: true,\n    name: \"objetivo\",\n    type: \"text\",\n    ref: register,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 967,\n      columnNumber: 27\n    }\n  }), __jsx(\"label\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 968,\n      columnNumber: 27\n    }\n  }, \"Qual \\xE9 o seu objetivo?\"), __jsx(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 969,\n      columnNumber: 27\n    }\n  }), __jsx(Button, {\n    color: \"primary\",\n    fullWidth: true,\n    onClick: () => setValueForm(\"objetivo\", \"Emagrecer\"),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 970,\n      columnNumber: 27\n    }\n  }, \"Emagrecer\"), __jsx(Button, {\n    color: \"primary\",\n    fullWidth: true,\n    onClick: () => setValueForm(\"objetivo\", \"Aumentar a Massa Magra\"),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 974,\n      columnNumber: 27\n    }\n  }, \"Aumentar a Massa Magra\"), __jsx(Button, {\n    color: \"primary\",\n    fullWidth: true,\n    onClick: () => setValueForm(\"objetivo\", \"Manter o Condicionamento Físico\"),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 978,\n      columnNumber: 27\n    }\n  }, \"Manter o Condicionamento F\\xEDsico\"), __jsx(Button, {\n    color: \"primary\",\n    fullWidth: true,\n    onClick: () => setValueForm(\"objetivo\", \"Bem Estar\"),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 982,\n      columnNumber: 27\n    }\n  }, \"Bem Estar\"), __jsx(Button, {\n    color: \"primary\",\n    fullWidth: true,\n    onClick: () => setValueForm(\"objetivo\", \"Indicação Médica\"),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 986,\n      columnNumber: 27\n    }\n  }, \"Indica\\xE7\\xE3o M\\xE9dica\"))))), __jsx(Grow, _extends({\n    in: activeForm === 3,\n    style: {\n      transformOrigin: '0 0 0',\n      display: activeForm === 3 ? \"block\" : \"none\"\n    }\n  }, activeForm === 3 ? {\n    timeout: 1000\n  } : {}, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1000,\n      columnNumber: 19\n    }\n  }), __jsx(CardBody, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1006,\n      columnNumber: 21\n    }\n  }, error && __jsx(SnackbarContent, {\n    message: __jsx(\"span\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1011,\n        columnNumber: 27\n      }\n    }, __jsx(\"b\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1012,\n        columnNumber: 29\n      }\n    }, \"N\\xE3o encontramos seu CEP\"), \" \", __jsx(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1012,\n        columnNumber: 60\n      }\n    }), \" Tente novamente\") // close\n    ,\n    color: \"warning\",\n    icon: \"info_outline\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1009,\n      columnNumber: 23\n    }\n  }), __jsx(GridContainer, {\n    justify: \"center\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1021,\n      columnNumber: 23\n    }\n  }, __jsx(GridItem, {\n    xs: 12,\n    sm: 12,\n    md: 8,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1022,\n      columnNumber: 25\n    }\n  }, __jsx(\"input\", {\n    hidden: true,\n    name: \"habitoTreino\",\n    type: \"text\",\n    ref: register,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1024,\n      columnNumber: 25\n    }\n  }), __jsx(\"input\", {\n    hidden: true,\n    name: \"frequenciaTreino\",\n    type: \"text\",\n    ref: register,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1025,\n      columnNumber: 25\n    }\n  }), !isOutro ? __jsx(React.Fragment, null, __jsx(\"label\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1031,\n      columnNumber: 31\n    }\n  }, \"Possui o h\\xE1bito de treinar?\"), __jsx(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1032,\n      columnNumber: 31\n    }\n  }), __jsx(Button, {\n    color: \"primary\",\n    fullWidth: true,\n    onClick: () => setValueForm(\"habitoTreino\", \"SIM\", true),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1033,\n      columnNumber: 31\n    }\n  }, \"Sim\"), __jsx(Button, {\n    color: \"secondary\",\n    fullWidth: true,\n    onClick: () => setValueForm(\"habitoTreino\", \"NÃO\"),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1037,\n      columnNumber: 31\n    }\n  }, \"N\\xE3o\")) : __jsx(React.Fragment, null, __jsx(\"label\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1046,\n      columnNumber: 31\n    }\n  }, \"Quantas vezes na semana?\"), __jsx(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1047,\n      columnNumber: 31\n    }\n  }), __jsx(Button, {\n    color: \"primary\",\n    fullWidth: true,\n    onClick: () => setValueForm(\"frequenciaTreino\", \"1 a 2 vezes\"),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1048,\n      columnNumber: 31\n    }\n  }, \"1 a 2 vezes\"), __jsx(Button, {\n    color: \"primary\",\n    fullWidth: true,\n    onClick: () => setValueForm(\"frequenciaTreino\", \"3 a 5 vezes\"),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1052,\n      columnNumber: 31\n    }\n  }, \"3 a 5 vezes\"), __jsx(Button, {\n    color: \"primary\",\n    fullWidth: true,\n    onClick: () => setValueForm(\"frequenciaTreino\", \"6 a 7 vezes\"),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1056,\n      columnNumber: 31\n    }\n  }, \"6 a 7 vezes\")))))), __jsx(Grow, _extends({\n    in: activeForm === 4,\n    style: {\n      transformOrigin: '0 0 0',\n      display: activeForm === 4 ? \"block\" : \"none\"\n    }\n  }, activeForm === 4 ? {\n    timeout: 1000\n  } : {}, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1075,\n      columnNumber: 19\n    }\n  }), __jsx(CardBody, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1081,\n      columnNumber: 21\n    }\n  }, error && __jsx(SnackbarContent, {\n    message: __jsx(\"span\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1086,\n        columnNumber: 27\n      }\n    }, __jsx(\"b\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1087,\n        columnNumber: 29\n      }\n    }, \"N\\xE3o encontramos seu CEP\"), \" \", __jsx(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1087,\n        columnNumber: 60\n      }\n    }), \" Tente novamente\") // close\n    ,\n    color: \"warning\",\n    icon: \"info_outline\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1084,\n      columnNumber: 23\n    }\n  }), __jsx(GridContainer, {\n    justify: \"center\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1096,\n      columnNumber: 23\n    }\n  }, __jsx(GridItem, {\n    xs: 12,\n    sm: 12,\n    md: 9,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1097,\n      columnNumber: 25\n    }\n  }, __jsx(\"input\", {\n    hidden: true,\n    name: \"fazMusculacao\",\n    type: \"text\",\n    ref: register,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1100,\n      columnNumber: 27\n    }\n  }), __jsx(\"label\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1102,\n      columnNumber: 27\n    }\n  }, \"Na academia, costuma fazer muscula\\xE7\\xE3o?\"), __jsx(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1103,\n      columnNumber: 27\n    }\n  }), __jsx(Button, {\n    color: \"primary\",\n    fullWidth: true,\n    onClick: () => setValueForm(\"fazMusculacao\", \"SIM\"),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1104,\n      columnNumber: 27\n    }\n  }, \"Sim\"), __jsx(Button, {\n    color: \"secondary\",\n    fullWidth: true,\n    onClick: () => setValueForm(\"fazMusculacao\", \"NÃO\"),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1108,\n      columnNumber: 27\n    }\n  }, \"N\\xE3o\"))))), __jsx(Grow, _extends({\n    in: activeForm === 5,\n    style: {\n      transformOrigin: '0 0 0',\n      display: activeForm === 5 ? \"block\" : \"none\"\n    }\n  }, activeForm === 5 ? {\n    timeout: 1000\n  } : {}, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1121,\n      columnNumber: 19\n    }\n  }), __jsx(CardBody, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1127,\n      columnNumber: 21\n    }\n  }, error && __jsx(SnackbarContent, {\n    message: __jsx(\"span\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1132,\n        columnNumber: 27\n      }\n    }, __jsx(\"b\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1133,\n        columnNumber: 29\n      }\n    }, \"N\\xE3o encontramos seu CEP\"), \" \", __jsx(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1133,\n        columnNumber: 60\n      }\n    }), \" Tente novamente\") // close\n    ,\n    color: \"warning\",\n    icon: \"info_outline\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1130,\n      columnNumber: 23\n    }\n  }), __jsx(GridContainer, {\n    justify: \"center\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1142,\n      columnNumber: 23\n    }\n  }, __jsx(GridItem, {\n    xs: 12,\n    sm: 12,\n    md: 9,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1143,\n      columnNumber: 25\n    }\n  }, __jsx(\"input\", {\n    hidden: true,\n    name: \"fazAulas\",\n    type: \"text\",\n    ref: register,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1144,\n      columnNumber: 27\n    }\n  }), __jsx(\"label\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1146,\n      columnNumber: 27\n    }\n  }, \"Na academia, costuma fazer aulas?\"), __jsx(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1147,\n      columnNumber: 27\n    }\n  }), __jsx(Button, {\n    color: \"primary\",\n    fullWidth: true,\n    onClick: () => setValueForm(\"fazAulas\", \"SIM\"),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1148,\n      columnNumber: 27\n    }\n  }, \"Sim\"), __jsx(Button, {\n    color: \"secondary\",\n    fullWidth: true,\n    onClick: () => setValueForm(\"fazAulas\", \"NÃO\"),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1152,\n      columnNumber: 27\n    }\n  }, \"N\\xE3o\"))))), __jsx(Grow, _extends({\n    in: activeForm === 6,\n    style: {\n      transformOrigin: '0 0 0',\n      display: activeForm === 6 ? \"block\" : \"none\"\n    }\n  }, activeForm === 6 ? {\n    timeout: 1000\n  } : {}, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1163,\n      columnNumber: 19\n    }\n  }), __jsx(CardBody, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1169,\n      columnNumber: 21\n    }\n  }, error && __jsx(SnackbarContent, {\n    message: __jsx(\"span\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1174,\n        columnNumber: 27\n      }\n    }, __jsx(\"b\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1175,\n        columnNumber: 29\n      }\n    }, \"N\\xE3o encontramos seu CEP\"), \" \", __jsx(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1175,\n        columnNumber: 60\n      }\n    }), \" Tente novamente\") // close\n    ,\n    color: \"warning\",\n    icon: \"info_outline\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1172,\n      columnNumber: 23\n    }\n  }), __jsx(GridContainer, {\n    justify: \"center\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1184,\n      columnNumber: 23\n    }\n  }, __jsx(GridItem, {\n    xs: 12,\n    sm: 12,\n    md: 8,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1185,\n      columnNumber: 25\n    }\n  }, __jsx(\"input\", {\n    hidden: true,\n    name: \"sedentario\",\n    type: \"text\",\n    ref: register,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1188,\n      columnNumber: 27\n    }\n  }), __jsx(\"input\", {\n    hidden: true,\n    name: \"sedentarioTempo\",\n    type: \"text\",\n    ref: register,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1189,\n      columnNumber: 27\n    }\n  }), !isOutro ? __jsx(React.Fragment, null, __jsx(\"label\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1195,\n      columnNumber: 33\n    }\n  }, \"Atualmente, se considera sedent\\xE1rio?\"), __jsx(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1196,\n      columnNumber: 33\n    }\n  }), __jsx(Button, {\n    color: \"primary\",\n    fullWidth: true,\n    onClick: () => setValueForm(\"sedentario\", \"SIM\", true),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1197,\n      columnNumber: 33\n    }\n  }, \"Sim\"), __jsx(Button, {\n    color: \"secondary\",\n    fullWidth: true,\n    onClick: () => setValueForm(\"sedentario\", \"NÃO\"),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1201,\n      columnNumber: 33\n    }\n  }, \"N\\xE3o\")) : __jsx(React.Fragment, null, __jsx(\"label\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1210,\n      columnNumber: 33\n    }\n  }, \"H\\xE1 quanto tempo?\"), __jsx(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1211,\n      columnNumber: 33\n    }\n  }), __jsx(Button, {\n    color: \"primary\",\n    fullWidth: true,\n    onClick: () => setValueForm(\"sedentarioTempo\", \"6 meses\"),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1212,\n      columnNumber: 33\n    }\n  }, \"6 meses\"), __jsx(Button, {\n    color: \"primary\",\n    fullWidth: true,\n    onClick: () => setValueForm(\"sedentarioTempo\", \"6 meses a 2 anos\"),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1216,\n      columnNumber: 33\n    }\n  }, \"6 meses a 2 anos\"), __jsx(Button, {\n    color: \"primary\",\n    fullWidth: true,\n    onClick: () => setValueForm(\"sedentarioTempo\", \"Há mais de 2 anos\"),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1220,\n      columnNumber: 33\n    }\n  }, \"H\\xE1 mais de 2 anos\")))))), __jsx(Grow, _extends({\n    in: activeForm === 7,\n    style: {\n      transformOrigin: '0 0 0',\n      display: activeForm === 7 ? \"block\" : \"none\"\n    }\n  }, activeForm === 7 ? {\n    timeout: 1000\n  } : {}, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1240,\n      columnNumber: 19\n    }\n  }), __jsx(CardBody, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1246,\n      columnNumber: 21\n    }\n  }, error && __jsx(SnackbarContent, {\n    message: __jsx(\"span\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1251,\n        columnNumber: 27\n      }\n    }, __jsx(\"b\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1252,\n        columnNumber: 29\n      }\n    }, \"N\\xE3o encontramos seu CEP\"), \" \", __jsx(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1252,\n        columnNumber: 60\n      }\n    }), \" Tente novamente\") // close\n    ,\n    color: \"warning\",\n    icon: \"info_outline\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1249,\n      columnNumber: 23\n    }\n  }), __jsx(GridContainer, {\n    justify: \"center\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1261,\n      columnNumber: 23\n    }\n  }, __jsx(GridItem, {\n    xs: 12,\n    sm: 12,\n    md: 8,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1262,\n      columnNumber: 25\n    }\n  }, __jsx(\"input\", {\n    hidden: true,\n    name: \"tempoPorDia\",\n    type: \"text\",\n    ref: register,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1264,\n      columnNumber: 27\n    }\n  }), __jsx(\"label\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1266,\n      columnNumber: 27\n    }\n  }, \"Pretende treinar quanto tempo por dia?\"), __jsx(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1267,\n      columnNumber: 27\n    }\n  }), __jsx(Button, {\n    color: \"primary\",\n    fullWidth: true,\n    onClick: () => setValueForm(\"tempoPorDia\", \"10 a 30 minutos\"),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1268,\n      columnNumber: 27\n    }\n  }, \"10 a 30 minutos\"), __jsx(Button, {\n    color: \"primary\",\n    fullWidth: true,\n    onClick: () => setValueForm(\"tempoPorDia\", \"40 a 45 minutos\"),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1272,\n      columnNumber: 27\n    }\n  }, \"40 a 45 minutos\"), __jsx(Button, {\n    color: \"primary\",\n    fullWidth: true,\n    onClick: () => setValueForm(\"tempoPorDia\", \"1 hora ou mais\"),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1276,\n      columnNumber: 27\n    }\n  }, \"1 hora ou mais\"))))), __jsx(Grow, _extends({\n    in: activeForm === 8,\n    style: {\n      transformOrigin: '0 0 0',\n      display: activeForm === 8 ? \"block\" : \"none\"\n    }\n  }, activeForm === 8 ? {\n    timeout: 1000\n  } : {}, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1287,\n      columnNumber: 19\n    }\n  }), __jsx(CardBody, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1293,\n      columnNumber: 21\n    }\n  }, error && __jsx(SnackbarContent, {\n    message: __jsx(\"span\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1298,\n        columnNumber: 27\n      }\n    }, __jsx(\"b\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1299,\n        columnNumber: 29\n      }\n    }, \"N\\xE3o encontramos seu CEP\"), \" \", __jsx(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1299,\n        columnNumber: 60\n      }\n    }), \" Tente novamente\") // close\n    ,\n    color: \"warning\",\n    icon: \"info_outline\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1296,\n      columnNumber: 23\n    }\n  }), __jsx(GridContainer, {\n    justify: \"center\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1308,\n      columnNumber: 23\n    }\n  }, __jsx(GridItem, {\n    xs: 12,\n    sm: 12,\n    md: 8,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1309,\n      columnNumber: 25\n    }\n  }, __jsx(\"input\", {\n    hidden: true,\n    name: \"periodo\",\n    type: \"text\",\n    ref: register,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1310,\n      columnNumber: 27\n    }\n  }), __jsx(\"label\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1311,\n      columnNumber: 27\n    }\n  }, \"Em qual per\\xEDodo deseja o atendimento?\"), __jsx(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1312,\n      columnNumber: 27\n    }\n  }), __jsx(Button, {\n    color: \"primary\",\n    fullWidth: true,\n    onClick: () => setValueForm(\"periodo\", \"Manhã\"),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1313,\n      columnNumber: 27\n    }\n  }, \"Manh\\xE3 - 08:00 \\xE0s 12:00\"), __jsx(Button, {\n    color: \"primary\",\n    fullWidth: true,\n    onClick: () => setValueForm(\"periodo\", \"Tarde\"),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1317,\n      columnNumber: 27\n    }\n  }, \"Tarde - 12:00 \\xE0s 16:00\"), __jsx(Button, {\n    color: \"primary\",\n    fullWidth: true,\n    onClick: () => setValueForm(\"periodo\", \"Noite\"),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1321,\n      columnNumber: 27\n    }\n  }, \"Noite - 16:00 \\xE0s 20:00\"))))), __jsx(Grow, _extends({\n    in: activeForm === 9,\n    style: {\n      transformOrigin: '0 0 0',\n      display: activeForm === 9 ? \"block\" : \"none\"\n    }\n  }, activeForm === 9 ? {\n    timeout: 1000\n  } : {}, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1332,\n      columnNumber: 19\n    }\n  }), __jsx(CardBody, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1338,\n      columnNumber: 21\n    }\n  }, error && __jsx(SnackbarContent, {\n    message: __jsx(\"span\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1343,\n        columnNumber: 27\n      }\n    }, __jsx(\"b\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1344,\n        columnNumber: 29\n      }\n    }, \"N\\xE3o encontramos seu CEP\"), \" \", __jsx(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1344,\n        columnNumber: 60\n      }\n    }), \" Tente novamente\") // close\n    ,\n    color: \"warning\",\n    icon: \"info_outline\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1341,\n      columnNumber: 23\n    }\n  }), __jsx(GridContainer, {\n    justify: \"center\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1353,\n      columnNumber: 23\n    }\n  }, __jsx(GridItem, {\n    xs: 12,\n    sm: 12,\n    md: 8,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1354,\n      columnNumber: 25\n    }\n  }, __jsx(\"input\", {\n    hidden: true,\n    name: \"patologia\",\n    type: \"text\",\n    ref: register,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1357,\n      columnNumber: 27\n    }\n  }), __jsx(\"input\", {\n    hidden: true,\n    name: \"outroPatologia\",\n    type: \"text\",\n    ref: register,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1358,\n      columnNumber: 27\n    }\n  }), !isOutro ? __jsx(React.Fragment, null, __jsx(\"label\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1364,\n      columnNumber: 33\n    }\n  }, \"Possui alguma patologia?\"), __jsx(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1365,\n      columnNumber: 33\n    }\n  }), __jsx(Button, {\n    color: \"secondary\",\n    fullWidth: true,\n    onClick: () => setValueForm(\"patologia\", \"coracao\"),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1366,\n      columnNumber: 33\n    }\n  }, \"Sim, no cora\\xE7\\xE3o\"), __jsx(Button, {\n    color: \"secondary\",\n    fullWidth: true,\n    onClick: () => setValueForm(\"patologia\", \"pulmao\"),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1369,\n      columnNumber: 33\n    }\n  }, \"Sim, no pulm\\xE3o\"), __jsx(Button, {\n    color: \"primary\",\n    fullWidth: true,\n    onClick: () => setValueForm(\"patologia\", \"outro\", true),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1372,\n      columnNumber: 33\n    }\n  }, \"Sim, em outro local\"), __jsx(Button, {\n    color: \"danger\",\n    fullWidth: true,\n    onClick: () => setValueForm(\"patologia\", \"NÃO\"),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1375,\n      columnNumber: 33\n    }\n  }, \"N\\xE3o\")) : __jsx(React.Fragment, null, __jsx(CustomInput, {\n    labelText: \"Qual o problema e onde seria?\",\n    labelError: errors.outroPatologia && errors.outroPatologia.message,\n    error: errors.outroPatologia ? true : false,\n    id: \"outroPatologiaInput\",\n    formControlProps: {\n      fullWidth: true\n    },\n    inputProps: {\n      name: \"outroPatologiaInput\",\n      inputRef: register,\n      onChange: event => handleChangeOutro(event, \"outroPatologia\")\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1383,\n      columnNumber: 33\n    }\n  })))))), __jsx(Grow, _extends({\n    in: activeForm === 10,\n    style: {\n      transformOrigin: '0 0 0',\n      display: activeForm === 10 ? \"block\" : \"none\"\n    }\n  }, activeForm === 10 ? {\n    timeout: 1000\n  } : {}, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1411,\n      columnNumber: 19\n    }\n  }), __jsx(CardBody, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1417,\n      columnNumber: 21\n    }\n  }, error && __jsx(SnackbarContent, {\n    message: __jsx(\"span\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1422,\n        columnNumber: 27\n      }\n    }, __jsx(\"b\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1423,\n        columnNumber: 29\n      }\n    }, \"N\\xE3o encontramos seu CEP\"), \" \", __jsx(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1423,\n        columnNumber: 60\n      }\n    }), \" Tente novamente\") // close\n    ,\n    color: \"warning\",\n    icon: \"info_outline\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1420,\n      columnNumber: 23\n    }\n  }), __jsx(GridContainer, {\n    justify: \"center\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1432,\n      columnNumber: 23\n    }\n  }, __jsx(GridItem, {\n    xs: 12,\n    sm: 12,\n    md: 8,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1433,\n      columnNumber: 25\n    }\n  }, __jsx(\"input\", {\n    hidden: true,\n    name: \"osseoArticular\",\n    type: \"text\",\n    ref: register,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1435,\n      columnNumber: 27\n    }\n  }), __jsx(\"input\", {\n    hidden: true,\n    name: \"qualOsseoArticular\",\n    type: \"text\",\n    ref: register,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1436,\n      columnNumber: 27\n    }\n  }), !isOutro ? __jsx(React.Fragment, null, __jsx(\"label\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1442,\n      columnNumber: 33\n    }\n  }, \"Possui algum problema \\xF3sseo articular?\"), __jsx(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1443,\n      columnNumber: 33\n    }\n  }), __jsx(Button, {\n    color: \"primary\",\n    fullWidth: true,\n    onClick: () => setValueForm(\"osseoArticular\", \"SIM\", true),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1444,\n      columnNumber: 33\n    }\n  }, \"Sim\"), __jsx(Button, {\n    color: \"secondary\",\n    fullWidth: true,\n    onClick: () => setValueForm(\"osseoArticular\", \"NÃO\"),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1447,\n      columnNumber: 33\n    }\n  }, \"N\\xE3o\")) : __jsx(React.Fragment, null, __jsx(CustomInput, {\n    labelText: \"Qual seria?\",\n    labelError: errors.qualOsseoArticular && errors.qualOsseoArticular.message,\n    error: errors.qualOsseoArticular ? true : false,\n    id: \"qualOsseoArticularInput\",\n    formControlProps: {\n      fullWidth: true\n    },\n    inputProps: {\n      name: \"qualOsseoArticularInput\",\n      inputRef: register,\n      onChange: event => handleChangeOutro(event, \"qualOsseoArticular\")\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1455,\n      columnNumber: 33\n    }\n  })))))), __jsx(Grow, _extends({\n    in: activeForm === 11,\n    style: {\n      transformOrigin: '0 0 0',\n      display: activeForm === 11 ? \"block\" : \"none\"\n    }\n  }, activeForm === 11 ? {\n    timeout: 1000\n  } : {}, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1484,\n      columnNumber: 19\n    }\n  }), __jsx(CardBody, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1490,\n      columnNumber: 21\n    }\n  }, error && __jsx(SnackbarContent, {\n    message: __jsx(\"span\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1495,\n        columnNumber: 27\n      }\n    }, __jsx(\"b\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1496,\n        columnNumber: 29\n      }\n    }, \"N\\xE3o encontramos seu CEP\"), \" \", __jsx(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1496,\n        columnNumber: 60\n      }\n    }), \" Tente novamente\") // close\n    ,\n    color: \"warning\",\n    icon: \"info_outline\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1493,\n      columnNumber: 23\n    }\n  }), __jsx(GridContainer, {\n    justify: \"center\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1505,\n      columnNumber: 23\n    }\n  }, __jsx(GridItem, {\n    xs: 12,\n    sm: 12,\n    md: 8,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1506,\n      columnNumber: 25\n    }\n  }, __jsx(\"input\", {\n    hidden: true,\n    name: \"cirurgia\",\n    type: \"text\",\n    ref: register,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1508,\n      columnNumber: 27\n    }\n  }), __jsx(\"input\", {\n    hidden: true,\n    name: \"qualCirurgia\",\n    type: \"text\",\n    ref: register,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1509,\n      columnNumber: 27\n    }\n  }), !isOutro ? __jsx(React.Fragment, null, __jsx(\"label\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1515,\n      columnNumber: 33\n    }\n  }, \"J\\xE1 sofreu alguma cirurgia?\"), __jsx(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1516,\n      columnNumber: 33\n    }\n  }), __jsx(Button, {\n    color: \"primary\",\n    fullWidth: true,\n    onClick: () => setValueForm(\"cirurgia\", \"SIM\", true),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1517,\n      columnNumber: 33\n    }\n  }, \"Sim\"), __jsx(Button, {\n    color: \"secondary\",\n    fullWidth: true,\n    onClick: () => setValueForm(\"cirurgia\", \"NÃO\"),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1520,\n      columnNumber: 33\n    }\n  }, \"N\\xE3o\")) : __jsx(React.Fragment, null, __jsx(CustomInput, {\n    labelText: \"Qual cirurgia?\",\n    labelError: errors.qualCirurgia && errors.qualCirurgia.message,\n    error: errors.qualCirurgia ? true : false,\n    id: \"qualCirurgiaInput\",\n    formControlProps: {\n      fullWidth: true\n    },\n    inputProps: {\n      name: \"qualCirurgiaInput\",\n      inputRef: register,\n      onChange: event => handleChangeOutro(event, \"qualCirurgia\")\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1528,\n      columnNumber: 33\n    }\n  })))))), __jsx(Grow, _extends({\n    in: activeForm === 12,\n    style: {\n      transformOrigin: '0 0 0',\n      display: activeForm === 12 ? \"block\" : \"none\"\n    }\n  }, activeForm === 12 ? {\n    timeout: 1000\n  } : {}, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1557,\n      columnNumber: 19\n    }\n  }), __jsx(CardBody, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1563,\n      columnNumber: 21\n    }\n  }, error && __jsx(SnackbarContent, {\n    message: __jsx(\"span\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1568,\n        columnNumber: 27\n      }\n    }, __jsx(\"b\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1569,\n        columnNumber: 29\n      }\n    }, \"N\\xE3o encontramos seu CEP\"), \" \", __jsx(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1569,\n        columnNumber: 60\n      }\n    }), \" Tente novamente\") // close\n    ,\n    color: \"warning\",\n    icon: \"info_outline\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1566,\n      columnNumber: 23\n    }\n  }), __jsx(GridContainer, {\n    justify: \"center\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1578,\n      columnNumber: 23\n    }\n  }, __jsx(GridItem, {\n    xs: 12,\n    sm: 12,\n    md: 8,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1579,\n      columnNumber: 25\n    }\n  }, __jsx(\"input\", {\n    hidden: true,\n    name: \"internacao\",\n    type: \"text\",\n    ref: register,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1581,\n      columnNumber: 27\n    }\n  }), __jsx(\"input\", {\n    hidden: true,\n    name: \"qualInternacao\",\n    type: \"text\",\n    ref: register,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1582,\n      columnNumber: 27\n    }\n  }), !isOutro ? __jsx(React.Fragment, null, __jsx(\"label\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1588,\n      columnNumber: 33\n    }\n  }, \"Sofreu alguma interna\\xE7\\xE3o recentemente?\"), __jsx(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1589,\n      columnNumber: 33\n    }\n  }), __jsx(Button, {\n    color: \"primary\",\n    fullWidth: true,\n    onClick: () => setValueForm(\"internacao\", \"SIM\", true),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1590,\n      columnNumber: 33\n    }\n  }, \"Sim\"), __jsx(Button, {\n    color: \"secondary\",\n    fullWidth: true,\n    onClick: () => setValueForm(\"internacao\", \"NÃO\"),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1593,\n      columnNumber: 33\n    }\n  }, \"N\\xE3o\")) : __jsx(React.Fragment, null, __jsx(CustomInput, {\n    labelText: \"Qual seria?\",\n    labelError: errors.qualInternacao && errors.qualInternacao.message,\n    error: errors.qualInternacao ? true : false,\n    id: \"qualInternacaoInput\",\n    formControlProps: {\n      fullWidth: true\n    },\n    inputProps: {\n      name: \"qualInternacaoInput\",\n      inputRef: register,\n      onChange: event => handleChangeOutro(event, \"qualInternacao\")\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1601,\n      columnNumber: 33\n    }\n  })))))), __jsx(Grow, _extends({\n    in: activeForm === 13,\n    style: {\n      transformOrigin: '0 0 0',\n      display: activeForm === 13 ? \"block\" : \"none\"\n    }\n  }, activeForm === 13 ? {\n    timeout: 1000\n  } : {}, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1629,\n      columnNumber: 19\n    }\n  }), __jsx(CardBody, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1635,\n      columnNumber: 21\n    }\n  }, error && __jsx(SnackbarContent, {\n    message: __jsx(\"span\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1640,\n        columnNumber: 27\n      }\n    }, __jsx(\"b\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1641,\n        columnNumber: 29\n      }\n    }, \"N\\xE3o encontramos seu CEP\"), \" \", __jsx(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1641,\n        columnNumber: 60\n      }\n    }), \" Tente novamente\") // close\n    ,\n    color: \"warning\",\n    icon: \"info_outline\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1638,\n      columnNumber: 23\n    }\n  }), __jsx(GridContainer, {\n    justify: \"center\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1650,\n      columnNumber: 23\n    }\n  }, __jsx(GridItem, {\n    xs: 12,\n    sm: 12,\n    md: 8,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1651,\n      columnNumber: 25\n    }\n  }, __jsx(\"input\", {\n    hidden: true,\n    name: \"medicamento\",\n    type: \"text\",\n    ref: register,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1653,\n      columnNumber: 27\n    }\n  }), __jsx(\"input\", {\n    hidden: true,\n    name: \"qualMedicamento\",\n    type: \"text\",\n    ref: register,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1654,\n      columnNumber: 27\n    }\n  }), !isOutro ? __jsx(React.Fragment, null, __jsx(\"label\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1660,\n      columnNumber: 33\n    }\n  }, \"Faz uso de algum medicamento?\"), __jsx(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1661,\n      columnNumber: 33\n    }\n  }), __jsx(Button, {\n    color: \"primary\",\n    fullWidth: true,\n    onClick: () => setValueForm(\"medicamento\", \"SIM\", true),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1662,\n      columnNumber: 33\n    }\n  }, \"Sim\"), __jsx(Button, {\n    color: \"secondary\",\n    fullWidth: true,\n    onClick: () => setValueForm(\"medicamento\", \"NÃO\"),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1665,\n      columnNumber: 33\n    }\n  }, \"N\\xE3o\")) : __jsx(React.Fragment, null, __jsx(CustomInput, {\n    labelText: \"Qual seria?\",\n    labelError: errors.qualMedicamento && errors.qualMedicamento.message,\n    error: errors.qualMedicamento ? true : false,\n    id: \"qualMedicamentoInput\",\n    formControlProps: {\n      fullWidth: true\n    },\n    inputProps: {\n      name: \"qualMedicamentoInput\",\n      inputRef: register,\n      onChange: event => handleChangeOutro(event, \"qualMedicamento\")\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1673,\n      columnNumber: 33\n    }\n  })))))), __jsx(Grow, _extends({\n    in: activeForm === 14,\n    style: {\n      transformOrigin: '0 0 0',\n      display: activeForm === 14 ? \"block\" : \"none\"\n    }\n  }, activeForm === 14 ? {\n    timeout: 1000\n  } : {}, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1704,\n      columnNumber: 19\n    }\n  }), __jsx(CardBody, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1710,\n      columnNumber: 21\n    }\n  }, error && __jsx(SnackbarContent, {\n    message: __jsx(\"span\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1715,\n        columnNumber: 27\n      }\n    }, __jsx(\"b\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1716,\n        columnNumber: 29\n      }\n    }, \"N\\xE3o encontramos seu CEP\"), \" \", __jsx(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1716,\n        columnNumber: 60\n      }\n    }), \" Tente novamente\") // close\n    ,\n    color: \"warning\",\n    icon: \"info_outline\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1713,\n      columnNumber: 23\n    }\n  }), __jsx(GridContainer, {\n    justify: \"center\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1725,\n      columnNumber: 23\n    }\n  }, __jsx(GridItem, {\n    xs: 12,\n    sm: 12,\n    md: 8,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1726,\n      columnNumber: 25\n    }\n  }, __jsx(\"input\", {\n    hidden: true,\n    name: \"fuma\",\n    type: \"text\",\n    ref: register,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1729,\n      columnNumber: 27\n    }\n  }), __jsx(\"label\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1731,\n      columnNumber: 27\n    }\n  }, \"Possui o h\\xE1bito de fumar?\"), __jsx(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1732,\n      columnNumber: 27\n    }\n  }), __jsx(Button, {\n    color: \"primary\",\n    fullWidth: true,\n    onClick: () => setValueForm(\"fuma\", \"SIM\"),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1733,\n      columnNumber: 27\n    }\n  }, \"Sim\"), __jsx(Button, {\n    color: \"secondary\",\n    fullWidth: true,\n    onClick: () => setValueForm(\"fuma\", \"NÃO\"),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1736,\n      columnNumber: 27\n    }\n  }, \"N\\xE3o\"))))), __jsx(Grow, _extends({\n    in: activeForm === 15,\n    style: {\n      transformOrigin: '0 0 0',\n      display: activeForm === 15 ? \"block\" : \"none\"\n    }\n  }, activeForm === 15 ? {\n    timeout: 1000\n  } : {}, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1748,\n      columnNumber: 19\n    }\n  }), __jsx(CardBody, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1754,\n      columnNumber: 21\n    }\n  }, error && __jsx(SnackbarContent, {\n    message: __jsx(\"span\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1759,\n        columnNumber: 27\n      }\n    }, __jsx(\"b\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1760,\n        columnNumber: 29\n      }\n    }, \"N\\xE3o encontramos seu CEP\"), \" \", __jsx(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1760,\n        columnNumber: 60\n      }\n    }), \" Tente novamente\") // close\n    ,\n    color: \"warning\",\n    icon: \"info_outline\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1757,\n      columnNumber: 23\n    }\n  }), __jsx(GridContainer, {\n    justify: \"center\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1769,\n      columnNumber: 23\n    }\n  }, __jsx(GridItem, {\n    xs: 12,\n    sm: 12,\n    md: 8,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1770,\n      columnNumber: 25\n    }\n  }, __jsx(\"input\", {\n    hidden: true,\n    name: \"nutricionista\",\n    type: \"text\",\n    ref: register,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1772,\n      columnNumber: 27\n    }\n  }), __jsx(\"label\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1774,\n      columnNumber: 27\n    }\n  }, \"Faz acompanhamento com um(a) nutricionista?\"), __jsx(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1775,\n      columnNumber: 27\n    }\n  }), __jsx(Button, {\n    color: \"primary\",\n    fullWidth: true,\n    onClick: () => setValueForm(\"nutricionista\", \"SIM\"),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1776,\n      columnNumber: 27\n    }\n  }, \"Sim\"), __jsx(Button, {\n    color: \"secondary\",\n    fullWidth: true,\n    onClick: () => setValueForm(\"nutricionista\", \"NÃO\"),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1779,\n      columnNumber: 27\n    }\n  }, \"N\\xE3o\"))))), __jsx(Grow, _extends({\n    in: activeForm === 16,\n    style: {\n      transformOrigin: '0 0 0',\n      display: activeForm === 16 ? \"block\" : \"none\"\n    }\n  }, activeForm === 16 ? {\n    timeout: 1000\n  } : {}, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1791,\n      columnNumber: 19\n    }\n  }), __jsx(CardBody, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1797,\n      columnNumber: 21\n    }\n  }, error && __jsx(SnackbarContent, {\n    message: __jsx(\"span\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1802,\n        columnNumber: 27\n      }\n    }, __jsx(\"b\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1803,\n        columnNumber: 29\n      }\n    }, \"N\\xE3o encontramos seu CEP\"), \" \", __jsx(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1803,\n        columnNumber: 60\n      }\n    }), \" Tente novamente\") // close\n    ,\n    color: \"warning\",\n    icon: \"info_outline\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1800,\n      columnNumber: 23\n    }\n  }), __jsx(GridContainer, {\n    justify: \"center\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1812,\n      columnNumber: 23\n    }\n  }, __jsx(GridItem, {\n    xs: 12,\n    sm: 12,\n    md: 8,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1813,\n      columnNumber: 25\n    }\n  }, __jsx(\"input\", {\n    hidden: true,\n    name: \"personalTrainer\",\n    type: \"text\",\n    ref: register,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1815,\n      columnNumber: 27\n    }\n  }), __jsx(\"label\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1817,\n      columnNumber: 27\n    }\n  }, \"Faz acompanhamento com um(a) personal trainer?\"), __jsx(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1818,\n      columnNumber: 27\n    }\n  }), __jsx(Button, {\n    color: \"primary\",\n    fullWidth: true,\n    onClick: () => setValueForm(\"personalTrainer\", \"SIM\"),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1819,\n      columnNumber: 27\n    }\n  }, \"Sim\"), __jsx(Button, {\n    color: \"secondary\",\n    fullWidth: true,\n    onClick: () => setValueForm(\"personalTrainer\", \"NÃO\"),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1822,\n      columnNumber: 27\n    }\n  }, \"N\\xE3o\"))))), __jsx(Grow, _extends({\n    in: activeForm === 17,\n    style: {\n      transformOrigin: '0 0 0',\n      display: activeForm === 17 ? \"block\" : \"none\"\n    }\n  }, activeForm === 17 ? {\n    timeout: 1000\n  } : {}, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1834,\n      columnNumber: 19\n    }\n  }), __jsx(CardBody, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1840,\n      columnNumber: 21\n    }\n  }, error && __jsx(SnackbarContent, {\n    message: __jsx(\"span\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1845,\n        columnNumber: 27\n      }\n    }, __jsx(\"b\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1846,\n        columnNumber: 29\n      }\n    }, \"N\\xE3o encontramos seu CEP\"), \" \", __jsx(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1846,\n        columnNumber: 60\n      }\n    }), \" Tente novamente\") // close\n    ,\n    color: \"warning\",\n    icon: \"info_outline\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1843,\n      columnNumber: 23\n    }\n  }), __jsx(GridContainer, {\n    justify: \"center\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1878,\n      columnNumber: 23\n    }\n  }, __jsx(GridItem, {\n    xs: 12,\n    sm: 12,\n    md: 8,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1879,\n      columnNumber: 25\n    }\n  }, __jsx(\"input\", {\n    hidden: true,\n    name: \"equipamentosSN\",\n    type: \"text\",\n    ref: register,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1881,\n      columnNumber: 27\n    }\n  }), __jsx(\"input\", {\n    hidden: true,\n    name: \"equipamentos\",\n    type: \"text\",\n    ref: register,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1882,\n      columnNumber: 27\n    }\n  }), !isOutro ? __jsx(React.Fragment, null, __jsx(\"label\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1888,\n      columnNumber: 33\n    }\n  }, \"Possui algum equipamento de treino?\"), __jsx(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1889,\n      columnNumber: 33\n    }\n  }), __jsx(Button, {\n    color: \"primary\",\n    fullWidth: true,\n    onClick: () => setValueForm(\"equipamentosSN\", \"SIM\", true),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1890,\n      columnNumber: 33\n    }\n  }, \"Sim\"), __jsx(Button, {\n    color: \"secondary\",\n    fullWidth: true,\n    onClick: () => setValueForm(\"equipamentosSN\", \"NÃO\"),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1893,\n      columnNumber: 33\n    }\n  }, \"N\\xE3o\")) : __jsx(React.Fragment, null, __jsx(CustomInput, {\n    labelText: \"Quais seriam?\",\n    labelError: errors.equipamentos && errors.equipamentos.message,\n    error: errors.equipamentos ? true : false,\n    id: \"equipamentosInput\",\n    formControlProps: {\n      fullWidth: true\n    },\n    inputProps: {\n      name: \"equipamentosInput\",\n      multiline: true,\n      rows: 5,\n      inputRef: register,\n      onChange: event => handleChangeOutro(event, \"equipamentos\")\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1902,\n      columnNumber: 33\n    }\n  })))))), __jsx(CardFooter, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1935,\n      columnNumber: 19\n    }\n  }, __jsx(GridContainer, {\n    justify: \"center\",\n    style: {\n      margin: \"0\",\n      width: \"100%\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1936,\n      columnNumber: 21\n    }\n  }, __jsx(GridItem, {\n    xs: 12,\n    sm: 12,\n    md: 12,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1938,\n      columnNumber: 23\n    }\n  }, isLoading && __jsx(CircularProgress, {\n    style: {\n      color: \"#425CD0\"\n    },\n    size: 30,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1942,\n      columnNumber: 25\n    }\n  }), !isLoading && __jsx(React.Fragment, null, __jsx(Button, {\n    color: \"primary\",\n    fullWidth: true,\n    onClick: handleNext,\n    style: {\n      display: isDisableNext ? \"none\" : \"block\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1946,\n      columnNumber: 27\n    }\n  }, \"Pr\\xF3ximo\"))), __jsx(GridItem, {\n    xs: 12,\n    sm: 12,\n    md: 12,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1956,\n      columnNumber: 23\n    }\n  }, __jsx(Button, {\n    simple: true,\n    color: \"primary\",\n    fullWidth: true,\n    onClick: handleBack,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1958,\n      columnNumber: 25\n    }\n  }, \"Voltar\"))))))))))));\n}","map":{"version":3,"sources":["/Users/gabrieldossantos/Google Drive (webmaster@wigoo.com.br)/Wigoo Desenvolvimento/justfit.com.br/clicoupersonal.com.br/checkout/pages-sections/checkout/SectionAnamnese.js"],"names":["React","useEffect","useState","axios","withScriptjs","withGoogleMap","GoogleMap","Marker","TagManager","makeStyles","Checkbox","FormControlLabel","InputAdornment","PinDrop","Phone","Check","Email","EventIcon","Favorite","AssignmentInd","CircularProgress","GridContainer","GridItem","InfoArea","Card","CardHeader","CardBody","CardFooter","CustomInput","Button","SnackbarContent","FormHelperText","FormControl","FormGroup","Select","MenuItem","InputLabel","Grow","InputMask","MaskedInput","PropTypes","createNumberMask","useForm","yupResolver","yup","setLocale","checkoutStyle","city","useStyles","TextMaskCustom","props","inputRef","other","ref","inputElement","propTypes","func","isRequired","PhoneMask","DateMask","AlturaMask","defaultMaskOptions","prefix","suffix","includeThousandsSeparator","thousandsSeparatorSymbol","allowDecimal","decimalSymbol","decimalLimit","integerLimit","allowNegative","allowLeadingZeroes","PesoMask","maskOptions","currencyMask","defaultProps","inputMode","inputmode","string","shape","boolean","requireDecimal","number","mixed","notType","_ref","type","default","required","oneOf","notOneOf","length","min","max","email","url","trim","lowercase","uppercase","lessThan","moreThan","notEqual","positive","negative","integer","date","array","regexCPF","cpfValidate","cpf","console","log","isValidCPF","replace","soma","resto","i","parseInt","substring","isValidPhone","phone","test","isValidDate","addMethod","message","value","SignupSchema","object","nome","telefone","dataNascimento","cep","endereco","numero","complemento","bairro","estado","cidade","idade","peso","altura","matches","outroPatologia","SectionAnamnese","register","trigger","handleSubmit","setValue","getValues","errors","resolver","mode","onSubmit","data","dataLayer","event","userId","userProject","page","checked","setChecked","handleToggle","currentIndex","indexOf","newChecked","push","splice","isAluno","setIsAluno","activeForm","setActiveForm","activeField","setActiveField","isDisableNext","setIsDisableNext","error","setError","isLoading","setIsLoading","isOutro","setIsOutro","handleNext","result","anamneseForm","setDataSale","prevDataSale","sexo","anamnese","prevActiveStep","handleFieldActive","handleBack","setStepCheckout","handleFocus","target","selectionStart","selectionEnd","select","handleChange","handleChangeOutro","name","step","setValueForm","outro","setAnamnese","objetivo","habitoTreino","frequenciaTreino","fazMusculacao","fazAulas","sedentario","sedentarioTempo","reclusaoTreino","tempoPorDia","periodo","patologia","osseoArticular","qualOsseoArticular","cirurgia","qualCirurgia","internacao","qualInternacao","medicamento","qualMedicamento","fuma","nutricionista","personalTrainer","equipamentos","classes","contacts","section","backgroundColor","container","transformOrigin","timeout","card1","textCenter","cardTitle","display","fullWidth","placeholder","inputComponent","onChange","endAdornment","onClick","multiline","rows","margin","width","color"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport { useEffect, useState } from \"react\";\nimport axios from 'axios';\n// react components used to create a google map\nimport {\n  withScriptjs,\n  withGoogleMap,\n  GoogleMap,\n  Marker\n} from \"react-google-maps\";\nimport TagManager from 'react-gtm-module';\n// @material-ui/core components\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Checkbox from \"@material-ui/core/Checkbox\";\nimport FormControlLabel from \"@material-ui/core/FormControlLabel\";\nimport InputAdornment from \"@material-ui/core/InputAdornment\";\n// @material-ui/icons\nimport PinDrop from \"@material-ui/icons/PinDrop\";\nimport Phone from \"@material-ui/icons/Phone\";\nimport Check from \"@material-ui/icons/Check\";\nimport Email from \"@material-ui/icons/Email\";\nimport EventIcon from '@material-ui/icons/Event';\nimport Favorite from \"@material-ui/icons/Favorite\";\nimport AssignmentInd from \"@material-ui/icons/AssignmentInd\";\n// core components\nimport CircularProgress from '@material-ui/core/CircularProgress';\nimport GridContainer from \"components/Grid/GridContainer.js\";\nimport GridItem from \"components/Grid/GridItem.js\";\nimport InfoArea from \"components/InfoArea/InfoArea.js\";\nimport Card from \"components/Card/Card.js\";\nimport CardHeader from \"components/Card/CardHeader.js\";\nimport CardBody from \"components/Card/CardBody.js\";\nimport CardFooter from \"components/Card/CardFooter.js\";\nimport CustomInput from \"components/CustomInput/CustomInput.js\";\nimport Button from \"components/CustomButtons/Button.js\";\nimport SnackbarContent from \"components/Snackbar/SnackbarContent.js\";\nimport FormHelperText from '@material-ui/core/FormHelperText'; \n\nimport FormControl from '@material-ui/core/FormControl';\nimport FormGroup from '@material-ui/core/FormGroup';\nimport Select from \"@material-ui/core/Select\";\nimport MenuItem from \"@material-ui/core/MenuItem\";\nimport InputLabel from \"@material-ui/core/InputLabel\";\n\nimport Grow from '@material-ui/core/Grow';\n\n\nimport InputMask from \"react-input-mask\";\nimport MaskedInput from 'react-text-mask';\nimport PropTypes from 'prop-types';\nimport createNumberMask from 'text-mask-addons/dist/createNumberMask'\n\nimport { useForm } from \"react-hook-form\";\nimport { yupResolver } from '@hookform/resolvers';\nimport * as yup from \"yup\";\nimport { setLocale } from 'yup';\n\nimport checkoutStyle from \"assets/jss/nextjs-material-kit-pro/pages/checkoutSections/checkoutStyle.js\";\n\nimport city from \"assets/img/examples/city.jpg\";\n\nconst useStyles = makeStyles(checkoutStyle);\n\nfunction TextMaskCustom(props) {\n  const { inputRef, ...other } = props;\n\n  return (\n    <MaskedInput\n      {...other}\n      ref={(ref) => {\n        inputRef(ref ? ref.inputElement : null);\n      }}      \n      mask={[/[0-9]/, /[0-9]/, /[0-9]/, '.', /[0-9]/, /[0-9]/, /[0-9]/, '.', /[0-9]/, /[0-9]/, /[0-9]/, '-', /[0-9]/, /[0-9]/]}\n      // placeholderChar={'\\u2000'}\n      showMask\n    />\n  );\n}\n\nTextMaskCustom.propTypes = {\n  inputRef: PropTypes.func.isRequired,\n};\n\n\nfunction PhoneMask(props) {\n  const { inputRef, ...other } = props;\n\n  return (\n    <MaskedInput\n      {...other}\n      ref={(ref) => {\n        inputRef(ref ? ref.inputElement : null);\n      }}      \n      mask={['(', /[1-9]/, /[0-9]/, ')', ' ', /[1-9]/, /[0-9]/, /[0-9]/, /[0-9]/, /[0-9]/, '-', /[0-9]/, /[0-9]/, /[0-9]/, /[0-9]/]}\n      // placeholderChar={'\\u2000'}\n      showMask\n    />\n  );\n}\n\nPhoneMask.propTypes = {\n  inputRef: PropTypes.func.isRequired,\n};\n\nfunction DateMask(props) {\n  const { inputRef, ...other } = props;\n\n  return (\n    <MaskedInput\n      {...other}\n      ref={(ref) => {\n        inputRef(ref ? ref.inputElement : null);\n      }}\n      // mask={['(', /[1-9]/, /\\d/, /\\d/, ')', ' ', /\\d/, /\\d/, /\\d/, '-', /\\d/, /\\d/, /\\d/, /\\d/]}\n      mask={[/\\d/, /\\d/, '/', /\\d/, /\\d/, '/', /\\d/, /\\d/, /\\d/, /\\d/]}\n      // placeholderChar={'\\u2000'}\n      showMask\n    />\n  );\n}\n\nDateMask.propTypes = {\n  inputRef: PropTypes.func.isRequired,\n};\n\nfunction AlturaMask(props) {\n  const { inputRef, ...other } = props;\n\n  return (\n    <MaskedInput\n      {...other}\n      ref={(ref) => {\n        inputRef(ref ? ref.inputElement : null);\n      }}\n      // mask={['(', /[1-9]/, /\\d/, /\\d/, ')', ' ', /\\d/, /\\d/, /\\d/, '-', /\\d/, /\\d/, /\\d/, /\\d/]}\n      mask={[/[0-9]/, ',', /[0-9]/, /[0-9]/]}\n      // guide={false}\n      placeholderChar={'\\u2000'}\n      showMask\n    />\n  );\n}\n\nAlturaMask.propTypes = {\n  inputRef: PropTypes.func.isRequired,\n};\n\n\nconst defaultMaskOptions = {\n  prefix: '',\n  suffix: '',\n  includeThousandsSeparator: true,\n  thousandsSeparatorSymbol: ',',\n  allowDecimal: true,\n  decimalSymbol: ',',\n  decimalLimit: 2, // how many digits allowed after the decimal\n  integerLimit: 3, // limit length of integer numbers\n  // requireDecimal: true,\n  allowNegative: false,\n  allowLeadingZeroes: true,\n}\n\nconst PesoMask = (props) => {\n  const { inputRef, maskOptions, ...other } = props;\n\n  const currencyMask = createNumberMask({\n    ...defaultMaskOptions,\n    ...maskOptions,\n  })\n\n\n  return (\n    <MaskedInput\n      {...other}\n      ref={(ref) => {\n        inputRef(ref ? ref.inputElement : null);\n      }}\n      mask={currencyMask}\n      guide={false}\n      placeholderChar={'\\u2000'}\n      showMask\n    />\n  );\n}\n\nPesoMask.defaultProps = {\n  inputMode: 'numeric',\n  maskOptions: {},\n}\n\nPesoMask.propTypes = {\n  inputRef: PropTypes.func.isRequired,\n  inputmode: PropTypes.string,\n  maskOptions: PropTypes.shape({\n    prefix: PropTypes.string,\n    suffix: PropTypes.string,\n    includeThousandsSeparator: PropTypes.boolean,\n    thousandsSeparatorSymbol: PropTypes.string,\n    allowDecimal: PropTypes.boolean,\n    decimalSymbol: PropTypes.string,\n    decimalLimit: PropTypes.string,\n    requireDecimal: PropTypes.boolean,\n    allowNegative: PropTypes.boolean,\n    allowLeadingZeroes: PropTypes.boolean,\n    integerLimit: PropTypes.number,\n  }),\n};\n\n\n\n\n// const AlturaMask = (props) => {\n//   const { inputRef, maskOptions, ...other } = props;\n\n//   const currencyMask = createNumberMask({\n//     ...defaultMaskOptions,    \n//     ...maskOptions,\n//     integerLimit: 1, // limit length of integer numbers\n//   })\n\n\n//   return (\n//     <MaskedInput\n//       {...other}\n//       ref={(ref) => {\n//         inputRef(ref ? ref.inputElement : null);\n//       }}\n//       mask={currencyMask}\n//       guide={false}\n//       placeholderChar={'\\u2000'}\n//       showMask\n//     />\n//   );\n// }\n\n// AlturaMask.defaultProps = {\n//   inputMode: 'numeric',\n//   maskOptions: {},\n// }\n\n// AlturaMask.propTypes = {\n//   inputRef: PropTypes.func.isRequired,\n//   inputmode: PropTypes.string,\n//   maskOptions: PropTypes.shape({\n//     prefix: PropTypes.string,\n//     suffix: PropTypes.string,\n//     includeThousandsSeparator: PropTypes.boolean,\n//     thousandsSeparatorSymbol: PropTypes.string,\n//     allowDecimal: PropTypes.boolean,\n//     decimalSymbol: PropTypes.string,\n//     decimalLimit: PropTypes.string,\n//     requireDecimal: PropTypes.boolean,\n//     allowNegative: PropTypes.boolean,\n//     allowLeadingZeroes: PropTypes.boolean,\n//     integerLimit: PropTypes.number,\n//   }),\n// };\n\n\nsetLocale({  \n  mixed: {\n    notType: function notType(_ref) {\n      switch (_ref.type) {\n        case 'number':\n          return 'deve ser um número';\n        case 'string':\n          return 'deve ser um texto';\n        default:\n          return 'formato errado';\n      }\n    },\n    default: 'é inválido',\n    required: 'Desculpe, este campo é obrigatório',\n    oneOf: 'deve ser um dos seguintes valores: ${values}',\n    notOneOf: 'não pode ser um dos seguintes valores: ${values}',\n  },\n  string: {\n      length: 'deve ter exatamente ${length} caracteres',\n      min: 'deve ter pelo menos ${min} caracteres',\n      max: 'deve ter no máximo ${max} caracteres',\n      email: 'Por favor, informe um e-mail inválido',\n      url: 'deve ter um formato de URL válida',\n      trim: 'não deve conter espaços no início ou no fim.',\n      lowercase: 'deve estar em maiúsculo',\n      uppercase: 'deve estar em minúsculo',\n  },\n  number: {\n      min: 'deve ser no mínimo ${min}',\n      max: 'deve ser no máximo ${max}',\n      lessThan: 'deve ser menor que ${less}',\n      moreThan: 'deve ser maior que ${more}',\n      notEqual: 'não pode ser igual à ${notEqual}',\n      positive: 'deve ser um número posítivo',\n      negative: 'deve ser um número negativo',\n      integer: 'deve ser um número inteiro',      \n  },\n      date: {\n      min: 'deve ser maior que a data ${min}',\n      max: 'deve ser menor que a data ${max}',\n  },\n      array: {\n      min: 'deve ter no mínimo ${min} itens',\n      max: 'deve ter no máximo ${max} itens',\n  }\n});\n\n\nconst regexCPF = /([0-9]{2}[\\.]?[0-9]{3}[\\.]?[0-9]{3}[\\/]?[0-9]{4}[-]?[0-9]{2})|([0-9]{3}[\\.]?[0-9]{3}[\\.]?[0-9]{3}[-]?[0-9]{2})/gm;\nfunction cpfValidate(cpf) {\n\tconsole.log(\"Validatring\", cpf);\n\treturn cpf.length > 10\n}\n\nfunction isValidCPF(cpf) {\n  if (typeof cpf !== \"string\") return false\n  cpf = cpf.replace(/[\\s.-]*/igm, '')\n  if (\n      !cpf ||\n      cpf.length != 11 ||\n      cpf == \"00000000000\" ||\n      cpf == \"11111111111\" ||\n      cpf == \"22222222222\" ||\n      cpf == \"33333333333\" ||\n      cpf == \"44444444444\" ||\n      cpf == \"55555555555\" ||\n      cpf == \"66666666666\" ||\n      cpf == \"77777777777\" ||\n      cpf == \"88888888888\" ||\n      cpf == \"99999999999\" \n  ) {\n      return false\n  }\n  var soma = 0\n  var resto\n  for (var i = 1; i <= 9; i++) \n      soma = soma + parseInt(cpf.substring(i-1, i)) * (11 - i)\n  resto = (soma * 10) % 11\n  if ((resto == 10) || (resto == 11))  resto = 0\n  if (resto != parseInt(cpf.substring(9, 10)) ) return false\n  soma = 0\n  for (var i = 1; i <= 10; i++) \n      soma = soma + parseInt(cpf.substring(i-1, i)) * (12 - i)\n  resto = (soma * 10) % 11\n  if ((resto == 10) || (resto == 11))  resto = 0\n  if (resto != parseInt(cpf.substring(10, 11) ) ) return false\n  return true\n}\n\nfunction isValidPhone(phone){\n  return /^(?:(?:\\+|00)?(55)\\s?)?(?:\\(?([1-9][0-9])\\)?\\s?)?(?:((?:9\\d|[2-9])\\d{3})\\-?(\\d{4}))$/.test(phone);\n}\n\nfunction isValidDate(date) {\n  return /^((((0?[1-9]|[12]\\d|3[01])[\\.\\-\\/](0?[13578]|1[02])      [\\.\\-\\/]((1[6-9]|[2-9]\\d)?\\d{2}))|((0?[1-9]|[12]\\d|30)[\\.\\-\\/](0?[13456789]|1[012])[\\.\\-\\/]((1[6-9]|[2-9]\\d)?\\d{2}))|((0?[1-9]|1\\d|2[0-8])[\\.\\-\\/]0?2[\\.\\-\\/]((1[6-9]|[2-9]\\d)?\\d{2}))|(29[\\.\\-\\/]0?2[\\.\\-\\/]((1[6-9]|[2-9]\\d)?(0[48]|[2468][048]|[13579][26])|((16|[2468][048]|[3579][26])00)|00)))|(((0[1-9]|[12]\\d|3[01])(0[13578]|1[02])((1[6-9]|[2-9]\\d)?\\d{2}))|((0[1-9]|[12]\\d|30)(0[13456789]|1[012])((1[6-9]|[2-9]\\d)?\\d{2}))|((0[1-9]|1\\d|2[0-8])02((1[6-9]|[2-9]\\d)?\\d{2}))|(2902((1[6-9]|[2-9]\\d)?(0[48]|[2468][048]|[13579][26])|((16|[2468][048]|[3579][26])00)|00))))$/.test(date);\n}\n\nyup.addMethod(yup.string, \"cpf\", function(message) {\n\t// return yup.mixed().test(\"cpf\", message || \"número de CPF inválido\", value => cpfValidate(value));\n\treturn yup.mixed().test(\"cpf\", message || \"número de CPF inválido\", value => isValidCPF(value));\n});\n\nyup.addMethod(yup.string, \"phone\", function(message) {\t\n\treturn yup.mixed().test(\"phone\", message || \"número de celular inválido\", value => isValidPhone(value));\n});\n\nyup.addMethod(yup.string, \"date\", function(message) {\t\n\treturn yup.mixed().test(\"date\", message || \"data inválida\", value => isValidDate(value));\n});\n\n// const SignupSchema = yup.object().shape({\n//   // firstName: yup.string().required(),\n//   cpf: yup\n//     .string()\n//     // .required(), \n// \t\t// .transform(function removeNonNumericalChar(value) {\n// \t\t// \tconsole.log(\"Transforming\", value);\n// \t\t// \treturn this.isType(value) && value !== null ? value.replace(/\\D/g, \"\") : value;\n// \t\t// })\n// \t\t// .matches(regexCPF, \"formato inválido\")\n//     .cpf(\"informe um CPF válido\")\n//     ,\n//   first: yup\n//     .string()\n//     .required(),  \n//   // email: yup.string().required(),\n//   last: yup\n//     .number()\n//     // .required()\n//     .positive()\n//     .integer(),    \n  \n//   // message: yup.string().url(),\n//   // checkboxInput: yup.boolean().oneOf([true],'aceite obrigatório')\n// });\n\nconst SignupSchema = yup.object().shape({  \n  cpf: yup\n    .string()\n    .cpf(\"Por favor, informe um CPF válido\"),  \n  nome: yup\n    .string()\n    .required(),  \n  email: yup\n    .string()\n    .required()\n    .email(),\n  telefone: yup\n    .string()\n    .phone(\"Por favor, informe um número de celular válido\"),\n  dataNascimento: yup\n    .string()\n    .date(\"Por favor, informe uma data válida\"),  \n  \n  cep: yup\n    .string()\n    .required(),\n  endereco: yup\n    .string()\n    .required(),\n  numero: yup\n    .number()\n    .required(),\n  complemento: yup\n    .string(),    \n  bairro: yup\n    .string()\n    .required(),\n  estado: yup\n    .string()\n    .required(),\n  cidade: yup\n    .string()\n    .required(),\n\n\n\n  idade: yup\n    .number()\n    .required(),  \n\n  peso: yup   \n    .string() \n    .required(),\n  \n  altura: yup \n    .string()  \n    .matches(/[0-9]{1}\\,[0-9]{2}/g , 'Por favor, insira uma altura válida')\n    .required(),\n  \n  outroPatologia: yup \n    .string()    \n    .required(),\n  \n\n\n\n  \n  \n  \n  \n\n  // receberContatoEmail: yup.boolean().oneOf([true],'aceite obrigatório'),\n  // receberContatoSMS: yup.boolean().oneOf([true],'aceite obrigatório'),\n  // receberContatoWhatsApp: yup.boolean().oneOf([true],'aceite obrigatório')\n    \n\n});\n\n// const schema = yup.object().shape({\n//   first: yup.string().required(),\n//   age: yup.number().positive().integer().required(),\n// });\n\nexport default function SectionAnamnese(props) {\n  // const { register, errors, handleSubmit} = useForm({\n  //   validationSchema: SignupSchema\n  // });\n  const { register, trigger, handleSubmit, setValue, getValues, errors } = useForm({\n    resolver: yupResolver(SignupSchema),\n    mode: \"onBlur\"\n    // mode: \"onChange\"\n  });\n  const onSubmit = data => {\n    console.log(data);\n    // alert(JSON.stringify(data, null));\n  };\n\n\n  useEffect(() => {    \n    // history.pushState({}, null, \"/checkout/anamnese\");\n    TagManager.dataLayer({\n      dataLayer: {\n        event: \"anamneseView\",\n        userId: '001',\n        userProject: 'project',\n        page: 'home'\n      },          \n    })\n    TagManager.dataLayer({\n      dataLayer: {\n        'event': 'checkoutOption',\n        'ecommerce': {\n          'checkout_option': {\n            'actionField': {'step': 3}\n          }\n        }       \n      },          \n    })\n    \n  }, []);\n\n\n  const [checked, setChecked] = React.useState([]);\n  const handleToggle = value => {\n    const currentIndex = checked.indexOf(value);\n    const newChecked = [...checked];\n    if (currentIndex === -1) {\n      newChecked.push(value);\n    } else {\n      newChecked.splice(currentIndex, 1);\n    }\n    setChecked(newChecked);\n  };\n\n  const [isAluno, setIsAluno] = React.useState(false);\n  const [activeForm, setActiveForm] = React.useState(17);\n  \n  const [activeField, setActiveField] = React.useState([\"sexo\"]);\n  // const [activeField, setActiveField] = React.useState([\"peso\", \"altura\"]);\n  const [isDisableNext, setIsDisableNext] = React.useState(true);\n  const [error, setError] = useState(false);\n  const [isLoading, setIsLoading] = React.useState(false);  \n    \n  const [isOutro, setIsOutro] = React.useState(false);\n\n  const handleNext = async () => {\n\n    // console.log(activeField);\n    // const result = await trigger(activeField)\n    // console.log(result);\n\n    const result = true\n\n    if(result) { \n      console.log(getValues());\n      if(activeForm == 17){\n        setIsLoading(true);\n        const anamneseForm = getValues();\n\n     \n\n        props.setDataSale( prevDataSale => {\n          return {  \n                \n            ...prevDataSale,\n            sexo: anamneseForm.sexo,\n            anamnese: {\n              ...prevDataSale.anamnese,\n              ...anamneseForm\n            }  \n                    \n          }\n        });    \n\n        // props.sendDataForm();\n      } else {\n        setIsDisableNext(true);\n        setIsOutro(false);\n        setActiveForm((prevActiveStep) => prevActiveStep + 1);\n        handleFieldActive(activeForm + 1);                \n      }\n    }\n\n    // setActiveForm((prevActiveStep) => prevActiveStep + 1);\n        \n\n  };\n\n  const handleBack = (type) => {\n\n    if(activeForm !== 0){\n      setIsDisableNext(false);\n      setActiveForm((prevActiveStep) => prevActiveStep - 1);  \n      handleFieldActive(activeForm - 1); \n    } else{\n      props.setStepCheckout(1);\n    }\n\n  };\n\n  const handleFocus = (event) => {\n    // event.target.select()\n\n    if(event.target.value == \"\"){      \n      event.target.selectionStart = 0;\n      event.target.selectionEnd = 0;      \n    } else {\n      event.target.select();      \n    }\n    \n  };\n  \n  const handleChange = async (event) => {\n   \n\n    const result = await trigger(activeField);\n    console.log(activeField);\n    console.log(result);\n    if(result){\n      setIsDisableNext(false);\n    } else{\n      setIsDisableNext(true);\n    }\n\n    \n  };\n  \n  const handleChangeOutro = async (event, name) => {\n    \n    setValue(name, event.target.value);\n  \n    const result = await trigger(name);\n    // console.log(name);\n    // console.log(result);\n    if(result){       \n      setIsDisableNext(false);\n    } else{\n      setIsDisableNext(true);\n    }\n\n    \n  };\n\n\n\n\n\n  const handleFieldActive = (step) => {\n\n    console.log(\"handleFieldActive\");\n\n    switch (step) {      \n      case 0:\n        setActiveField(\"sexo\");\n        break;      \n      case 1:\n        setActiveField([\"peso\", \"altura\"]);\n        break;      \n      case 2:\n        setActiveField([\"objetivo\"]);\n        break;      \n      case 3:\n        setActiveField([\"habitoTreino\",\"frequenciaTreino\"]);\n        break;      \n      case 4:\n        setActiveField([\"fazMusculacao\"]);\n        break;      \n      case 5:\n        setActiveField([\"fazAulas\"]);\n        break;      \n      case 6:\n        setActiveField([\"sedentario\", \"sedentarioTempo\"]);\n        break;      \n      case 7:\n        setActiveField([\"tempoPorDia\"]);\n        break;      \n      case 8:\n        setActiveField([\"periodo\"]);\n        break;      \n      case 9:\n        setActiveField([\"patologia\", \"outroPatologia\"]);\n        break;      \n      case 10:\n        setActiveField([\"osseoArticular\", \"qualOsseoArticular\"]);\n        break;      \n      case 11:\n        setActiveField([\"cirurgia\", \"qualCirurgia\"]);\n        break;      \n      case 12:\n        setActiveField([\"internacao\", \"qualInternacao\"]);\n        break;      \n      case 13:\n        setActiveField([\"medicamento\", \"qualMedicamento\"]);\n        break;      \n      case 14:\n        setActiveField([\"fuma\"]);\n        break;      \n      case 15:\n        setActiveField([\"nutricionista\"]);\n        break;      \n      case 16:\n        setActiveField([\"personalTrainer\"]);\n        break;      \n      case 17:\n        setActiveField([\"equipamentos\", \"qualEquipamentos\"]);\n        break;      \n      default:\n        setActiveField(\"sexo\");\n        break;\n    }\n\n    console.log(step);\n    // console.log(activeField);\n\n  };\n\n  const setValueForm = (name, value, outro) => {    \n    setValue(name, value);\n    // console.log(getValues());\n    if(outro){\n      setIsOutro(true);\n    } else{\n      handleNext();\n    }\n  };\n  \n  \n\n  // useEffect(() => {\n  //   console.log(\"teste de erro\");\n  //   console.log(errors[activeField]);  \n  //   !errors[activeField] && setIsDisableNext(false);\n  // }, [ errors[activeField] ]);\n  \n  // useEffect(() => {\n  //   if(isOutro) {\n  //     register(\"outroPatologia\");\n  //   }  \n  //  }, [ isOutro ]);\n\n  \n  \n  const [anamnese, setAnamnese] = React.useState({    \n\n    sexo: \"TESTE\",\n\n    peso: \"TESTE\",\n    altura: \"TESTE\",\n\n    objetivo: \"TESTE\",\n\n    habitoTreino: \"TESTE\",\n\n    frequenciaTreino: \"TESTE\",\n\n    fazMusculacao: \"TESTE\",\n\n    fazAulas: \"TESTE\",\n\n    sedentario: \"TESTE\",\n\n    sedentarioTempo: \"TESTE\",\n\n    reclusaoTreino: \"TESTE\",\n\n    tempoPorDia: \"TESTE\",\n\n    periodo: \"TESTE\",\n\n    patologia: \"TESTE\",\n    outroPatologia: \"TESTE\",\n\n    osseoArticular: \"TESTE\",\n    qualOsseoArticular: \"TESTE\",\n\n    cirurgia: \"TESTE\",\n    qualCirurgia: \"TESTE\",\n\n    internacao: \"TESTE\",\n    qualInternacao: \"TESTE\",\n\n    medicamento: \"TESTE\",\n    qualMedicamento: \"TESTE\",\n\n    fuma: \"TESTE\",\n\n    nutricionista: \"TESTE\",\n\n    personalTrainer: \"TESTE\",\n\n    equipamentos: \"TESTE\"\n\n  });\n\n\n\n\n  const classes = useStyles();\n  return (\n    <div className=\"cd-section\" >\n      {/* Contact us 1 START */}\n      <div\n        className={classes.contacts + \" \" + classes.section}\n        // style={{ backgroundImage: `url(${city})` }}\n        style={{ backgroundColor: \"#ffffff\" }}\n      >\n        <div className={classes.container}>\n          <GridContainer justify=\"center\">\n            {/* <GridItem xs={12} sm={12} md={8} className={classes.mlAuto}> */}\n            <GridItem xs={12} sm={12} md={5}>\n              <Grow \n                in={true}\n                style={{ transformOrigin: '0 0 0' }}\n                {...(true ? { timeout: 1000 } : {})}\n              >\n                <Card className={classes.card1}>\n                <form onSubmit={handleSubmit(onSubmit)}>\n                  <CardHeader\n                    contact\n                    color=\"primary\"\n                    className={classes.textCenter}\n                  >\n                    <h4 className={classes.cardTitle}>Sobre você</h4>\n                  </CardHeader>                                        \n\n\n                  {/* <Grow \n                    in={activeForm === 0}\n                    style={{ transformOrigin: '0 0 0', display: activeForm === 0 ? \"block\" : \"none\" }}\n                    {...(activeForm === 0 ? { timeout: 1000 } : {})}\n                  >\n\n                    <CardBody>\n                      <GridContainer justify=\"center\"> \n                        <GridItem xs={12} sm={8} md={8}>\n\n\n                          <CustomInput\n                            labelText=\"Qual é sua idade?\"\n                            labelError={errors.idade && errors.idade.message}\n                            id=\"idade\"  \n                            error={errors.idade ? true : false}                                                                          \n                            formControlProps={{\n                              fullWidth: true\n                            }}                                \n                            inputProps={{\n                              type: \"tel\",\n                              name: \"idade\",                              \n                              inputRef: register, \n                              onChange: handleChange                    \n                            }}                          \n                          />     \n   \n                        </GridItem>   \n                      </GridContainer>                 \n                  \n                    </CardBody>\n\n                  </Grow> */}\n                  \n                  <Grow \n                    in={activeForm === 0}\n                    style={{ transformOrigin: '0 0 0', display: activeForm === 0 ? \"block\" : \"none\" }}\n                    {...(activeForm === 0 ? { timeout: 1000 } : {})}\n                  >                \n\n                    <CardBody>\n                      <GridContainer justify=\"center\"> \n                        <GridItem xs={12} sm={8} md={8}>\n\n            \n                          <input hidden name=\"sexo\" type=\"text\" ref={register} />\n\n                          <label>Qual o seu sexo?</label>\n\n                          <Button color=\"primary\" fullWidth onClick={() => setValueForm(\"sexo\", \"M\")}>\n                            Masculino\n                          </Button>\n                          \n                          <Button color=\"secondary\" fullWidth onClick={() => setValueForm(\"sexo\", \"F\")}>\n                            Feminino\n                          </Button>\n\n                        </GridItem>   \n                      </GridContainer>                 \n                  \n                    </CardBody>\n\n                  </Grow>\n                  \n                  <Grow \n                    in={activeForm === 1}\n                    style={{ transformOrigin: '0 0 0', display: activeForm === 1 ? \"block\" : \"none\" }}\n                    {...(activeForm === 1 ? { timeout: 1000 } : {})}\n                  >\n\n                    <CardBody>\n                      <GridContainer justify=\"center\"> \n                        <GridItem xs={12} sm={8} md={8}>\n                          <CustomInput\n                            labelText=\"Qual é o seu peso?\"\n                            labelError={errors.peso && errors.peso.message}                          \n                            error={errors.peso ? true : false}\n                            id=\"peso\"\n                            formControlProps={{\n                              fullWidth: true\n                            }}\n                            inputProps={{\n                              type: \"tel\",\n                              name: \"peso\",\n                              placeholder: \"0,00\",\n                              inputComponent: PesoMask,\n                              inputRef: register,\n                              onChange: handleChange,\n                              endAdornment: (\n                                <InputAdornment position=\"start\">\n                                  {\"Kg\"}\n                                </InputAdornment>\n                              )                           \n                            }}\n                          />                     \n                          <CustomInput\n                            labelText=\"Qual a sua altura? \"\n                            labelError={errors.altura && errors.altura.message}                          \n                            error={errors.altura ? true : false}\n                            id=\"altura\"\n                            formControlProps={{\n                              fullWidth: true\n                            }}\n                            inputProps={{\n                              type: \"tel\",\n                              name: \"altura\",\n                              // placeholder: \"0,00\",\n                              inputComponent: AlturaMask,\n                              inputRef: register,\n                              onChange: handleChange,\n                              onClick: handleFocus,\n                              endAdornment: (\n                                <InputAdornment position=\"start\">\n                                  {\"m\"}\n                                </InputAdornment>\n                              )                                                        \n                            }}\n                          />                                                                  \n                        </GridItem>   \n                      </GridContainer>                 \n                  \n                    </CardBody>\n\n                  </Grow>\n                  \n                  <Grow \n                    in={activeForm === 2}\n                    style={{ transformOrigin: '0 0 0', display: activeForm === 2 ? \"block\" : \"none\" }}\n                    {...(activeForm === 2 ? { timeout: 1000 } : {})}\n                  >\n\n                    <CardBody>\n\n                    {error && ( \n                      <SnackbarContent\n                        message={\n                          <span>\n                            <b>Não encontramos seu CEP</b> <br/> Tente novamente\n                          </span>\n                        }\n                        // close\n                        color=\"warning\"\n                        icon=\"info_outline\"\n                      />\n                    )} \n\n                      <GridContainer justify=\"center\"> \n                        <GridItem xs={12} sm={12} md={9}>\n\n\n                          <input hidden name=\"objetivo\" type=\"text\" ref={register} />\n                          <label>Qual é o seu objetivo?</label>\n                          <br/>\n                          <Button color=\"primary\" fullWidth onClick={() => setValueForm(\"objetivo\", \"Emagrecer\")}>\n                            Emagrecer\n                          </Button>\n\n                          <Button color=\"primary\" fullWidth onClick={() => setValueForm(\"objetivo\", \"Aumentar a Massa Magra\")}>\n                            Aumentar a Massa Magra\n                          </Button>\n                          \n                          <Button color=\"primary\" fullWidth onClick={() => setValueForm(\"objetivo\", \"Manter o Condicionamento Físico\")}>\n                            Manter o Condicionamento Físico\n                          </Button>\n                          \n                          <Button color=\"primary\" fullWidth onClick={() => setValueForm(\"objetivo\", \"Bem Estar\")}>\n                            Bem Estar\n                          </Button>\n                          \n                          <Button color=\"primary\" fullWidth onClick={() => setValueForm(\"objetivo\", \"Indicação Médica\")}>\n                            Indicação Médica\n                          </Button>\n\n                        </GridItem>                   \n                          \n                      </GridContainer>                 \n                  \n                    </CardBody>\n\n                  </Grow>\n                  \n                  \n                  \n                  <Grow \n                    in={activeForm === 3}\n                    style={{ transformOrigin: '0 0 0', display: activeForm === 3 ? \"block\" : \"none\" }}\n                    {...(activeForm === 3 ? { timeout: 1000 } : {})}\n                  >\n\n                    <CardBody>\n\n                    {error && ( \n                      <SnackbarContent\n                        message={\n                          <span>\n                            <b>Não encontramos seu CEP</b> <br/> Tente novamente\n                          </span>\n                        }\n                        // close\n                        color=\"warning\"\n                        icon=\"info_outline\"\n                      />\n                    )} \n\n                      <GridContainer justify=\"center\"> \n                        <GridItem xs={12} sm={12} md={8}>\n\n                        <input hidden name=\"habitoTreino\" type=\"text\" ref={register} />\n                        <input hidden name=\"frequenciaTreino\" type=\"text\" ref={register} />\n\n                        {\n                          !isOutro ? (\n                            <>\n                                                            \n                              <label>Possui o hábito de treinar?</label>\n                              <br/>                        \n                              <Button color=\"primary\" fullWidth onClick={() => setValueForm(\"habitoTreino\", \"SIM\", true)}>\n                                Sim\n                              </Button>\n                              \n                              <Button color=\"secondary\" fullWidth onClick={() => setValueForm(\"habitoTreino\", \"NÃO\")}>\n                                Não\n                              </Button>\n                            </>\n\n                          ): (\n\n                            <>\n                                                            \n                              <label>Quantas vezes na semana?</label>\n                              <br/>                        \n                              <Button color=\"primary\" fullWidth onClick={() => setValueForm(\"frequenciaTreino\", \"1 a 2 vezes\")}>\n                                1 a 2 vezes\n                              </Button>\n                              \n                              <Button color=\"primary\" fullWidth onClick={() => setValueForm(\"frequenciaTreino\", \"3 a 5 vezes\")}>\n                                3 a 5 vezes\n                              </Button>\n                              \n                              <Button color=\"primary\" fullWidth onClick={() => setValueForm(\"frequenciaTreino\", \"6 a 7 vezes\")}>\n                                6 a 7 vezes\n                              </Button>\n\n                            </>\n                         \n\n                          )\n                        }\n                        \n                        </GridItem>                             \n                          \n                      </GridContainer>                 \n                  \n                    </CardBody>\n\n                  </Grow>\n\n\n                  <Grow \n                    in={activeForm === 4}\n                    style={{ transformOrigin: '0 0 0', display: activeForm === 4 ? \"block\" : \"none\" }}\n                    {...(activeForm === 4 ? { timeout: 1000 } : {})}\n                  >\n\n                    <CardBody>\n\n                    {error && ( \n                      <SnackbarContent\n                        message={\n                          <span>\n                            <b>Não encontramos seu CEP</b> <br/> Tente novamente\n                          </span>\n                        }\n                        // close\n                        color=\"warning\"\n                        icon=\"info_outline\"\n                      />\n                    )} \n\n                      <GridContainer justify=\"center\"> \n                        <GridItem xs={12} sm={12} md={9}>\n  \n\n                          <input hidden name=\"fazMusculacao\" type=\"text\" ref={register} />\n\n                          <label>Na academia, costuma fazer musculação?</label>\n                          <br/>\n                          <Button color=\"primary\" fullWidth onClick={() => setValueForm(\"fazMusculacao\", \"SIM\")}>\n                            Sim\n                          </Button>\n                          \n                          <Button color=\"secondary\" fullWidth onClick={() => setValueForm(\"fazMusculacao\", \"NÃO\")}>\n                            Não\n                          </Button>  \n\n\n                        </GridItem>                                                  \n                          \n                      </GridContainer>                 \n                  \n                    </CardBody>\n\n                  </Grow>\n                  \n                  <Grow \n                    in={activeForm === 5}\n                    style={{ transformOrigin: '0 0 0', display: activeForm === 5 ? \"block\" : \"none\" }}\n                    {...(activeForm === 5 ? { timeout: 1000 } : {})}\n                  >\n\n                    <CardBody>\n\n                    {error && ( \n                      <SnackbarContent\n                        message={\n                          <span>\n                            <b>Não encontramos seu CEP</b> <br/> Tente novamente\n                          </span>\n                        }\n                        // close\n                        color=\"warning\"\n                        icon=\"info_outline\"\n                      />\n                    )} \n\n                      <GridContainer justify=\"center\">                                         \n                        <GridItem xs={12} sm={12} md={9}>\n                          <input hidden name=\"fazAulas\" type=\"text\" ref={register} />\n\n                          <label>Na academia, costuma fazer aulas?</label>\n                          <br/>\n                          <Button color=\"primary\" fullWidth onClick={() => setValueForm(\"fazAulas\", \"SIM\")}>\n                            Sim\n                          </Button>\n\n                          <Button color=\"secondary\" fullWidth onClick={() => setValueForm(\"fazAulas\", \"NÃO\")}>\n                            Não\n                          </Button>\n                        </GridItem>                   \n                          \n                      </GridContainer>                 \n                  \n                    </CardBody>\n\n                  </Grow>\n\n                  <Grow \n                    in={activeForm === 6}\n                    style={{ transformOrigin: '0 0 0', display: activeForm === 6 ? \"block\" : \"none\" }}\n                    {...(activeForm === 6 ? { timeout: 1000 } : {})}\n                  >\n\n                    <CardBody>\n\n                    {error && ( \n                      <SnackbarContent\n                        message={\n                          <span>\n                            <b>Não encontramos seu CEP</b> <br/> Tente novamente\n                          </span>\n                        }\n                        // close\n                        color=\"warning\"\n                        icon=\"info_outline\"\n                      />\n                    )} \n\n                      <GridContainer justify=\"center\"> \n                        <GridItem xs={12} sm={12} md={8}>\n               \n\n                          <input hidden name=\"sedentario\" type=\"text\" ref={register} />\n                          <input hidden name=\"sedentarioTempo\" type=\"text\" ref={register} />\n\n                          {\n                            !isOutro ? (\n                              <>\n                                                              \n                                <label>Atualmente, se considera sedentário?</label>\n                                <br/>                        \n                                <Button color=\"primary\" fullWidth onClick={() => setValueForm(\"sedentario\", \"SIM\", true)}>\n                                  Sim\n                                </Button>\n                                \n                                <Button color=\"secondary\" fullWidth onClick={() => setValueForm(\"sedentario\", \"NÃO\")}>\n                                  Não\n                                </Button>\n                              </>\n\n                            ): (\n\n                              <>\n                                                              \n                                <label>Há quanto tempo?</label>\n                                <br/>                        \n                                <Button color=\"primary\" fullWidth onClick={() => setValueForm(\"sedentarioTempo\", \"6 meses\")}>\n                                  6 meses\n                                </Button>\n                                \n                                <Button color=\"primary\" fullWidth onClick={() => setValueForm(\"sedentarioTempo\", \"6 meses a 2 anos\")}>\n                                  6 meses a 2 anos\n                                </Button>\n                                \n                                <Button color=\"primary\" fullWidth onClick={() => setValueForm(\"sedentarioTempo\", \"Há mais de 2 anos\")}>\n                                  Há mais de 2 anos\n                                </Button>\n\n                              </>\n                          \n\n                            )\n                          }\n                        \n\n                        </GridItem>                   \n                   \n                          \n                      </GridContainer>                 \n                  \n                    </CardBody>\n\n                  </Grow>\n\n                  <Grow \n                    in={activeForm === 7}\n                    style={{ transformOrigin: '0 0 0', display: activeForm === 7 ? \"block\" : \"none\" }}\n                    {...(activeForm === 7 ? { timeout: 1000 } : {})}\n                  >\n\n                    <CardBody>\n\n                    {error && ( \n                      <SnackbarContent\n                        message={\n                          <span>\n                            <b>Não encontramos seu CEP</b> <br/> Tente novamente\n                          </span>\n                        }\n                        // close\n                        color=\"warning\"\n                        icon=\"info_outline\"\n                      />\n                    )} \n\n                      <GridContainer justify=\"center\"> \n                        <GridItem xs={12} sm={12} md={8}>\n                          \n                          <input hidden name=\"tempoPorDia\" type=\"text\" ref={register} />\n\n                          <label>Pretende treinar quanto tempo por dia?</label>\n                          <br/>                        \n                          <Button color=\"primary\" fullWidth onClick={() => setValueForm(\"tempoPorDia\", \"10 a 30 minutos\")}>\n                            10 a 30 minutos\n                          </Button>\n                          \n                          <Button color=\"primary\" fullWidth onClick={() => setValueForm(\"tempoPorDia\", \"40 a 45 minutos\")}>\n                            40 a 45 minutos\n                          </Button>\n                          \n                          <Button color=\"primary\" fullWidth onClick={() => setValueForm(\"tempoPorDia\", \"1 hora ou mais\")}>\n                            1 hora ou mais\n                          </Button>\n                        </GridItem>                                    \n                          \n                      </GridContainer>                 \n                  \n                    </CardBody>\n\n                  </Grow>\n                  \n                  <Grow \n                    in={activeForm === 8}\n                    style={{ transformOrigin: '0 0 0', display: activeForm === 8 ? \"block\" : \"none\" }}\n                    {...(activeForm === 8 ? { timeout: 1000 } : {})}\n                  >\n\n                    <CardBody>\n\n                    {error && ( \n                      <SnackbarContent\n                        message={\n                          <span>\n                            <b>Não encontramos seu CEP</b> <br/> Tente novamente\n                          </span>\n                        }\n                        // close\n                        color=\"warning\"\n                        icon=\"info_outline\"\n                      />\n                    )} \n\n                      <GridContainer justify=\"center\"> \n                        <GridItem xs={12} sm={12} md={8}>\n                          <input hidden name=\"periodo\" type=\"text\" ref={register} />\n                          <label>Em qual período deseja o atendimento?</label>\n                          <br/>                        \n                          <Button color=\"primary\" fullWidth onClick={() => setValueForm(\"periodo\", \"Manhã\")}>\n                            Manhã - 08:00 às 12:00\n                          </Button>\n                          \n                          <Button color=\"primary\" fullWidth onClick={() => setValueForm(\"periodo\", \"Tarde\")}>\n                            Tarde - 12:00 às 16:00\n                          </Button>\n                          \n                          <Button color=\"primary\" fullWidth onClick={() => setValueForm(\"periodo\", \"Noite\")}>\n                            Noite - 16:00 às 20:00\n                          </Button>\n                        </GridItem>                   \n                          \n                      </GridContainer>                 \n                  \n                    </CardBody>\n\n                  </Grow>\n\n                  <Grow \n                    in={activeForm === 9}\n                    style={{ transformOrigin: '0 0 0', display: activeForm === 9 ? \"block\" : \"none\" }}\n                    {...(activeForm === 9 ? { timeout: 1000 } : {})}\n                  >\n\n                    <CardBody>\n\n                    {error && ( \n                      <SnackbarContent\n                        message={\n                          <span>\n                            <b>Não encontramos seu CEP</b> <br/> Tente novamente\n                          </span>\n                        }\n                        // close\n                        color=\"warning\"\n                        icon=\"info_outline\"\n                      />\n                    )} \n\n                      <GridContainer justify=\"center\"> \n                        <GridItem xs={12} sm={12} md={8}>       \n\n\n                          <input hidden name=\"patologia\" type=\"text\" ref={register} />                                             \n                          <input hidden name=\"outroPatologia\" type=\"text\" ref={register} />                                             \n\n                          {\n                            !isOutro ? (\n                              <>\n                                                              \n                                <label>Possui alguma patologia?</label>\n                                <br/>                        \n                                <Button color=\"secondary\" fullWidth onClick={() => setValueForm(\"patologia\", \"coracao\")}>\n                                  Sim, no coração\n                                </Button>\n                                <Button color=\"secondary\" fullWidth onClick={() => setValueForm(\"patologia\", \"pulmao\")}>\n                                  Sim, no pulmão\n                                </Button>\n                                <Button color=\"primary\" fullWidth onClick={() => setValueForm(\"patologia\", \"outro\", true)}>\n                                  Sim, em outro local\n                                </Button>                                 \n                                <Button color=\"danger\" fullWidth onClick={() => setValueForm(\"patologia\", \"NÃO\")}>\n                                  Não\n                                </Button>\n                              </>\n\n                            ): (\n\n                              <>\n                                <CustomInput\n                                  labelText=\"Qual o problema e onde seria?\"\n                                  labelError={errors.outroPatologia && errors.outroPatologia.message}                          \n                                  error={errors.outroPatologia ? true : false}\n                                  id=\"outroPatologiaInput\"\n                                  formControlProps={{\n                                    fullWidth: true\n                                  }}\n                                  inputProps={{\n                                    name: \"outroPatologiaInput\",\n                                    inputRef: register,\n                                    onChange: (event) => handleChangeOutro(event, \"outroPatologia\")\n                                  }}\n                                />                                                               \n                              </>\n                          \n\n                            )\n                          } \n\n                        </GridItem>                                    \n                          \n                      </GridContainer>                 \n                  \n                    </CardBody>\n\n                  </Grow>\n                  \n                  <Grow \n                    in={activeForm === 10}\n                    style={{ transformOrigin: '0 0 0', display: activeForm === 10 ? \"block\" : \"none\" }}\n                    {...(activeForm === 10 ? { timeout: 1000 } : { })}\n                  >\n\n                    <CardBody>\n\n                    {error && ( \n                      <SnackbarContent\n                        message={\n                          <span>\n                            <b>Não encontramos seu CEP</b> <br/> Tente novamente\n                          </span>\n                        }\n                        // close\n                        color=\"warning\"\n                        icon=\"info_outline\"\n                      />\n                    )} \n\n                      <GridContainer justify=\"center\"> \n                        <GridItem xs={12} sm={12} md={8}>\n\n                          <input hidden name=\"osseoArticular\" type=\"text\" ref={register} />                          \n                          <input hidden name=\"qualOsseoArticular\" type=\"text\" ref={register} />                          \n\n                          {\n                            !isOutro ? (\n                              <>\n                                                              \n                                <label>Possui algum problema ósseo articular?</label>\n                                <br/>                        \n                                <Button color=\"primary\" fullWidth onClick={() => setValueForm(\"osseoArticular\", \"SIM\", true)}>\n                                  Sim\n                                </Button>                               \n                                <Button color=\"secondary\" fullWidth onClick={() => setValueForm(\"osseoArticular\", \"NÃO\")}>\n                                  Não\n                                </Button>\n                              </>\n\n                            ): (\n\n                              <>\n                                <CustomInput\n                                  labelText=\"Qual seria?\"\n                                  labelError={errors.qualOsseoArticular && errors.qualOsseoArticular.message}                          \n                                  error={errors.qualOsseoArticular ? true : false}\n                                  id=\"qualOsseoArticularInput\"\n                                  formControlProps={{\n                                    fullWidth: true\n                                  }}\n                                  inputProps={{\n                                    name: \"qualOsseoArticularInput\",\n                                    inputRef: register,\n                                    onChange: (event) => handleChangeOutro(event, \"qualOsseoArticular\")\n                                  }}\n                                />                                                               \n                              </>\n\n\n                            )\n                          } \n\n\n                        </GridItem>                                    \n                          \n                      </GridContainer>                 \n                  \n                    </CardBody>\n\n                  </Grow>\n                  \n                  <Grow \n                    in={activeForm === 11}\n                    style={{ transformOrigin: '0 0 0', display: activeForm === 11 ? \"block\" : \"none\" }}\n                    {...(activeForm === 11 ? { timeout: 1000 } : {})}\n                  >\n\n                    <CardBody>\n\n                    {error && ( \n                      <SnackbarContent\n                        message={\n                          <span>\n                            <b>Não encontramos seu CEP</b> <br/> Tente novamente\n                          </span>\n                        }\n                        // close\n                        color=\"warning\"\n                        icon=\"info_outline\"\n                      />\n                    )} \n\n                      <GridContainer justify=\"center\"> \n                        <GridItem xs={12} sm={12} md={8}>\n\n                          <input hidden name=\"cirurgia\" type=\"text\" ref={register} />\n                          <input hidden name=\"qualCirurgia\" type=\"text\" ref={register} />\n\n                          {\n                            !isOutro ? (\n                              <>\n                                                              \n                                <label>Já sofreu alguma cirurgia?</label>\n                                <br/>                        \n                                <Button color=\"primary\" fullWidth onClick={() => setValueForm(\"cirurgia\", \"SIM\", true)}>\n                                  Sim\n                                </Button>                               \n                                <Button color=\"secondary\" fullWidth onClick={() => setValueForm(\"cirurgia\", \"NÃO\")}>\n                                  Não\n                                </Button>\n                              </>\n\n                            ): (\n\n                              <>\n                                <CustomInput\n                                  labelText=\"Qual cirurgia?\"\n                                  labelError={errors.qualCirurgia && errors.qualCirurgia.message}                          \n                                  error={errors.qualCirurgia ? true : false}\n                                  id=\"qualCirurgiaInput\"\n                                  formControlProps={{\n                                    fullWidth: true\n                                  }}\n                                  inputProps={{\n                                    name: \"qualCirurgiaInput\",\n                                    inputRef: register,\n                                    onChange: (event) => handleChangeOutro(event, \"qualCirurgia\")                                                        \n                                  }}\n                                />                                                               \n                              </>\n                          \n\n                            )\n                          }  \n                        </GridItem>                   \n                 \n                          \n                      </GridContainer>                 \n                  \n                    </CardBody>\n\n                  </Grow>\n                  \n                  \n                  <Grow \n                    in={activeForm === 12}\n                    style={{ transformOrigin: '0 0 0', display: activeForm === 12 ? \"block\" : \"none\" }}\n                    {...(activeForm === 12 ? { timeout: 1000 } : {})}\n                  >\n\n                    <CardBody>\n\n                    {error && ( \n                      <SnackbarContent\n                        message={\n                          <span>\n                            <b>Não encontramos seu CEP</b> <br/> Tente novamente\n                          </span>\n                        }\n                        // close\n                        color=\"warning\"\n                        icon=\"info_outline\"\n                      />\n                    )} \n\n                      <GridContainer justify=\"center\"> \n                        <GridItem xs={12} sm={12} md={8}>\n\n                          <input hidden name=\"internacao\" type=\"text\" ref={register} />                          \n                          <input hidden name=\"qualInternacao\" type=\"text\" ref={register} />                          \n\n                          {\n                            !isOutro ? (\n                              <>\n                                                              \n                                <label>Sofreu alguma internação recentemente?</label>\n                                <br/>                        \n                                <Button color=\"primary\" fullWidth onClick={() => setValueForm(\"internacao\", \"SIM\", true)}>\n                                  Sim\n                                </Button>                               \n                                <Button color=\"secondary\" fullWidth onClick={() => setValueForm(\"internacao\", \"NÃO\")}>\n                                  Não\n                                </Button>\n                              </>\n\n                            ): (\n\n                              <>\n                                <CustomInput\n                                  labelText=\"Qual seria?\"\n                                  labelError={errors.qualInternacao && errors.qualInternacao.message}                          \n                                  error={errors.qualInternacao ? true : false}\n                                  id=\"qualInternacaoInput\"\n                                  formControlProps={{\n                                    fullWidth: true\n                                  }}\n                                  inputProps={{\n                                    name: \"qualInternacaoInput\",\n                                    inputRef: register,                                    \n                                    onChange: (event) => handleChangeOutro(event, \"qualInternacao\")\n                                  }}\n                                />                                                               \n                              </>\n\n\n                            )\n                          } \n\n                        </GridItem>                                 \n                          \n                      </GridContainer>                 \n                  \n                    </CardBody>\n\n                  </Grow>\n                  \n                  <Grow \n                    in={activeForm === 13}\n                    style={{ transformOrigin: '0 0 0', display: activeForm === 13 ? \"block\" : \"none\" }}\n                    {...(activeForm === 13 ? { timeout: 1000 } : {})}\n                  >\n\n                    <CardBody>\n\n                    {error && ( \n                      <SnackbarContent\n                        message={\n                          <span>\n                            <b>Não encontramos seu CEP</b> <br/> Tente novamente\n                          </span>\n                        }\n                        // close\n                        color=\"warning\"\n                        icon=\"info_outline\"\n                      />\n                    )} \n\n                      <GridContainer justify=\"center\"> \n                        <GridItem xs={12} sm={12} md={8}>\n          \n                          <input hidden name=\"medicamento\" type=\"text\" ref={register} />                          \n                          <input hidden name=\"qualMedicamento\" type=\"text\" ref={register} />                          \n\n                          {\n                            !isOutro ? (\n                              <>\n                                                              \n                                <label>Faz uso de algum medicamento?</label>\n                                <br/>                        \n                                <Button color=\"primary\" fullWidth onClick={() => setValueForm(\"medicamento\", \"SIM\", true)}>\n                                  Sim\n                                </Button>                               \n                                <Button color=\"secondary\" fullWidth onClick={() => setValueForm(\"medicamento\", \"NÃO\")}>\n                                  Não\n                                </Button>\n                              </>\n\n                            ): (\n\n                              <>\n                                <CustomInput\n                                  labelText=\"Qual seria?\"\n                                  labelError={errors.qualMedicamento && errors.qualMedicamento.message}                          \n                                  error={errors.qualMedicamento ? true : false}\n                                  id=\"qualMedicamentoInput\"\n                                  formControlProps={{\n                                    fullWidth: true\n                                  }}\n                                  inputProps={{\n                                    name: \"qualMedicamentoInput\",\n                                    inputRef: register,\n                                    onChange: (event) => handleChangeOutro(event, \"qualMedicamento\")                                                        \n                                  }}\n                                />                                                               \n                              </>\n\n\n                            )\n                          } \n\n\n                        </GridItem>                   \n                          \n                          \n                      </GridContainer>                 \n                  \n                    </CardBody>\n\n                  </Grow>\n                  \n                  \n                  <Grow \n                    in={activeForm === 14}\n                    style={{ transformOrigin: '0 0 0', display: activeForm === 14 ? \"block\" : \"none\" }}\n                    {...(activeForm === 14 ? { timeout: 1000 } : {})}\n                  >\n\n                    <CardBody>\n\n                    {error && ( \n                      <SnackbarContent\n                        message={\n                          <span>\n                            <b>Não encontramos seu CEP</b> <br/> Tente novamente\n                          </span>\n                        }\n                        // close\n                        color=\"warning\"\n                        icon=\"info_outline\"\n                      />\n                    )} \n\n                      <GridContainer justify=\"center\"> \n                        <GridItem xs={12} sm={12} md={8}>\n\n\n                          <input hidden name=\"fuma\" type=\"text\" ref={register} />   \n\n                          <label>Possui o hábito de fumar?</label>\n                          <br/>                        \n                          <Button color=\"primary\" fullWidth onClick={() => setValueForm(\"fuma\", \"SIM\")}>\n                            Sim\n                          </Button>                               \n                          <Button color=\"secondary\" fullWidth onClick={() => setValueForm(\"fuma\", \"NÃO\")}>\n                            Não\n                          </Button>                       \n\n                        </GridItem>                                  \n                          \n                      </GridContainer>                 \n                  \n                    </CardBody>\n\n                  </Grow>\n                  \n                  <Grow \n                    in={activeForm === 15}\n                    style={{ transformOrigin: '0 0 0', display: activeForm === 15 ? \"block\" : \"none\" }}\n                    {...(activeForm === 15 ? { timeout: 1000 } : {})}\n                  >\n\n                    <CardBody>\n\n                    {error && ( \n                      <SnackbarContent\n                        message={\n                          <span>\n                            <b>Não encontramos seu CEP</b> <br/> Tente novamente\n                          </span>\n                        }\n                        // close\n                        color=\"warning\"\n                        icon=\"info_outline\"\n                      />\n                    )} \n\n                      <GridContainer justify=\"center\"> \n                        <GridItem xs={12} sm={12} md={8}>\n\n                          <input hidden name=\"nutricionista\" type=\"text\" ref={register} />   \n\n                          <label>Faz acompanhamento com um(a) nutricionista?</label>\n                          <br/>                        \n                          <Button color=\"primary\" fullWidth onClick={() => setValueForm(\"nutricionista\", \"SIM\")}>\n                            Sim\n                          </Button>                               \n                          <Button color=\"secondary\" fullWidth onClick={() => setValueForm(\"nutricionista\", \"NÃO\")}>\n                            Não\n                          </Button>  \n\n                        </GridItem>                                  \n                          \n                      </GridContainer>                 \n                  \n                    </CardBody>\n\n                  </Grow>\n\n                  <Grow \n                    in={activeForm === 16}\n                    style={{ transformOrigin: '0 0 0', display: activeForm === 16 ? \"block\" : \"none\" }}\n                    {...(activeForm === 16 ? { timeout: 1000 } : {})}\n                  >\n\n                    <CardBody>\n\n                    {error && ( \n                      <SnackbarContent\n                        message={\n                          <span>\n                            <b>Não encontramos seu CEP</b> <br/> Tente novamente\n                          </span>\n                        }\n                        // close\n                        color=\"warning\"\n                        icon=\"info_outline\"\n                      />\n                    )} \n\n                      <GridContainer justify=\"center\"> \n                        <GridItem xs={12} sm={12} md={8}>\n                          \n                          <input hidden name=\"personalTrainer\" type=\"text\" ref={register} />                          \n                          \n                          <label>Faz acompanhamento com um(a) personal trainer?</label>\n                          <br/>                        \n                          <Button color=\"primary\" fullWidth onClick={() => setValueForm(\"personalTrainer\", \"SIM\")}>\n                            Sim\n                          </Button>                               \n                          <Button color=\"secondary\" fullWidth onClick={() => setValueForm(\"personalTrainer\", \"NÃO\")}>\n                            Não\n                          </Button>\n\n                        </GridItem>                                  \n                          \n                      </GridContainer>                 \n                  \n                    </CardBody>\n\n                  </Grow>\n                  \n                  <Grow \n                    in={activeForm === 17}\n                    style={{ transformOrigin: '0 0 0', display: activeForm === 17 ? \"block\" : \"none\" }}\n                    {...(activeForm === 17 ? { timeout: 1000 } : {})}\n                  >\n\n                    <CardBody>\n\n                    {error && ( \n                      <SnackbarContent\n                        message={\n                          <span>\n                            <b>Não encontramos seu CEP</b> <br/> Tente novamente\n                          </span>\n                        }\n                        // close\n                        color=\"warning\"\n                        icon=\"info_outline\"\n                      />\n                    )} \n\n                      {/* <GridContainer justify=\"center\"> \n                        <GridItem xs={12} sm={12} md={8}>\n                          <CustomInput\n                            labelText=\"Possui algum equipamento de treino? Se SIM, informe-os por aqui\"\n                            labelError={errors.equipamentos && errors.equipamentos.message}                          \n                            error={errors.equipamentos ? true : false}\n                            id=\"equipamentos\"\n                            formControlProps={{\n                              fullWidth: true\n                            }}\n                            inputProps={{\n                              name: \"equipamentos\",\n                              multiline: true,\n                              onChange: handleChange, \n                              rows: 5,\n                              inputRef: register,\n                                             \n                            }}\n                          />  \n                        </GridItem>                                  \n                          \n                      </GridContainer>        */}\n\n                      <GridContainer justify=\"center\"> \n                        <GridItem xs={12} sm={12} md={8}>\n          \n                          <input hidden name=\"equipamentosSN\" type=\"text\" ref={register} />                          \n                          <input hidden name=\"equipamentos\" type=\"text\" ref={register} />                          \n\n                          {\n                            !isOutro ? (\n                              <>\n                                                              \n                                <label>Possui algum equipamento de treino?</label>\n                                <br/>                      \n                                <Button color=\"primary\" fullWidth onClick={() => setValueForm(\"equipamentosSN\", \"SIM\", true)}>\n                                  Sim\n                                </Button>                               \n                                <Button color=\"secondary\" fullWidth onClick={() => setValueForm(\"equipamentosSN\", \"NÃO\")}>\n                                  Não\n                                </Button>                   \n                                \n                              </>\n\n                            ): (\n\n                              <>\n                                <CustomInput\n                                  labelText=\"Quais seriam?\"\n                                  labelError={errors.equipamentos && errors.equipamentos.message}                          \n                                  error={errors.equipamentos ? true : false}\n                                  id=\"equipamentosInput\"\n                                  formControlProps={{\n                                    fullWidth: true\n                                  }}\n                                  inputProps={{\n                                    name: \"equipamentosInput\",\n                                    multiline: true,                              \n                                    rows: 5,\n                                    inputRef: register,\n                                    onChange: (event) => handleChangeOutro(event, \"equipamentos\")                                                        \n                                  }}\n                                />                                                               \n                              </>\n\n\n                            )\n                          } \n\n\n                        </GridItem>                   \n                          \n                          \n                      </GridContainer>               \n                  \n                    </CardBody>\n\n                  </Grow>\n\n                  \n                  <CardFooter>   \n                    <GridContainer justify=\"center\" style={{ margin: \"0\", width: \"100%\" }}> \n                      \n                      <GridItem xs={12} sm={12} md={12}>\n\n                        \n                      {isLoading && (\n                        <CircularProgress style={{ color: \"#425CD0\" }} size={30}/>\n                      )}\n                      {!isLoading && (\n                        <>\n                          <Button color=\"primary\" fullWidth onClick={handleNext} style={{ display: isDisableNext ? \"none\" : \"block\" }}>\n                            Próximo\n                          </Button>\n                        </>\n                      )}        \n\n                        \n                                                \n                        \n                      </GridItem> \n                      <GridItem xs={12} sm={12} md={12}>\n                      \n                        <Button simple color=\"primary\" fullWidth onClick={handleBack}>\n                          Voltar\n                        </Button>\n                        \n                      </GridItem> \n                    </GridContainer>  \n                    \n                  </CardFooter>\n                </form>\n              </Card>\n              </Grow>\n            </GridItem>\n          </GridContainer>\n        </div>\n      </div>\n      {/* Contact us 1 END */}\n    </div>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}