{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\nimport _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _slicedToArray from \"@babel/runtime/helpers/esm/slicedToArray\";\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\nvar __jsx = React.createElement;\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport React from \"react\";\nimport { useEffect, useState } from 'react';\nimport Link from \"next/link\";\n// @material-ui/core components\nimport { withStyles, makeStyles } from \"@material-ui/core/styles\";\nimport InputAdornment from \"@material-ui/core/InputAdornment\";\n;\nimport classNames from 'classnames';\nimport axios from 'axios'; // @material-ui/icons\n\nimport Dashboard from \"@material-ui/icons/Dashboard\";\nimport Schedule from \"@material-ui/icons/Schedule\";\nimport List from \"@material-ui/icons/List\";\nimport ExitToApp from \"@material-ui/icons/ExitToApp\";\nimport AssignmentInd from \"@material-ui/icons/AssignmentInd\";\nimport Email from \"@material-ui/icons/Email\";\nimport PhoneIphone from \"@material-ui/icons/PhoneIphone\";\nimport CheckCircle from \"@material-ui/icons/CheckCircle\";\nimport LibraryBooks from \"@material-ui/icons/LibraryBooks\";\nimport EventAvailable from \"@material-ui/icons/EventAvailable\";\nimport ErrorOutline from \"@material-ui/icons/ErrorOutline\";\nimport useMediaQuery from '@material-ui/core/useMediaQuery';\nimport Table from '@material-ui/core/Table';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableContainer from '@material-ui/core/TableContainer';\nimport TableHead from '@material-ui/core/TableHead';\nimport TableRow from '@material-ui/core/TableRow';\nimport Paper from '@material-ui/core/Paper';\nimport Dialog from \"@material-ui/core/Dialog\";\nimport DialogTitle from \"@material-ui/core/DialogTitle\";\nimport DialogContent from \"@material-ui/core/DialogContent\";\nimport DialogActions from \"@material-ui/core/DialogActions\";\nimport CircularProgress from '@material-ui/core/CircularProgress';\nimport MaskedInput from 'react-text-mask';\nimport Card from \"components/Card/Card.js\";\nimport CardBody from \"components/Card/CardBody.js\";\nimport CardHeader from \"components/Card/CardHeader.js\";\nimport Badge from \"components/Badge/Badge.js\";\nimport CustomInput from \"components/CustomInput/CustomInput.js\";\nimport Muted from \"components/Typography/Muted.js\";\nimport Parallax from \"components/Parallax/Parallax.js\";\nimport Clearfix from \"components/Clearfix/Clearfix.js\";\nimport SnackbarContent from \"components/Snackbar/SnackbarContent.js\"; // core components\n\nimport GridContainer from \"components/Grid/GridContainer.js\";\nimport GridItem from \"components/Grid/GridItem.js\";\nimport NavPills from \"components/NavPills/NavPills.js\";\nimport Button from \"components/CustomButtons/Button.js\";\nimport SectionCards from \"pages-sections/menu/SectionCards.js\";\nimport SectionCardsReabertura from \"pages-sections/menu/SectionCardsReabertura.js\";\nimport SectionNewOffer from \"pages-sections/menu/SectionNewOffer.js\";\nimport SectionFeatures from \"pages-sections/menu/SectionFeatures.js\";\nimport SectionFeaturesReabertura from \"pages-sections/menu/SectionFeaturesReabertura.js\";\nimport SectionModal from \"pages-sections/menu/SectionModal.js\";\nimport pillsStyle from \"assets/jss/nextjs-material-kit-pro/pages/menuSections/pillsStyle.js\";\nimport oluEletu from \"assets/img/examples/olu-eletu.jpg\";\nimport clemOnojeghuo from \"assets/img/examples/clem-onojeghuo.jpg\";\nimport mariyaGeorgieva from \"assets/img/examples/mariya-georgieva.jpg\";\nimport darrenColeshill from \"assets/img/examples/darren-coleshill.jpg\";\nvar StyledTableCell = withStyles(function (theme) {\n  return {\n    head: {\n      backgroundColor: theme.palette.common.black,\n      color: theme.palette.common.white\n    },\n    body: {\n      fontSize: 14\n    }\n  };\n})(TableCell);\nvar StyledTableRow = withStyles(function (theme) {\n  return {\n    root: {\n      '&:nth-of-type(odd)': {\n        backgroundColor: theme.palette.action.hover\n      }\n    }\n  };\n})(TableRow);\nvar columns = [{\n  id: 'situacao',\n  label: 'Situação',\n  minWidth: 100\n}, {\n  id: 'valorPago',\n  label: 'Valor',\n  minWidth: 100\n}, {\n  id: 'descricao',\n  label: 'Descrição',\n  minWidth: 100\n}, {\n  id: 'dataVencimento',\n  label: 'Vencimento',\n  minWidth: 100\n}, {\n  id: 'diasUsados',\n  label: 'Dias Utilizados',\n  minWidth: 100\n}, {\n  id: 'valorDebito',\n  label: 'Débito',\n  minWidth: 120\n}, {\n  id: 'diasCredito',\n  label: 'Dias de crédito',\n  minWidth: 100\n}, {\n  id: 'valorCredito',\n  label: 'Crédito',\n  minWidth: 120\n}];\nvar columnsUnidade = [{\n  id: 'situacao',\n  label: 'Situação',\n  minWidth: 100\n}, {\n  id: 'valorPago',\n  label: 'Valor',\n  minWidth: 100\n}, {\n  id: 'descricao',\n  label: 'Descrição',\n  minWidth: 100\n}, {\n  id: 'dataVencimento',\n  label: 'Vencimento',\n  minWidth: 100\n}, {\n  id: 'diasUsados',\n  label: 'Dias Utilizados',\n  minWidth: 100\n}, {\n  id: 'diasCredito',\n  label: 'Dias de crédito',\n  minWidth: 100\n}];\n\nfunction TextMaskCustom(props) {\n  var inputRef = props.inputRef,\n      other = _objectWithoutProperties(props, [\"inputRef\"]);\n\n  return __jsx(MaskedInput, _extends({}, other, {\n    ref: function ref(_ref) {\n      inputRef(_ref ? _ref.inputElement : null);\n    } // mask={['(', /[1-9]/, /\\d/, /\\d/, ')', ' ', /\\d/, /\\d/, /\\d/, '-', /\\d/, /\\d/, /\\d/, /\\d/]}\n    ,\n    mask: ['(', /[1-9]/, /[0-9]/, ')', ' ', /[1-9]/, /[0-9]/, /[0-9]/, /[0-9]/, /[0-9]/, '-', /[0-9]/, /[0-9]/, /[0-9]/, /[0-9]/] // placeholderChar={'\\u2000'}\n    ,\n    showMask: true\n  }));\n}\n\nvar useStyles = makeStyles(pillsStyle);\nexport default function SectionPills(props) {\n  var classes = useStyles(); // const [activeItemIndex, setActiveItemIndex] = React.useState(15);      \n  // const [activeItemIndex, setActiveItemIndex] = React.useState(11);      \n\n  var matches = useMediaQuery('(max-width:747px)');\n\n  var _React$useState = React.useState(true),\n      _React$useState2 = _slicedToArray(_React$useState, 2),\n      changeColor = _React$useState2[0],\n      setChangeColor = _React$useState2[1];\n\n  var _useState = useState({\n    cliente: {\n      nome: \"\"\n    }\n  }),\n      user = _useState[0],\n      setUsers = _useState[1];\n\n  var _useState2 = useState({\n    id: 24,\n    clicou_personal: true,\n    clicou_personal_60: false,\n    descricao: \"1 opção\",\n    opcao: 1,\n    plano_pacto: \"\",\n    qtde_dias_clicou_personal: 30,\n    tipo_plano: \"JUST\",\n    transferencia: false,\n    upgrade_plano: true,\n    valor_credito: \"939,00\",\n    valor_maximo: \"200,00\",\n    valor_mensalidade: \"79,9\",\n    valor_minimo: \"150,01\"\n  }),\n      selectedOffer = _useState2[0],\n      setSelectedOffer = _useState2[1];\n\n  var _useState3 = useState({\n    debito: 0,\n    credito: 0\n  }),\n      totalTable = _useState3[0],\n      setTotalTable = _useState3[1];\n\n  var _useState4 = useState({\n    email: \"\",\n    celular: \"\",\n    message: \"\"\n  }),\n      personalData = _useState4[0],\n      setPersonalData = _useState4[1];\n\n  var _useState5 = useState({\n    matricula: \"220472\",\n    id_oferta: 24,\n    unidade_cnpj: \"16738149001508\",\n    historico_parcelas: [{\n      codigo: 92167,\n      contrato: 92167,\n      dataPagamento: \"09/03/2020\",\n      dataVencimento: \"09/03/2020\",\n      descricao: \"PARCELA 8\",\n      diasCredito: 20,\n      diasUsados: 11,\n      estaEmRemessa: false,\n      formaPagamento: \"CARTAO RECORRENTE REDE MATRIZ\",\n      meioPagamento: \"MASTERCARD\",\n      parcela: 1720707,\n      situacao: \"PAGO\",\n      valor: 69.9,\n      valorCredito: 46.6,\n      valorDebito: 0\n    }]\n  }),\n      requestOffer = _useState5[0],\n      setRequestOffer = _useState5[1];\n\n  var _useState6 = useState({\n    matricula: \"220472\",\n    // id_oferta: 24,\n    unidade_cnpj: \"16738149001508\",\n    creditos: {\n      diasCredito: \"\",\n      diasUsados: \"\",\n      valorCredito: \"\",\n      valorDebito: \"\",\n      valorSaldo: \"\"\n    },\n    historico_parcelas: [{\n      codigo: 92167,\n      contrato: 92167,\n      dataPagamento: \"09/03/2020\",\n      dataVencimento: \"09/03/2020\",\n      descricao: \"PARCELA 8\",\n      diasCredito: 20,\n      diasUsados: 11,\n      estaEmRemessa: false,\n      formaPagamento: \"CARTAO RECORRENTE REDE MATRIZ\",\n      meioPagamento: \"MASTERCARD\",\n      parcela: 1720707,\n      situacao: \"PAGO\",\n      valor: 69.9,\n      valorCredito: 46.6,\n      valorDebito: 0\n    }]\n  }),\n      requestReembolso = _useState6[0],\n      setRequestReembolso = _useState6[1];\n\n  var _useState7 = useState({\n    email: \"gabriel.gds96@gmail.com\",\n    cpf: props.user.cliente.cpf,\n    nome: props.user.cliente.nome,\n    telefone: \"974901516\",\n    messagem: \"Quero cancelar meu plano, como eu faço ?\",\n    id_unidade: 1,\n    aluno: \"S\",\n    assunto: \"Situação da aluno - Falar com o gerente\"\n  }),\n      requestFale = _useState7[0],\n      setRequestFale = _useState7[1];\n\n  var _useState8 = useState(false),\n      loading = _useState8[0],\n      setLoading = _useState8[1];\n\n  var _useState9 = useState(false),\n      error = _useState9[0],\n      setError = _useState9[1];\n\n  var _useState10 = useState(false),\n      showOptions = _useState10[0],\n      setShowOptions = _useState10[1];\n\n  var _useState11 = useState(true),\n      unidadeAberta = _useState11[0],\n      setUnidadeAberta = _useState11[1];\n\n  var _useState12 = useState(true),\n      inadimplente = _useState12[0],\n      setInadimplente = _useState12[1];\n\n  var _useState13 = useState(unidadeAberta && !inadimplente ? true : false),\n      showModal = _useState13[0],\n      setShowModal = _useState13[1];\n\n  var _useState14 = useState(true),\n      saldoTop = _useState14[0],\n      showSaldoTop = _useState14[1];\n\n  var _useState15 = useState(true),\n      saldoNegativo = _useState15[0],\n      showSaldoNegativo = _useState15[1];\n\n  var _useState16 = useState(unidadeAberta ? 11 : 15),\n      activeItemIndex = _useState16[0],\n      setActiveItemIndex = _useState16[1];\n\n  var fetchDataConfirmar = function fetchDataConfirmar(sendRequest) {\n    return _regeneratorRuntime.async(function fetchDataConfirmar$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            console.log(sendRequest);\n            _context.next = 3;\n            return _regeneratorRuntime.awrap(axios.post(\"https://api.fale.justfit.com.br/oferta/confirmar\", sendRequest).then(function (res) {\n              setError(false);\n              setActiveItemIndex(8); // setUsers(prevState => [...prevState, ...res.data]);\n              // setUser(res.data);\n              // console.log(res.data.cliente);\n              // localStorage.setItem('@justfit/user', JSON.stringify(res.data));\n              // Router.push('/menu');\n            }).catch(function (error) {\n              console.log(error);\n              setError(true);\n            }).finally(function () {\n              setLoading(false);\n            }));\n\n          case 3:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, null, null, null, Promise);\n  };\n\n  var fetchDataReembolso = function fetchDataReembolso(sendRequest) {\n    return _regeneratorRuntime.async(function fetchDataReembolso$(_context2) {\n      while (1) {\n        switch (_context2.prev = _context2.next) {\n          case 0:\n            console.log(sendRequest);\n            console.log(\"fetchDataReembolso\");\n            _context2.next = 4;\n            return _regeneratorRuntime.awrap(axios.post(\"https://api.fale.justfit.com.br/reembolso/confirmar\", sendRequest).then(function (res) {\n              setError(false);\n              setActiveItemIndex(9); // setUsers(prevState => [...prevState, ...res.data]);\n              // setUser(res.data);\n              // console.log(res.data.cliente);\n              // localStorage.setItem('@justfit/user', JSON.stringify(res.data));\n              // Router.push('/menu');\n            }).catch(function (error) {\n              console.log(error);\n              setError(true);\n            }).finally(function () {\n              setLoading(false);\n            }));\n\n          case 4:\n          case \"end\":\n            return _context2.stop();\n        }\n      }\n    }, null, null, null, Promise);\n  };\n\n  var fetchDataReembolsoLog = function fetchDataReembolsoLog(sendRequest) {\n    return _regeneratorRuntime.async(function fetchDataReembolsoLog$(_context3) {\n      while (1) {\n        switch (_context3.prev = _context3.next) {\n          case 0:\n            console.log(sendRequest);\n            console.log(\"fetchDataReembolsoLog\");\n            _context3.next = 4;\n            return _regeneratorRuntime.awrap(axios.post(\"https://api.fale.justfit.com.br/log/reembolso\", sendRequest).then(function (res) {\n              setError(false); // setActiveItemIndex(9);\n              // setUsers(prevState => [...prevState, ...res.data]);\n              // setUser(res.data);\n              // console.log(res.data.cliente);\n              // localStorage.setItem('@justfit/user', JSON.stringify(res.data));\n              // Router.push('/menu');\n            }).catch(function (error) {\n              console.log(error);\n              setError(true);\n            }).finally(function () {// setLoading(false);\n            }));\n\n          case 4:\n          case \"end\":\n            return _context3.stop();\n        }\n      }\n    }, null, null, null, Promise);\n  };\n\n  var fetchDataFale = function fetchDataFale(sendRequest) {\n    return _regeneratorRuntime.async(function fetchDataFale$(_context4) {\n      while (1) {\n        switch (_context4.prev = _context4.next) {\n          case 0:\n            _context4.next = 2;\n            return _regeneratorRuntime.awrap(axios.post(\"https://api.fale.justfit.com.br/solicitacoes\", sendRequest).then(function (res) {\n              setError(false);\n              setActiveItemIndex(7); // setUsers(prevState => [...prevState, ...res.data]);\n              // setUser(res.data);\n              // console.log(res.data.cliente);\n              // localStorage.setItem('@justfit/user', JSON.stringify(res.data));\n            }).catch(function (error) {\n              console.log(error);\n              setError(true);\n            }).finally(function () {\n              setLoading(false);\n            }));\n\n          case 2:\n          case \"end\":\n            return _context4.stop();\n        }\n      }\n    }, null, null, null, Promise);\n  };\n\n  var handleSubmitOferta = function handleSubmitOferta(event) {\n    event.preventDefault();\n\n    if (personalData.email != \"\" && personalData.celular != \"\") {\n      setLoading(true);\n      fetchDataConfirmar({\n        matricula: props.user.cliente.matricula,\n        id_oferta: selectedOffer.id,\n        email: personalData.email,\n        telefone: personalData.celular,\n        unidade_cnpj: props.user.cliente.unidade_cnpj,\n        creditos: props.user.creditos,\n        historico_parcelas: props.user.extrato\n      });\n    } else {\n      setError(true);\n    }\n  };\n\n  var handleSubmitReembolso = function handleSubmitReembolso(event) {\n    event.preventDefault();\n\n    if (personalData.email != \"\" && personalData.celular != \"\") {\n      setLoading(true);\n      fetchDataReembolso({\n        matricula: props.user.cliente.matricula,\n        email: personalData.email,\n        telefone: personalData.celular,\n        unidade_cnpj: props.user.cliente.unidade_cnpj,\n        creditos: props.user.creditos,\n        historico_parcelas: props.user.extrato\n      });\n      fetchDataReembolsoLog({\n        matricula: props.user.cliente.matricula,\n        nomeunidade: props.user.cliente.empresaNome\n      });\n    } else {\n      setError(true);\n    }\n  };\n\n  var handleSubmitReembolsoLog = function handleSubmitReembolsoLog(event) {\n    event.preventDefault();\n    console.log(\"handleSubmitReembolsoLog\");\n    fetchDataReembolsoLog({\n      matricula: props.user.cliente.matricula,\n      nomeunidade: props.user.cliente.empresaNome\n    });\n  };\n\n  var handleSubmitFale = function handleSubmitFale(event) {\n    event.preventDefault(); // setLoading(true);    \n\n    if (personalData.email != \"\" && personalData.celular != \"\") {\n      setLoading(true);\n      fetchDataFale({\n        email: personalData.email,\n        cpf: props.user.cliente.cpf,\n        nome: props.user.cliente.nome,\n        telefone: personalData.celular,\n        messagem: personalData.message,\n        id_unidade: 1,\n        aluno: \"S\",\n        assunto: \"Situação da aluno - Falar com o gerente\"\n      });\n    } else {\n      setError(true);\n    }\n  };\n\n  function handleChange(event) {\n    setError(false);\n    event.preventDefault();\n    var value = event.target.value;\n\n    switch (event.target.id) {\n      case 'email':\n        setPersonalData(function (prevState) {\n          // Object.assign também funcionaria\n          return _objectSpread({}, prevState, {\n            email: value\n          });\n        });\n        break;\n\n      case 'celular':\n        setPersonalData(function (prevState) {\n          // Object.assign também funcionaria\n          return _objectSpread({}, prevState, {\n            celular: value\n          });\n        });\n        break;\n\n      default:\n        // console.log(\"message\");\n        setPersonalData(function (prevState) {\n          // Object.assign também funcionaria\n          return _objectSpread({}, prevState, {\n            message: value\n          });\n        });\n        break;\n    }\n  }\n\n  var handleFocus = function handleFocus(event) {\n    return event.target.select();\n  };\n\n  function createData(name, code, population, size) {\n    var density = population / size;\n    return {\n      name: name,\n      code: code,\n      population: population,\n      size: size,\n      density: density\n    };\n  }\n\n  var rows = [createData('Aluno 1', 'IN', 1324171354, 3287263), createData('Aluno 2', 'CN', 1403500365, 9596961), createData('Aluno 3', 'IT', 60483973, 301340), createData('Aluno 4', 'US', 327167434, 9833520), createData('Aluno 5', 'CA', 37602103, 9984670), createData('Aluno 6', 'AU', 25475400, 7692024), createData('Aluno 7', 'DE', 83019200, 357578), createData('Aluno 8', 'IE', 4857000, 70273), createData('Aluno 9', 'MX', 126577691, 1972550), createData('Aluno 10', 'JP', 126317000, 377973), createData('Aluno 11', 'FR', 67022000, 640679), createData('Aluno 12', 'GB', 67545757, 242495), createData('Aluno 13', 'RU', 146793744, 17098246), createData('Aluno 14', 'NG', 200962417, 923768), createData('Aluno 15', 'BR', 210147125, 8515767)];\n  var rowsUser = props.user.extrato;\n  useEffect(function () {\n    setUsers(props.user);\n\n    if (props.user.ofertas.length > 0) {\n      setShowOptions(true);\n    } else {\n      setShowOptions(false);\n    }\n  }, [props.user]);\n  useEffect(function () {\n    // console.log(user.cliente.nome);\n    console.log(user);\n  }, [user]);\n  useEffect(function () {\n    // console.log(user.cliente.nome);\n    console.log(user);\n    var debito = 0;\n    var credito = 0;\n    {\n      rowsUser.map(function (row) {\n        return debito = debito + row.valorDebito, credito = credito + row.valorCredito;\n      });\n    }\n    setTotalTable({\n      debito: debito,\n      credito: credito\n    });\n  }, [rowsUser]);\n  useEffect(function () {\n    setTimeout(function () {\n      return setChangeColor(!changeColor);\n    }, 700);\n  }, [changeColor]);\n  useEffect(function () {\n    if (unidadeAberta && !inadimplente) {\n      setTimeout(function () {\n        return setShowOptions(false);\n      }, 700);\n    }\n  }, [unidadeAberta]);\n  useEffect(function () {\n    if (activeItemIndex == 11) {\n      // setTimeout(()=> showSaldoTop(false), 700)\n      showSaldoTop(false);\n    } else {\n      showSaldoTop(true);\n    }\n  }, [activeItemIndex]);\n  return __jsx(\"div\", {\n    className: classes.section\n  }, __jsx(\"div\", {\n    className: classes.container\n  }, __jsx(\"div\", {\n    id: \"navigation-pills\"\n  }, __jsx(GridContainer, null, __jsx(GridItem, {\n    xs: 12,\n    sm: 12,\n    md: 12,\n    lg: 6\n  }, __jsx(\"div\", {\n    className: classes.title\n  }, __jsx(\"h3\", null, \"Seja Bem-vindo(a), \", props.user.cliente.nome)), __jsx(\"div\", null, __jsx(\"span\", {\n    className: classes.title\n  }, \"CPF:\"), \" \", props.user.cliente.cpf, __jsx(\"br\", null), __jsx(\"span\", {\n    className: classes.title\n  }, \"Unidade:\"), \" \", props.user.cliente.empresaNome, __jsx(\"br\", null), __jsx(\"span\", {\n    className: classes.title\n  }, \"Plano:\"), \" \", props.user.cliente.plano, __jsx(\"br\", null))), !unidadeAberta && __jsx(GridItem, {\n    xs: 12,\n    sm: 12,\n    md: 12,\n    lg: 6\n  }, __jsx(\"div\", {\n    className: classNames(classes.textRight, classes.marginBottomZero)\n  }, __jsx(\"div\", {\n    className: classNames(classes.title, classes.marginBottomZero)\n  }, __jsx(\"span\", null, \"Saldo\"), showOptions && __jsx(\"h2\", {\n    className: classes.marginBottomZero,\n    style: {\n      color: \"#c9d302\",\n      marginTop: \"0px\"\n    }\n  }, \"R$ \", parseFloat(props.user.creditos.valorSaldo).toFixed(2).toString().replace(\".\", \",\")), !showOptions && __jsx(\"h2\", {\n    className: classes.marginBottomZero,\n    style: {\n      color: \"red\",\n      marginTop: \"0px\"\n    }\n  }, \"R$ \", parseFloat(props.user.creditos.valorSaldo).toFixed(2).toString().replace(\".\", \",\"))), __jsx(\"div\", {\n    className: classes.textRight\n  }, \"Confira aqui as unidades \", __jsx(\"br\", null), \"que continuam abertas\", __jsx(\"br\", null), __jsx(Link, {\n    href: \"/historico-do-aluno\"\n  }, __jsx(Button, {\n    button: true,\n    round: true,\n    color: \"primary\",\n    size: \"lg\",\n    target: \"_blank\",\n    href: \"https://justfit.com.br/unidades\",\n    style: {\n      color: \"#272727\",\n      marginTop: \"10px\"\n    }\n  }, \"Ver unidades\"))))), unidadeAberta && saldoTop && __jsx(GridItem, {\n    xs: 12,\n    sm: 12,\n    md: 12,\n    lg: 6\n  }, __jsx(\"div\", {\n    className: classNames(classes.textRight, classes.marginBottomZero)\n  }, __jsx(\"div\", {\n    className: classNames(classes.title, classes.marginBottomZero)\n  }, __jsx(\"span\", null, \"Dias de cr\\xE9dito\"), !showOptions && __jsx(\"h3\", {\n    className: classes.marginBottomZero,\n    style: {\n      color: \"#c9d302\",\n      marginTop: \"0px\"\n    }\n  }, props.user.creditos.diasCredito, \" dias\"), showOptions && // <h3 className={classes.marginBottomZero} style={{ color: \"red\", marginTop: \"0px\" }}>- {props.user.creditos.diasCredito} dias</h3>\n  __jsx(\"h3\", {\n    className: classes.marginBottomZero,\n    style: {\n      color: \"#c9d302\",\n      marginTop: \"0px\"\n    }\n  }, props.user.creditos.diasCredito, \" dias\")), __jsx(\"div\", {\n    className: classes.textRight\n  }, \"\\xE0 partir de \", __jsx(\"span\", {\n    style: {\n      color: \"#c9d302\",\n      fontWeight: \"900\"\n    }\n  }, \"13/07/2020\"), saldoNegativo && __jsx(React.Fragment, null, __jsx(\"br\", null), __jsx(\"br\", null), __jsx(\"span\", {\n    style: {\n      fontWeight: \"900\"\n    }\n  }, \"Saldo\"), __jsx(\"h3\", {\n    className: classes.marginBottomZero,\n    style: {\n      color: \"red\",\n      marginTop: \"0px\"\n    }\n  }, \"- R$ \", parseFloat(props.user.creditos.valorSaldo).toFixed(2).toString().replace(\".\", \",\"))))))), __jsx(SectionModal, {\n    setActive: setActiveItemIndex,\n    setShowModal: setShowModal,\n    showModal: showModal\n  }), __jsx(GridContainer, null, __jsx(GridItem, {\n    xs: 12,\n    sm: 12,\n    md: 12,\n    lg: 12\n  }, __jsx(NavPills, {\n    horizontal: {\n      tabsGrid: {\n        xs: 12,\n        sm: 2,\n        md: 2\n      },\n      contentGrid: {\n        xs: 12,\n        sm: 10,\n        md: 10\n      }\n    },\n    active: activeItemIndex,\n    setActive: setActiveItemIndex,\n    color: \"primary\",\n    tabs: [{\n      tabButton: \"Meu extrato\",\n      tabIcon: Dashboard,\n      tabContent: __jsx(React.Fragment, null, __jsx(TableContainer, {\n        component: Paper,\n        className: classes.containerTable,\n        style: {\n          maxHeight: \"640px\"\n        }\n      }, __jsx(Table, {\n        stickyHeader: true,\n        className: classes.table,\n        \"aria-label\": \"customized table\"\n      }, __jsx(TableHead, null, __jsx(TableRow, null, unidadeAberta && !saldoNegativo ? columnsUnidade.map(function (column) {\n        return __jsx(StyledTableCell, {\n          key: column.id,\n          align: column.align,\n          style: {\n            minWidth: column.minWidth\n          }\n        }, column.label);\n      }) : columns.map(function (column) {\n        return __jsx(StyledTableCell, {\n          key: column.id,\n          align: column.align,\n          style: {\n            minWidth: column.minWidth\n          }\n        }, column.label);\n      }))), __jsx(TableBody, null, rowsUser.map(function (row) {\n        return __jsx(StyledTableRow, {\n          key: row.name\n        }, __jsx(StyledTableCell, {\n          align: \"right\"\n        }, row.situacao), __jsx(StyledTableCell, {\n          align: \"right\"\n        }, \"R$ \", parseFloat(row.valor).toFixed(2).toString().replace(\".\", \",\")), __jsx(StyledTableCell, {\n          align: \"right\"\n        }, row.descricao), __jsx(StyledTableCell, {\n          align: \"right\"\n        }, row.dataVencimento), __jsx(StyledTableCell, {\n          align: \"right\"\n        }, row.diasUsados), (!unidadeAberta || saldoNegativo) && __jsx(StyledTableCell, {\n          align: \"right\",\n          style: {\n            color: \"red\"\n          }\n        }, \"R$ \", parseFloat(row.valorDebito).toFixed(2).toString().replace(\".\", \",\")), __jsx(StyledTableCell, {\n          align: \"right\"\n        }, row.diasCredito), (!unidadeAberta || saldoNegativo) && __jsx(StyledTableCell, {\n          align: \"right\"\n        }, \"R$ \", parseFloat(row.valorCredito).toFixed(2).toString().replace(\".\", \",\")));\n      }), unidadeAberta && !saldoNegativo ? __jsx(React.Fragment, null, __jsx(StyledTableRow, null, __jsx(StyledTableCell, {\n        colSpan: 2\n      }), __jsx(StyledTableCell, {\n        colSpan: 3\n      }, __jsx(\"b\", null, \"Saldo Total\")), __jsx(StyledTableCell, {\n        align: \"right\"\n      }, __jsx(\"b\", null, \"(=) \", props.user.creditos.diasCredito, \" dias\")))) : __jsx(React.Fragment, null, __jsx(StyledTableRow, null, __jsx(StyledTableCell, {\n        colSpan: 3\n      }), __jsx(StyledTableCell, {\n        colSpan: 2\n      }, __jsx(\"b\", null, \"Subtotal\")), __jsx(StyledTableCell, {\n        align: \"right\",\n        style: {\n          color: \"red\"\n        }\n      }, \"(-) R$ \", parseFloat(totalTable.debito).toFixed(2).toString().replace(\".\", \",\")), __jsx(StyledTableCell, {\n        colSpan: 1\n      }), __jsx(StyledTableCell, {\n        align: \"right\"\n      }, \"(+) R$ \", parseFloat(totalTable.credito).toFixed(2).toString().replace(\".\", \",\"))), __jsx(StyledTableRow, null, __jsx(StyledTableCell, {\n        colSpan: 3\n      }), __jsx(StyledTableCell, {\n        colSpan: 4\n      }, __jsx(\"b\", null, \"Saldo Total\")), __jsx(StyledTableCell, {\n        align: \"right\"\n      }, __jsx(\"b\", null, \"(=) R$ \", parseFloat(props.user.creditos.valorSaldo).toFixed(2).toString().replace(\".\", \",\")))))))), !unidadeAberta && showOptions && __jsx(\"div\", {\n        className: classes.textCenter,\n        style: {\n          marginTop: \"40px\"\n        }\n      }, __jsx(Button, {\n        button: true,\n        round: true,\n        color: \"primary\",\n        size: \"lg\",\n        style: {\n          color: \"#272727\",\n          maxWidth: \"100%\"\n        },\n        onClick: function onClick() {\n          setActiveItemIndex(1);\n        }\n      }, \"Op\\xE7\\xF5es para receber meus cr\\xE9ditos\")), !unidadeAberta && !showOptions && __jsx(\"div\", {\n        className: classes.textCenter,\n        style: {\n          marginTop: \"40px\"\n        }\n      }, __jsx(\"h4\", null, \"Fique tranquilo, nenhum valor ser\\xE1 cobrado\"), __jsx(Button, {\n        button: true,\n        round: true,\n        color: \"primary\",\n        size: \"lg\",\n        style: {\n          color: \"#272727\",\n          maxWidth: \"100%\"\n        },\n        onClick: function onClick() {\n          setActiveItemIndex(3);\n        }\n      }, \"Falar com meu gerente\")), unidadeAberta && __jsx(\"div\", {\n        className: classes.textCenter,\n        style: {\n          marginTop: \"40px\"\n        }\n      }, __jsx(Button, {\n        button: true,\n        round: true,\n        color: \"secondary\",\n        size: \"lg\",\n        style: {\n          color: \"#272727\",\n          maxWidth: \"100%\"\n        },\n        onClick: function onClick() {\n          setActiveItemIndex(11);\n        }\n      }, \"Voltar\")))\n    }, {\n      tabButton: \"Opções\",\n      tabIcon: LibraryBooks,\n      tabHidden: !showOptions,\n      // tabHidden: true,\n      tabContent: __jsx(React.Fragment, null, !unidadeAberta && showOptions && __jsx(React.Fragment, null, __jsx(SectionCards, {\n        setActive: setActiveItemIndex,\n        setOffer: setSelectedOffer,\n        user: props.user\n      }), __jsx(\"div\", {\n        className: classes.textCenter,\n        style: {\n          marginTop: \"10px\"\n        }\n      }, __jsx(Button, {\n        button: true,\n        round: true,\n        color: \"secondary\",\n        size: \"lg\",\n        style: {\n          color: \"#272727\",\n          maxWidth: \"100%\"\n        },\n        onClick: function onClick() {\n          setActiveItemIndex(4);\n        }\n      }, \"Quero avaliar outras op\\xE7\\xF5es\"))), unidadeAberta && __jsx(React.Fragment, null, __jsx(SectionCardsReabertura, {\n        setActive: setActiveItemIndex,\n        setOffer: setSelectedOffer,\n        user: props.user\n      }), __jsx(\"div\", {\n        className: classes.textCenter,\n        style: {\n          marginTop: \"10px\"\n        }\n      }, __jsx(Button, {\n        button: true,\n        round: true,\n        color: \"secondary\",\n        size: \"lg\",\n        style: {\n          color: \"#272727\",\n          maxWidth: \"100%\"\n        },\n        onClick: function onClick() {\n          setActiveItemIndex(11);\n        }\n      }, \"Voltar\"))))\n    }, {\n      tabButton: \"Sair\",\n      tabIcon: ExitToApp,\n      tabContent: __jsx(GridContainer, {\n        justify: \"center\"\n      }, __jsx(GridItem, {\n        xs: 12,\n        sm: 12,\n        md: 9,\n        lg: 9\n      }, __jsx(\"span\", null, __jsx(\"h3\", {\n        style: {\n          textAlign: \"center\"\n        }\n      }, \"Desejar entrar com outro CPF?\"), __jsx(\"br\", null), __jsx(\"div\", {\n        className: classes.textCenter\n      }, __jsx(Link, {\n        href: \"/historico-do-aluno\"\n      }, __jsx(Button, {\n        button: true,\n        round: true,\n        color: \"primary\",\n        size: \"lg\"\n      }, \"Sim, desejo sair\"))))))\n    }, {\n      tabButton: \"Contact\",\n      tabIcon: ExitToApp,\n      tabHidden: true,\n      tabContent: __jsx(\"div\", {\n        className: classes.container\n      }, __jsx(GridContainer, {\n        justify: \"center\"\n      }, __jsx(GridItem, {\n        xs: 12,\n        sm: 8,\n        md: 6\n      }, __jsx(Card, null, __jsx(\"form\", {\n        className: classes.form,\n        onSubmit: handleSubmitFale\n      }, __jsx(CardHeader, {\n        color: \"info\",\n        signup: true,\n        className: classes.cardHeader\n      }, __jsx(\"h4\", {\n        className: classes.cardTitle\n      }, \"Falar com gerente\")), __jsx(CardBody, {\n        signup: true\n      }, error && __jsx(SnackbarContent, {\n        message: __jsx(\"span\", null, __jsx(\"b\", null, \"Erro ao enviar os dados:\"), \" Verifique os campos e tente novamente\") // close\n        ,\n        color: \"danger\",\n        icon: \"info_outline\"\n      }), __jsx(CustomInput, {\n        id: \"email\",\n        formControlProps: {\n          fullWidth: true\n        },\n        inputProps: {\n          placeholder: \"Email...\",\n          type: \"text\",\n          value: personalData.email,\n          onChange: handleChange,\n          startAdornment: __jsx(InputAdornment, {\n            position: \"start\"\n          }, __jsx(Email, {\n            className: classes.inputIconsColor\n          }))\n        }\n      }), __jsx(CustomInput, {\n        id: \"celular\",\n        formControlProps: {\n          fullWidth: true\n        },\n        inputProps: {\n          placeholder: \"Celular...\",\n          type: \"text\",\n          value: personalData.celular,\n          onChange: handleChange,\n          onFocus: handleFocus,\n          inputComponent: TextMaskCustom,\n          startAdornment: __jsx(InputAdornment, {\n            position: \"start\"\n          }, __jsx(PhoneIphone, {\n            className: classes.inputIconsColor\n          }))\n        }\n      }), __jsx(CustomInput, {\n        labelText: \"Sua mensagem...\",\n        id: \"message\",\n        formControlProps: {\n          fullWidth: true\n        },\n        inputProps: {\n          value: personalData.message,\n          // onChange: handleChange(event, \"message\"),\n          onChange: handleChange,\n          multiline: true,\n          rows: 5\n        }\n      })), __jsx(\"div\", {\n        className: classes.textCenter\n      }, loading && __jsx(CircularProgress, {\n        style: {\n          color: \"#cad300\"\n        },\n        size: 30\n      }), !loading && __jsx(Button, {\n        button: true,\n        round: true,\n        color: \"primary\",\n        size: \"lg\",\n        type: \"submit\",\n        value: \"Submit\"\n      }, \"Enviar mensagem\")))), __jsx(\"div\", {\n        className: classes.textCenter\n      }, __jsx(Button, {\n        button: true,\n        round: true,\n        color: \"secondary\",\n        size: \"lg\",\n        style: {\n          color: \"#272727\",\n          maxWidth: \"100%\"\n        },\n        onClick: function onClick() {\n          showOptions ? setActiveItemIndex(1) : setActiveItemIndex(0);\n        }\n      }, \"Voltar\")))))\n    }, {\n      tabButton: \"Options\",\n      tabIcon: ExitToApp,\n      tabHidden: true,\n      tabContent: __jsx(SectionFeatures, {\n        setActive: setActiveItemIndex,\n        handleSubmit: handleSubmitReembolsoLog\n      })\n    }, {\n      tabButton: \"Confirmation\",\n      tabIcon: ExitToApp,\n      tabHidden: true,\n      tabContent: __jsx(GridContainer, {\n        justify: \"center\",\n        direction: matches ? \"column-reverse\" : null\n      }, __jsx(GridItem, {\n        xs: 12,\n        sm: 12,\n        md: 6,\n        className: classes.gridItem\n      }, __jsx(Card, null, __jsx(\"form\", {\n        className: classes.form,\n        onSubmit: handleSubmitOferta\n      }, __jsx(CardHeader, {\n        color: \"info\",\n        signup: true,\n        className: classes.cardHeader\n      }, __jsx(\"h4\", {\n        className: classes.cardTitle\n      }, \"Confirmar dados\")), __jsx(CardBody, {\n        signup: true\n      }, error && __jsx(SnackbarContent, {\n        message: __jsx(\"span\", null, __jsx(\"b\", null, \"Erro ao enviar os dados:\"), \" Verifique os campos e tente novamente\") // close\n        ,\n        color: \"danger\",\n        icon: \"info_outline\"\n      }), __jsx(CustomInput, {\n        id: \"email\",\n        formControlProps: {\n          fullWidth: true\n        },\n        inputProps: {\n          placeholder: \"Email...\",\n          type: \"text\",\n          value: personalData.email,\n          onChange: handleChange,\n          startAdornment: __jsx(InputAdornment, {\n            position: \"start\"\n          }, __jsx(Email, {\n            className: classes.inputIconsColor\n          }))\n        }\n      }), __jsx(CustomInput, {\n        id: \"celular\",\n        formControlProps: {\n          fullWidth: true\n        },\n        inputProps: {\n          placeholder: \"Celular...\",\n          type: \"text\",\n          value: personalData.celular,\n          onChange: handleChange,\n          onFocus: handleFocus,\n          inputComponent: TextMaskCustom,\n          startAdornment: __jsx(InputAdornment, {\n            position: \"start\"\n          }, __jsx(PhoneIphone, {\n            className: classes.inputIconsColor\n          }))\n        }\n      })), __jsx(\"div\", {\n        className: classes.textCenter\n      }, loading && __jsx(CircularProgress, {\n        style: {\n          color: \"#cad300\"\n        },\n        size: 30\n      }), !loading && __jsx(Button, {\n        button: true,\n        round: true,\n        color: \"primary\",\n        size: \"lg\",\n        type: \"submit\",\n        value: \"Submit\"\n      }, \"Confirmar escolha\")))), __jsx(\"div\", {\n        className: classes.textCenter\n      }, __jsx(Button, {\n        button: true,\n        round: true,\n        color: \"secondary\",\n        size: \"lg\",\n        style: {\n          color: \"#272727\",\n          maxWidth: \"100%\"\n        },\n        onClick: function onClick() {\n          setActiveItemIndex(1);\n        }\n      }, \"Voltar\"))), !unidadeAberta && __jsx(GridItem, {\n        xs: 12,\n        sm: 12,\n        md: 4,\n        className: classes.gridItem\n      }, __jsx(\"h4\", {\n        className: classes.title,\n        style: {\n          marginBottom: \"0\"\n        }\n      }, \"Op\\xE7\\xE3o selecionada:\"), __jsx(\"h4\", {\n        className: classes.title,\n        style: {\n          color: \"#cad300\",\n          margin: \"20px 10px 0 10px\"\n        }\n      }, \"OFERTA \", selectedOffer.opcao), __jsx(\"div\", {\n        style: {\n          margin: \"10px 10px\"\n        }\n      }, __jsx(\"h3\", {\n        className: classes.cardTitleWhite,\n        style: {\n          marginTop: \"0px\",\n          marginBottom: \"0px\"\n        }\n      }, __jsx(\"small\", null, \"R$\"), __jsx(\"strike\", {\n        style: {\n          color: \"red\"\n        }\n      }, __jsx(\"span\", {\n        style: {\n          color: \"white\"\n        }\n      }, selectedOffer.valor_credito))), \"por:\", __jsx(\"h5\", {\n        className: classes.cardTitleWhite,\n        style: {\n          marginTop: \"0px\"\n        }\n      }, __jsx(\"small\", null, \"R$\"), parseFloat(props.user.creditos.valorSaldo).toFixed(2).toString().replace(\".\", \",\")), __jsx(\"h5\", {\n        className: classes.cardTitleWhite,\n        style: {\n          marginTop: \"0px\",\n          marginBottom: \"0px\"\n        }\n      }, \"SEM CUSTO ADICIONAL\")), __jsx(\"ul\", {\n        className: classes.listUnstyled\n      }, __jsx(\"li\", null, __jsx(\"b\", null, selectedOffer.diasDisponiveis, \" dias\"), \" do Plano Fit Plus\"), __jsx(\"li\", null, __jsx(\"b\", null, selectedOffer.qtde_dias_clicou_personal, \" dias\"), \" de Personal Online \", selectedOffer.opcao == 2 && \"+60 anos\"), selectedOffer.opcao == 2 && __jsx(\"li\", null, __jsx(\"b\", null, \"Transfer\\xEAncia\"), \" para um amigo(a) ou familiar\"), __jsx(\"li\", null, \"Acesso a \", __jsx(\"b\", null, \"TODAS\"), \" \", __jsx(\"br\", null), \"as unidades da rede\"), __jsx(\"li\", null, \"Poltrona de massagem\"), __jsx(\"li\", null, \"Direito a levar \", __jsx(\"b\", null, \"5 convidados\"), \" \", __jsx(\"br\", null), \"para treinar \", __jsx(\"br\", null), __jsx(\"small\", null, \"de domingo a quinta e feriados\")), __jsx(\"li\", null, \"Acesso ao Wi-Fi\"), __jsx(\"li\", null, \"Acompanhamento mensal de n\\xEDvel de gordura e idade corporal\"), __jsx(\"li\", null, \"FIT F\\xE9rias\"))), unidadeAberta && __jsx(GridItem, {\n        xs: 12,\n        sm: 12,\n        md: 4,\n        className: classes.gridItem\n      }, __jsx(\"h4\", {\n        className: classes.title,\n        style: {\n          marginBottom: \"0\"\n        }\n      }, \"Op\\xE7\\xE3o selecionada:\"), __jsx(\"h4\", {\n        className: classes.title,\n        style: {\n          color: \"#cad300\",\n          margin: \"20px 10px 0 10px\"\n        }\n      }, \"OFERTA \", selectedOffer.opcao), selectedOffer.opcao == 1 && __jsx(React.Fragment, null, __jsx(\"div\", {\n        style: {\n          margin: \"10px 10px\"\n        }\n      }, \"1\\xAA Mensalidade\", __jsx(\"h3\", {\n        className: classes.cardTitleWhite,\n        style: {\n          marginTop: \"0px\",\n          marginBottom: \"0px\"\n        }\n      }, \"GR\\xC1TIS\"), __jsx(\"br\", null), \"2\\xAA Mensalidade\", __jsx(\"h5\", {\n        className: classes.cardTitleWhite,\n        style: {\n          marginTop: \"0px\"\n        }\n      }, __jsx(\"small\", null, \"R$\"), \" R$ 39,90\")), __jsx(\"ul\", {\n        className: classes.listUnstyled\n      }, __jsx(\"li\", null, __jsx(\"b\", null, selectedOffer.qtde_dias_clicou_personal, \" dias\"), \" de Personal Online\"))), selectedOffer.opcao == 2 && __jsx(React.Fragment, null, __jsx(\"div\", {\n        style: {\n          margin: \"10px 10px\"\n        }\n      }, \"Cr\\xE9dito de\", __jsx(\"h3\", {\n        className: classes.cardTitleWhite,\n        style: {\n          marginTop: \"0px\",\n          marginBottom: \"0px\"\n        }\n      }, props.user.creditos.diasCredito, \" Dias\")))))\n    }, {\n      tabButton: \"ConfirmationEstorno\",\n      tabIcon: ExitToApp,\n      tabHidden: true,\n      tabContent: __jsx(GridContainer, {\n        justify: \"center\",\n        direction: matches ? \"column-reverse\" : null\n      }, __jsx(GridItem, {\n        xs: 12,\n        sm: 12,\n        md: 6,\n        className: classes.gridItem\n      }, __jsx(Card, null, __jsx(\"form\", {\n        className: classes.form,\n        onSubmit: handleSubmitReembolso\n      }, __jsx(CardHeader, {\n        color: \"info\",\n        signup: true,\n        className: classes.cardHeader\n      }, __jsx(\"h4\", {\n        className: classes.cardTitle\n      }, \"Confirmar dados\")), __jsx(CardBody, {\n        signup: true\n      }, error && __jsx(SnackbarContent, {\n        message: __jsx(\"span\", null, __jsx(\"b\", null, \"Erro ao enviar os dados:\"), \" Verifique os campos e tente novamente\") // close\n        ,\n        color: \"danger\",\n        icon: \"info_outline\"\n      }), __jsx(CustomInput, {\n        id: \"email\",\n        formControlProps: {\n          fullWidth: true\n        },\n        inputProps: {\n          placeholder: \"Email...\",\n          type: \"text\",\n          value: personalData.email,\n          onChange: handleChange,\n          startAdornment: __jsx(InputAdornment, {\n            position: \"start\"\n          }, __jsx(Email, {\n            className: classes.inputIconsColor\n          }))\n        }\n      }), __jsx(CustomInput, {\n        id: \"celular\",\n        formControlProps: {\n          fullWidth: true\n        },\n        inputProps: {\n          placeholder: \"Celular...\",\n          type: \"text\",\n          value: personalData.celular,\n          onChange: handleChange,\n          onFocus: handleFocus,\n          inputComponent: TextMaskCustom,\n          startAdornment: __jsx(InputAdornment, {\n            position: \"start\"\n          }, __jsx(PhoneIphone, {\n            className: classes.inputIconsColor\n          }))\n        }\n      })), __jsx(\"div\", {\n        className: classes.textCenter\n      }, loading && __jsx(CircularProgress, {\n        style: {\n          color: \"#cad300\"\n        },\n        size: 30\n      }), !loading && __jsx(Button, {\n        button: true,\n        round: true,\n        color: \"primary\",\n        size: \"lg\",\n        type: \"submit\",\n        value: \"Submit\"\n      }, \"Confirmar escolha\")))), __jsx(\"div\", {\n        className: classes.textCenter\n      }, __jsx(Button, {\n        button: true,\n        round: true,\n        color: \"secondary\",\n        size: \"lg\",\n        style: {\n          color: \"#272727\",\n          maxWidth: \"100%\"\n        },\n        onClick: function onClick() {\n          setActiveItemIndex(1);\n        }\n      }, \"Voltar\"))), __jsx(GridItem, {\n        xs: 12,\n        sm: 12,\n        md: 4,\n        className: classes.gridItem\n      }, __jsx(\"h4\", {\n        className: classes.title,\n        style: {\n          marginBottom: \"0\"\n        }\n      }, \"Op\\xE7\\xE3o selecionada:\"), __jsx(\"h4\", {\n        className: classes.title,\n        style: {\n          color: \"#cad300\",\n          margin: \"20px 10px\"\n        }\n      }, \"Solicita\\xE7\\xE3o de reembolso\"), __jsx(\"ul\", {\n        className: classes.listUnstyled\n      }, __jsx(\"li\", null, __jsx(\"b\", null, \"R$ \", parseFloat(props.user.creditos.valorSaldo).toFixed(2).toString().replace(\".\", \",\")), \" a ser reembolsado\")), __jsx(\"hr\", {\n        style: {\n          border: \"1px solid #ffffff\",\n          marginTop: \"30px\"\n        }\n      }), __jsx(\"p\", {\n        className: classes.description\n      }, \"O reembolso ser\\xE1 feito atrav\\xE9s da sua forma de pagamento que consta em nosso cadastro e o seu plano ser\\xE1 cancelado.\")))\n    }, {\n      tabButton: \"FeedbackContato\",\n      tabIcon: ExitToApp,\n      tabHidden: true,\n      tabContent: __jsx(GridContainer, {\n        justify: \"center\"\n      }, __jsx(GridItem, {\n        xs: 12,\n        sm: 12,\n        md: 6,\n        lg: 7\n      }, __jsx(\"span\", null, __jsx(\"div\", {\n        style: {\n          textAlign: \"center\"\n        }\n      }, __jsx(CheckCircle, {\n        className: classes.largeIcon\n      }), __jsx(\"h3\", {\n        style: {\n          textAlign: \"center\"\n        }\n      }, \"Solicita\\xE7\\xE3o enviada com sucesso!\"), \"Em at\\xE9 72 horas, o gerente entrar\\xE1 em contato\"), __jsx(\"br\", null), __jsx(\"div\", {\n        className: classes.textCenter\n      }))))\n    }, {\n      tabButton: \"FeedbackEstorno\",\n      tabIcon: ExitToApp,\n      tabHidden: true,\n      tabContent: __jsx(GridContainer, {\n        justify: \"center\"\n      }, __jsx(GridItem, {\n        xs: 12,\n        sm: 12,\n        md: 6,\n        lg: 7\n      }, __jsx(\"span\", null, __jsx(\"div\", {\n        style: {\n          textAlign: \"center\"\n        }\n      }, __jsx(CheckCircle, {\n        className: classes.largeIcon\n      }), __jsx(\"h3\", {\n        style: {\n          textAlign: \"center\"\n        }\n      }, \"Solicita\\xE7\\xE3o enviada com sucesso!\"), __jsx(\"h4\", {\n        style: {\n          textAlign: \"center\"\n        }\n      }, \"Muito obrigado pela confian\\xE7a e por esse tempo que passamos juntos. Esperamos que, em breve, nos encontremos novamente em uma nova unidade.\"), \"Enviamos um email com os detalhes.\", __jsx(\"br\", null), \"Para conta corrente, o reembolso ser\\xE1 feito em at\\xE9 15 dias. Para cart\\xE3o de cr\\xE9dito, ser\\xE1 feito em at\\xE9 40 dias, dependendo da data de fechamento da sua fatura.\"), __jsx(\"br\", null), __jsx(\"div\", {\n        className: classes.textCenter\n      }))))\n    }, {\n      tabButton: \"FeedbackOferta\",\n      tabIcon: ExitToApp,\n      tabHidden: true,\n      tabContent: __jsx(GridContainer, {\n        justify: \"center\"\n      }, __jsx(GridItem, {\n        xs: 12,\n        sm: 12,\n        md: 6,\n        lg: 7\n      }, __jsx(\"span\", null, __jsx(\"div\", {\n        style: {\n          textAlign: \"center\"\n        }\n      }, __jsx(CheckCircle, {\n        className: classes.largeIcon\n      }), __jsx(\"h3\", {\n        style: {\n          textAlign: \"center\"\n        }\n      }, \"\\xD3tima escolha, parab\\xE9ns!\"), \"Enviamos um email com os detalhes.\", __jsx(\"br\", null), \"Siga as instru\\xE7\\xF5es enviadas no email\", __jsx(\"br\", null), \"para confirmar os benef\\xEDcios.\"), __jsx(\"br\", null), __jsx(\"div\", {\n        className: classes.textCenter\n      }))))\n    }, {\n      tabButton: \"FeedbackNewOffer\",\n      tabIcon: ExitToApp,\n      tabHidden: true,\n      tabContent: __jsx(React.Fragment, null, __jsx(SectionNewOffer, {\n        setActive: setActiveItemIndex,\n        setOffer: setSelectedOffer,\n        user: props.user\n      }), __jsx(\"div\", {\n        className: classes.textCenter,\n        style: {\n          marginTop: \"10px\"\n        }\n      }, __jsx(Button, {\n        button: true,\n        round: true,\n        color: \"secondary\",\n        size: \"lg\",\n        style: {\n          color: \"#272727\",\n          maxWidth: \"100%\"\n        },\n        onClick: function onClick() {\n          setActiveItemIndex(11);\n        }\n      }, \"Ver meus cr\\xE9ditos\")))\n    }, {\n      tabButton: \"InfoCreditos\",\n      tabIcon: ExitToApp,\n      tabHidden: true,\n      tabContent: __jsx(React.Fragment, null, __jsx(GridContainer, {\n        justify: \"center\"\n      }, __jsx(GridItem, {\n        xs: 12,\n        sm: 12,\n        md: 6,\n        lg: 7\n      }, __jsx(\"span\", null, __jsx(\"div\", {\n        style: {\n          textAlign: \"center\"\n        }\n      }, unidadeAberta && !inadimplente && __jsx(EventAvailable, {\n        className: classes.largeIcon\n      }), unidadeAberta && inadimplente && __jsx(ErrorOutline, {\n        color: \"warning\",\n        className: classes.largeIcon\n      }), __jsx(\"h3\", {\n        style: {\n          textAlign: \"center\"\n        }\n      }, unidadeAberta && !saldoNegativo && __jsx(React.Fragment, null, \"Voc\\xEA possui \", __jsx(\"span\", {\n        style: {\n          color: \"#c9d302\",\n          fontSize: \"3rem\"\n        }\n      }, props.user.creditos.diasCredito), \" dias de cr\\xE9dito\", __jsx(\"br\", null), \"\\xC0 partir do dia \", __jsx(\"span\", {\n        style: {\n          color: \"#c9d302\"\n        }\n      }, \"13/07/2020\")), unidadeAberta && saldoNegativo && __jsx(React.Fragment, null, \"Identificamos um \", __jsx(\"br\", null), \"d\\xE9bito de \", __jsx(\"span\", {\n        style: {\n          color: \"red\"\n        }\n      }, \" - R$ \", parseFloat(props.user.creditos.valorSaldo).toFixed(2).toString().replace(\".\", \",\"), \" \")))), __jsx(\"br\", null), unidadeAberta && inadimplente && !saldoNegativo && __jsx(\"div\", {\n        className: classes.textCenter\n      }, __jsx(Button, {\n        button: true,\n        round: true,\n        color: changeColor ? \"primary\" : \"secondary\",\n        size: \"lg\",\n        style: {\n          color: \"#272727\",\n          maxWidth: \"100%\"\n        },\n        onClick: function onClick() {\n          setActiveItemIndex(1);\n        }\n      }, \"Op\\xE7\\xF5es para utilizar meus cr\\xE9ditos\"))))), unidadeAberta && __jsx(React.Fragment, null, __jsx(SectionFeaturesReabertura, {\n        setActive: setActiveItemIndex,\n        handleSubmit: handleSubmitReembolsoLog\n      })))\n    }]\n  }))))));\n}","map":null,"metadata":{},"sourceType":"module"}