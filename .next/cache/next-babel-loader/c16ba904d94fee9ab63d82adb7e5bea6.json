{"ast":null,"code":"var _jsxFileName = \"/Users/gabrieldossantos/Google Drive (webmaster@wigoo.com.br)/Wigoo Desenvolvimento/justfit.com.br/clicoupersonal.com.br/checkout/pages-sections/checkout/SectionAnamnese.js\";\nvar __jsx = React.createElement;\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nimport React from \"react\";\nimport { useEffect, useState } from \"react\";\nimport axios from 'axios'; // react components used to create a google map\n\nimport { withScriptjs, withGoogleMap, GoogleMap, Marker } from \"react-google-maps\"; // @material-ui/core components\n\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Checkbox from \"@material-ui/core/Checkbox\";\nimport FormControlLabel from \"@material-ui/core/FormControlLabel\";\nimport InputAdornment from \"@material-ui/core/InputAdornment\"; // @material-ui/icons\n\nimport PinDrop from \"@material-ui/icons/PinDrop\";\nimport Phone from \"@material-ui/icons/Phone\";\nimport Check from \"@material-ui/icons/Check\";\nimport Email from \"@material-ui/icons/Email\";\nimport EventIcon from '@material-ui/icons/Event';\nimport Favorite from \"@material-ui/icons/Favorite\";\nimport AssignmentInd from \"@material-ui/icons/AssignmentInd\"; // core components\n\nimport GridContainer from \"components/Grid/GridContainer.js\";\nimport GridItem from \"components/Grid/GridItem.js\";\nimport InfoArea from \"components/InfoArea/InfoArea.js\";\nimport Card from \"components/Card/Card.js\";\nimport CardHeader from \"components/Card/CardHeader.js\";\nimport CardBody from \"components/Card/CardBody.js\";\nimport CardFooter from \"components/Card/CardFooter.js\";\nimport CustomInput from \"components/CustomInput/CustomInput.js\";\nimport Button from \"components/CustomButtons/Button.js\";\nimport SnackbarContent from \"components/Snackbar/SnackbarContent.js\";\nimport FormHelperText from '@material-ui/core/FormHelperText';\nimport FormControl from '@material-ui/core/FormControl';\nimport FormGroup from '@material-ui/core/FormGroup';\nimport Select from \"@material-ui/core/Select\";\nimport MenuItem from \"@material-ui/core/MenuItem\";\nimport InputLabel from \"@material-ui/core/InputLabel\";\nimport Grow from '@material-ui/core/Grow';\nimport InputMask from \"react-input-mask\";\nimport MaskedInput from 'react-text-mask';\nimport PropTypes from 'prop-types';\nimport createNumberMask from 'text-mask-addons/dist/createNumberMask';\nimport { useForm } from \"react-hook-form\";\nimport { yupResolver } from '@hookform/resolvers';\nimport * as yup from \"yup\";\nimport { setLocale } from 'yup';\nimport checkoutStyle from \"assets/jss/nextjs-material-kit-pro/pages/checkoutSections/checkoutStyle.js\";\nimport city from \"assets/img/examples/city.jpg\";\nconst useStyles = makeStyles(checkoutStyle);\n\nfunction TextMaskCustom(props) {\n  const {\n    inputRef\n  } = props,\n        other = _objectWithoutProperties(props, [\"inputRef\"]);\n\n  return __jsx(MaskedInput, _extends({}, other, {\n    ref: ref => {\n      inputRef(ref ? ref.inputElement : null);\n    },\n    mask: [/[0-9]/, /[0-9]/, /[0-9]/, '.', /[0-9]/, /[0-9]/, /[0-9]/, '.', /[0-9]/, /[0-9]/, /[0-9]/, '-', /[0-9]/, /[0-9]/] // placeholderChar={'\\u2000'}\n    ,\n    showMask: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 5\n    }\n  }));\n}\n\nTextMaskCustom.propTypes = {\n  inputRef: PropTypes.func.isRequired\n};\n\nfunction PhoneMask(props) {\n  const {\n    inputRef\n  } = props,\n        other = _objectWithoutProperties(props, [\"inputRef\"]);\n\n  return __jsx(MaskedInput, _extends({}, other, {\n    ref: ref => {\n      inputRef(ref ? ref.inputElement : null);\n    },\n    mask: ['(', /[1-9]/, /[0-9]/, ')', ' ', /[1-9]/, /[0-9]/, /[0-9]/, /[0-9]/, /[0-9]/, '-', /[0-9]/, /[0-9]/, /[0-9]/, /[0-9]/] // placeholderChar={'\\u2000'}\n    ,\n    showMask: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 5\n    }\n  }));\n}\n\nPhoneMask.propTypes = {\n  inputRef: PropTypes.func.isRequired\n};\n\nfunction DateMask(props) {\n  const {\n    inputRef\n  } = props,\n        other = _objectWithoutProperties(props, [\"inputRef\"]);\n\n  return __jsx(MaskedInput, _extends({}, other, {\n    ref: ref => {\n      inputRef(ref ? ref.inputElement : null);\n    } // mask={['(', /[1-9]/, /\\d/, /\\d/, ')', ' ', /\\d/, /\\d/, /\\d/, '-', /\\d/, /\\d/, /\\d/, /\\d/]}\n    ,\n    mask: [/\\d/, /\\d/, '/', /\\d/, /\\d/, '/', /\\d/, /\\d/, /\\d/, /\\d/] // placeholderChar={'\\u2000'}\n    ,\n    showMask: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 107,\n      columnNumber: 5\n    }\n  }));\n}\n\nDateMask.propTypes = {\n  inputRef: PropTypes.func.isRequired\n};\nconst defaultMaskOptions = {\n  prefix: '',\n  suffix: ' Kg',\n  includeThousandsSeparator: true,\n  thousandsSeparatorSymbol: '.',\n  allowDecimal: true,\n  decimalSymbol: ',',\n  decimalLimit: 2,\n  // how many digits allowed after the decimal\n  integerLimit: 3,\n  // limit length of integer numbers\n  allowNegative: false,\n  allowLeadingZeroes: false\n};\n\nconst PesoMask = props => {\n  const {\n    inputRef,\n    maskOptions\n  } = props,\n        other = _objectWithoutProperties(props, [\"inputRef\", \"maskOptions\"]);\n\n  const currencyMask = createNumberMask(_objectSpread({}, defaultMaskOptions, {}, maskOptions));\n  return __jsx(MaskedInput, _extends({}, other, {\n    ref: ref => {\n      inputRef(ref ? ref.inputElement : null);\n    },\n    mask: currencyMask,\n    showMask: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 148,\n      columnNumber: 5\n    }\n  }));\n};\n\nPesoMask.defaultProps = {\n  inputMode: 'numeric',\n  maskOptions: {}\n};\nPesoMask.propTypes = {\n  inputRef: PropTypes.func.isRequired,\n  inputmode: PropTypes.string,\n  maskOptions: PropTypes.shape({\n    prefix: PropTypes.string,\n    suffix: PropTypes.string,\n    includeThousandsSeparator: PropTypes.boolean,\n    thousandsSeparatorSymbol: PropTypes.string,\n    allowDecimal: PropTypes.boolean,\n    decimalSymbol: PropTypes.string,\n    decimalLimit: PropTypes.string,\n    requireDecimal: PropTypes.boolean,\n    allowNegative: PropTypes.boolean,\n    allowLeadingZeroes: PropTypes.boolean,\n    integerLimit: PropTypes.number\n  })\n};\nsetLocale({\n  mixed: {\n    notType: function notType(_ref) {\n      switch (_ref.type) {\n        case 'number':\n          return 'deve ser um número';\n\n        case 'string':\n          return 'deve ser um texto';\n\n        default:\n          return 'formato errado';\n      }\n    },\n    default: 'é inválido',\n    required: 'Desculpe, este campo é obrigatório',\n    oneOf: 'deve ser um dos seguintes valores: ${values}',\n    notOneOf: 'não pode ser um dos seguintes valores: ${values}'\n  },\n  string: {\n    length: 'deve ter exatamente ${length} caracteres',\n    min: 'deve ter pelo menos ${min} caracteres',\n    max: 'deve ter no máximo ${max} caracteres',\n    email: 'Por favor, informe um e-mail inválido',\n    url: 'deve ter um formato de URL válida',\n    trim: 'não deve conter espaços no início ou no fim.',\n    lowercase: 'deve estar em maiúsculo',\n    uppercase: 'deve estar em minúsculo'\n  },\n  number: {\n    min: 'deve ser no mínimo ${min}',\n    max: 'deve ser no máximo ${max}',\n    lessThan: 'deve ser menor que ${less}',\n    moreThan: 'deve ser maior que ${more}',\n    notEqual: 'não pode ser igual à ${notEqual}',\n    positive: 'deve ser um número posítivo',\n    negative: 'deve ser um número negativo',\n    integer: 'deve ser um número inteiro'\n  },\n  date: {\n    min: 'deve ser maior que a data ${min}',\n    max: 'deve ser menor que a data ${max}'\n  },\n  array: {\n    min: 'deve ter no mínimo ${min} itens',\n    max: 'deve ter no máximo ${max} itens'\n  }\n});\nconst regexCPF = /([0-9]{2}[\\.]?[0-9]{3}[\\.]?[0-9]{3}[\\/]?[0-9]{4}[-]?[0-9]{2})|([0-9]{3}[\\.]?[0-9]{3}[\\.]?[0-9]{3}[-]?[0-9]{2})/gm;\n\nfunction cpfValidate(cpf) {\n  console.log(\"Validatring\", cpf);\n  return cpf.length > 10;\n}\n\nfunction isValidCPF(cpf) {\n  if (typeof cpf !== \"string\") return false;\n  cpf = cpf.replace(/[\\s.-]*/igm, '');\n\n  if (!cpf || cpf.length != 11 || cpf == \"00000000000\" || cpf == \"11111111111\" || cpf == \"22222222222\" || cpf == \"33333333333\" || cpf == \"44444444444\" || cpf == \"55555555555\" || cpf == \"66666666666\" || cpf == \"77777777777\" || cpf == \"88888888888\" || cpf == \"99999999999\") {\n    return false;\n  }\n\n  var soma = 0;\n  var resto;\n\n  for (var i = 1; i <= 9; i++) soma = soma + parseInt(cpf.substring(i - 1, i)) * (11 - i);\n\n  resto = soma * 10 % 11;\n  if (resto == 10 || resto == 11) resto = 0;\n  if (resto != parseInt(cpf.substring(9, 10))) return false;\n  soma = 0;\n\n  for (var i = 1; i <= 10; i++) soma = soma + parseInt(cpf.substring(i - 1, i)) * (12 - i);\n\n  resto = soma * 10 % 11;\n  if (resto == 10 || resto == 11) resto = 0;\n  if (resto != parseInt(cpf.substring(10, 11))) return false;\n  return true;\n}\n\nfunction isValidPhone(phone) {\n  return /^(?:(?:\\+|00)?(55)\\s?)?(?:\\(?([1-9][0-9])\\)?\\s?)?(?:((?:9\\d|[2-9])\\d{3})\\-?(\\d{4}))$/.test(phone);\n}\n\nfunction isValidDate(date) {\n  return /^((((0?[1-9]|[12]\\d|3[01])[\\.\\-\\/](0?[13578]|1[02])      [\\.\\-\\/]((1[6-9]|[2-9]\\d)?\\d{2}))|((0?[1-9]|[12]\\d|30)[\\.\\-\\/](0?[13456789]|1[012])[\\.\\-\\/]((1[6-9]|[2-9]\\d)?\\d{2}))|((0?[1-9]|1\\d|2[0-8])[\\.\\-\\/]0?2[\\.\\-\\/]((1[6-9]|[2-9]\\d)?\\d{2}))|(29[\\.\\-\\/]0?2[\\.\\-\\/]((1[6-9]|[2-9]\\d)?(0[48]|[2468][048]|[13579][26])|((16|[2468][048]|[3579][26])00)|00)))|(((0[1-9]|[12]\\d|3[01])(0[13578]|1[02])((1[6-9]|[2-9]\\d)?\\d{2}))|((0[1-9]|[12]\\d|30)(0[13456789]|1[012])((1[6-9]|[2-9]\\d)?\\d{2}))|((0[1-9]|1\\d|2[0-8])02((1[6-9]|[2-9]\\d)?\\d{2}))|(2902((1[6-9]|[2-9]\\d)?(0[48]|[2468][048]|[13579][26])|((16|[2468][048]|[3579][26])00)|00))))$/.test(date);\n}\n\nyup.addMethod(yup.string, \"cpf\", function (message) {\n  // return yup.mixed().test(\"cpf\", message || \"número de CPF inválido\", value => cpfValidate(value));\n  return yup.mixed().test(\"cpf\", message || \"número de CPF inválido\", value => isValidCPF(value));\n});\nyup.addMethod(yup.string, \"phone\", function (message) {\n  return yup.mixed().test(\"phone\", message || \"número de celular inválido\", value => isValidPhone(value));\n});\nyup.addMethod(yup.string, \"date\", function (message) {\n  return yup.mixed().test(\"date\", message || \"data inválida\", value => isValidDate(value));\n}); // const SignupSchema = yup.object().shape({\n//   // firstName: yup.string().required(),\n//   cpf: yup\n//     .string()\n//     // .required(), \n// \t\t// .transform(function removeNonNumericalChar(value) {\n// \t\t// \tconsole.log(\"Transforming\", value);\n// \t\t// \treturn this.isType(value) && value !== null ? value.replace(/\\D/g, \"\") : value;\n// \t\t// })\n// \t\t// .matches(regexCPF, \"formato inválido\")\n//     .cpf(\"informe um CPF válido\")\n//     ,\n//   first: yup\n//     .string()\n//     .required(),  \n//   // email: yup.string().required(),\n//   last: yup\n//     .number()\n//     // .required()\n//     .positive()\n//     .integer(),    \n//   // message: yup.string().url(),\n//   // checkboxInput: yup.boolean().oneOf([true],'aceite obrigatório')\n// });\n\nconst SignupSchema = yup.object().shape({\n  cpf: yup.string().cpf(\"Por favor, informe um CPF válido\"),\n  nome: yup.string().required(),\n  email: yup.string().required().email(),\n  telefone: yup.string().phone(\"Por favor, informe um número de celular válido\"),\n  dataNascimento: yup.string().date(\"Por favor, informe uma data válida\"),\n  cep: yup.string().required(),\n  endereco: yup.string().required(),\n  numero: yup.number().required(),\n  complemento: yup.string(),\n  bairro: yup.string().required(),\n  estado: yup.string().required(),\n  cidade: yup.string().required(),\n  idade: yup.number().required(),\n  sexo: yup.number().required() // receberContatoEmail: yup.boolean().oneOf([true],'aceite obrigatório'),\n  // receberContatoSMS: yup.boolean().oneOf([true],'aceite obrigatório'),\n  // receberContatoWhatsApp: yup.boolean().oneOf([true],'aceite obrigatório')\n\n}); // const schema = yup.object().shape({\n//   first: yup.string().required(),\n//   age: yup.number().positive().integer().required(),\n// });\n\nexport default function SectionAnamnese(props) {\n  // const { register, errors, handleSubmit} = useForm({\n  //   validationSchema: SignupSchema\n  // });\n  const {\n    register,\n    trigger,\n    handleSubmit,\n    setValue,\n    getValues,\n    errors\n  } = useForm({\n    resolver: yupResolver(SignupSchema),\n    mode: \"onBlur\" // mode: \"onChange\"\n\n  });\n\n  const onSubmit = data => {\n    console.log(data); // alert(JSON.stringify(data, null));\n  };\n\n  useEffect(() => {// history.pushState({}, null, \"/anamnese\")\n  }, []);\n  const [checked, setChecked] = React.useState([]);\n\n  const handleToggle = value => {\n    const currentIndex = checked.indexOf(value);\n    const newChecked = [...checked];\n\n    if (currentIndex === -1) {\n      newChecked.push(value);\n    } else {\n      newChecked.splice(currentIndex, 1);\n    }\n\n    setChecked(newChecked);\n  };\n\n  const [isAluno, setIsAluno] = React.useState(false);\n  const [activeForm, setActiveForm] = React.useState(2); // const [activeField, setActiveField] = React.useState(\"first\");\n\n  const [activeField, setActiveField] = React.useState([\"idade\"]);\n  const [isDisableNext, setIsDisableNext] = React.useState(true);\n  const {\n    0: error,\n    1: setError\n  } = useState(false);\n\n  const handleNext = async type => {\n    // console.log(activeField);\n    // const result = await trigger(activeField)\n    // console.log(result);\n    const result = true;\n\n    if (result) {\n      if (activeForm == 15) {\n        props.setStepCheckout(3);\n      } else {\n        setIsDisableNext(true);\n        setActiveForm(prevActiveStep => prevActiveStep + 1);\n        handleFieldActive(activeForm + 1);\n      }\n    } // setActiveForm((prevActiveStep) => prevActiveStep + 1);\n\n  };\n\n  const handleBack = type => {\n    if (activeForm !== 0) {\n      setIsDisableNext(false);\n      setActiveForm(prevActiveStep => prevActiveStep - 1);\n      handleFieldActive(activeForm - 1);\n    }\n  };\n\n  const handleFocus = event => {\n    // event.target.select()\n    event.target.selectionStart = 0;\n    event.target.selectionEnd = 0;\n  };\n\n  const handleChange = async event => {\n    // event.target.select()\n    const result = await trigger(activeField);\n    console.log(activeField);\n    console.log(result);\n\n    if (result) {\n      setIsDisableNext(false);\n    } else {\n      setIsDisableNext(true);\n    }\n  };\n\n  const handleFieldActive = step => {\n    console.log(\"handleFieldActive\");\n\n    switch (step) {\n      case 0:\n        setActiveField(\"idade\");\n        break;\n\n      case 1:\n        setActiveField(\"sexo\");\n        break;\n\n      case 2:\n        setActiveField([\"peso, altura\"]);\n        break;\n\n      default:\n        setActiveField(\"cpf\");\n        break;\n    }\n\n    console.log(step); // console.log(activeField);\n  };\n\n  const setValueForm = (name, value) => {\n    setValue(name, value);\n    console.log(getValues());\n    handleNext();\n  }; // useEffect(() => {\n  //   console.log(\"teste de erro\");\n  //   console.log(errors[activeField]);  \n  //   !errors[activeField] && setIsDisableNext(false);\n  // }, [ errors[activeField] ]);\n  // useEffect(() => {\n  //   console.log(\"teste de field\");\n  //   console.log(activeField);    \n  // }, [ activeField ]);\n\n\n  const [anamnese, setAnamnese] = React.useState({\n    idade: \"TESTE\",\n    sexo: \"TESTE\",\n    peso: \"TESTE\",\n    altura: \"TESTE\",\n    objetivo: \"TESTE\",\n    habitoTreino: \"TESTE\",\n    frequenciaTreino: \"TESTE\",\n    fazMusculacao: \"TESTE\",\n    fazAulas: \"TESTE\",\n    sedentario: \"TESTE\",\n    sedentarioTempo: \"TESTE\",\n    reclusaoTreino: \"TESTE\",\n    tempoPorDia: \"TESTE\",\n    periodo: \"TESTE\",\n    patologia: \"TESTE\",\n    outroPatologia: \"TESTE\",\n    osseoArticular: \"TESTE\",\n    qualOsseoArticular: \"TESTE\",\n    cirurgia: \"TESTE\",\n    qualCirurgia: \"TESTE\",\n    internacao: \"TESTE\",\n    qualInternacao: \"TESTE\",\n    medicamento: \"TESTE\",\n    qualMedicamento: \"TESTE\",\n    fuma: \"TESTE\",\n    nutricionista: \"TESTE\",\n    personalTrainer: \"TESTE\",\n    equipamentos: \"TESTE\"\n  });\n\n  const fetchData = async event => {\n    setError(false);\n    let cep = event.target.value;\n    setAnamnese(prevAnamnese => {\n      return _objectSpread({}, prevAnamnese, {\n        endereco: \"\",\n        bairro: \"\",\n        estado: \"\",\n        cidade: \"\"\n      });\n    });\n    await axios.get(`https://viacep.com.br/ws/${cep}/json/`).then(res => {\n      // setError(false);\n      // setUsers(prevState => [...prevState, ...res.data]);\n      // setUser(res.data);\n      // console.log(res.data);\n      if (res.data.error) {\n        setError(true);\n        return;\n      }\n\n      setAnamnese(prevAnamnese => {\n        return _objectSpread({}, prevAnamnese, {\n          cep: res.data.cep,\n          endereco: res.data.logradouro,\n          bairro: res.data.bairro,\n          estado: res.data.uf,\n          cidade: res.data.localidade\n        });\n      }); // console.log(res.data.cliente);     \n    }).catch(error => {\n      console.log(error);\n      setError(true);\n    }).finally(() => {// setLoading(false);\n    });\n  };\n\n  const classes = useStyles();\n  return __jsx(\"div\", {\n    className: \"cd-section\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 631,\n      columnNumber: 5\n    }\n  }, __jsx(\"div\", {\n    className: classes.contacts + \" \" + classes.section // style={{ backgroundImage: `url(${city})` }}\n    ,\n    style: {\n      backgroundColor: \"#ffffff\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 633,\n      columnNumber: 7\n    }\n  }, __jsx(\"div\", {\n    className: classes.container,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 638,\n      columnNumber: 9\n    }\n  }, __jsx(GridContainer, {\n    justify: \"center\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 639,\n      columnNumber: 11\n    }\n  }, __jsx(GridItem, {\n    xs: 12,\n    sm: 12,\n    md: 5,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 641,\n      columnNumber: 13\n    }\n  }, __jsx(Grow, _extends({\n    in: true,\n    style: {\n      transformOrigin: '0 0 0'\n    }\n  }, true ? {\n    timeout: 1000\n  } : {}, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 642,\n      columnNumber: 15\n    }\n  }), __jsx(Card, {\n    className: classes.card1,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 647,\n      columnNumber: 17\n    }\n  }, __jsx(\"form\", {\n    onSubmit: handleSubmit(onSubmit),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 648,\n      columnNumber: 17\n    }\n  }, __jsx(CardHeader, {\n    contact: true,\n    color: \"primary\",\n    className: classes.textCenter,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 649,\n      columnNumber: 19\n    }\n  }, __jsx(\"h4\", {\n    className: classes.cardTitle,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 654,\n      columnNumber: 21\n    }\n  }, \"Anamnese\")), __jsx(Grow, _extends({\n    in: activeForm === 0,\n    style: {\n      transformOrigin: '0 0 0',\n      display: activeForm === 0 ? \"block\" : \"none\"\n    }\n  }, activeForm === 0 ? {\n    timeout: 1000\n  } : {}, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 663,\n      columnNumber: 19\n    }\n  }), __jsx(CardBody, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 669,\n      columnNumber: 21\n    }\n  }, __jsx(GridContainer, {\n    justify: \"center\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 670,\n      columnNumber: 23\n    }\n  }, __jsx(GridItem, {\n    xs: 12,\n    sm: 8,\n    md: 8,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 671,\n      columnNumber: 25\n    }\n  }, __jsx(CustomInput, {\n    labelText: \"Qual \\xE9 sua idade?\",\n    labelError: errors.idade && errors.idade.message,\n    id: \"idade\",\n    error: errors.idade ? true : false,\n    formControlProps: {\n      fullWidth: true\n    },\n    inputProps: {\n      type: \"tel\",\n      name: \"idade\",\n      inputRef: register,\n      onChange: handleChange //   onFocus: handleFocus,\n      //   inputComponent: TextMaskCustom,\n      //   startAdornment: (\n      //     <InputAdornment position=\"start\">\n      //       <AssignmentInd className={classes.inputIconsColor} />\n      //     </InputAdornment>\n      //   ) \n\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 674,\n      columnNumber: 27\n    }\n  }))))), __jsx(Grow, _extends({\n    in: activeForm === 1,\n    style: {\n      transformOrigin: '0 0 0',\n      display: activeForm === 1 ? \"block\" : \"none\"\n    }\n  }, activeForm === 1 ? {\n    timeout: 1000\n  } : {}, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 704,\n      columnNumber: 19\n    }\n  }), __jsx(CardBody, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 713,\n      columnNumber: 21\n    }\n  }, __jsx(GridContainer, {\n    justify: \"center\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 714,\n      columnNumber: 23\n    }\n  }, __jsx(GridItem, {\n    xs: 12,\n    sm: 8,\n    md: 8,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 715,\n      columnNumber: 25\n    }\n  }, __jsx(\"input\", {\n    hidden: true,\n    name: \"sexo\",\n    type: \"text\",\n    ref: register,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 739,\n      columnNumber: 27\n    }\n  }), __jsx(\"label\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 741,\n      columnNumber: 27\n    }\n  }, \"Qual o seu sexo?\"), __jsx(Button, {\n    color: \"primary\",\n    fullWidth: true,\n    onClick: () => setValueForm(\"sexo\", \"masculino\"),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 743,\n      columnNumber: 27\n    }\n  }, \"Masculino\"), __jsx(Button, {\n    color: \"primary\",\n    fullWidth: true,\n    onClick: () => setValueForm(\"sexo\", \"feminino\"),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 747,\n      columnNumber: 27\n    }\n  }, \"Feminino\"))))), __jsx(Grow, _extends({\n    in: activeForm === 2,\n    style: {\n      transformOrigin: '0 0 0',\n      display: activeForm === 2 ? \"block\" : \"none\"\n    }\n  }, activeForm === 2 ? {\n    timeout: 1000\n  } : {}, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 758,\n      columnNumber: 19\n    }\n  }), __jsx(CardBody, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 764,\n      columnNumber: 21\n    }\n  }, __jsx(GridContainer, {\n    justify: \"center\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 765,\n      columnNumber: 23\n    }\n  }, __jsx(GridItem, {\n    xs: 12,\n    sm: 8,\n    md: 8,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 766,\n      columnNumber: 25\n    }\n  }, __jsx(CustomInput, {\n    labelText: \"Qual \\xE9 o seu peso?\",\n    labelError: errors.peso && errors.peso.message,\n    error: errors.peso ? true : false,\n    id: \"peso\",\n    formControlProps: {\n      fullWidth: true\n    },\n    inputProps: {\n      type: \"tel\",\n      name: \"peso\",\n      inputComponent: PesoMask,\n      inputRef: register,\n      endAdornment: __jsx(InputAdornment, {\n        position: \"start\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 781,\n          columnNumber: 33\n        }\n      }, \"Kg\")\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 767,\n      columnNumber: 27\n    }\n  }), __jsx(CustomInput, {\n    labelText: \"Qual a sua altura? \",\n    labelError: errors.altura && errors.altura.message,\n    error: errors.altura ? true : false,\n    id: \"altura\",\n    formControlProps: {\n      fullWidth: true\n    },\n    inputProps: {\n      type: \"tel\",\n      name: \"altura\",\n      inputRef: register //   startAdornment: (\n      //     <InputAdornment position=\"start\">\n      //       <Email className={classes.inputIconsColor} />\n      //     </InputAdornment>\n      //   )                                                        \n\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 787,\n      columnNumber: 27\n    }\n  }))))), __jsx(Grow, _extends({\n    in: activeForm === 3,\n    style: {\n      transformOrigin: '0 0 0',\n      display: activeForm === 2 ? \"block\" : \"none\"\n    }\n  }, activeForm === 3 ? {\n    timeout: 1000\n  } : {}, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 813,\n      columnNumber: 19\n    }\n  }), __jsx(CardBody, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 819,\n      columnNumber: 21\n    }\n  }, error && __jsx(SnackbarContent, {\n    message: __jsx(\"span\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 824,\n        columnNumber: 27\n      }\n    }, __jsx(\"b\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 825,\n        columnNumber: 29\n      }\n    }, \"N\\xE3o encontramos seu CEP\"), \" \", __jsx(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 825,\n        columnNumber: 60\n      }\n    }), \" Tente novamente\") // close\n    ,\n    color: \"warning\",\n    icon: \"info_outline\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 822,\n      columnNumber: 23\n    }\n  }), __jsx(GridContainer, {\n    justify: \"center\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 834,\n      columnNumber: 23\n    }\n  }, __jsx(GridItem, {\n    xs: 12,\n    sm: 12,\n    md: 8,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 835,\n      columnNumber: 25\n    }\n  }, __jsx(CustomInput, {\n    labelText: \"Qual \\xE9 o seu objetivo?\",\n    labelError: errors.objetivo && errors.objetivo.message,\n    error: errors.objetivo ? true : false,\n    id: \"objetivo\",\n    formControlProps: {\n      fullWidth: true\n    },\n    inputProps: {\n      name: \"objetivo\",\n      inputRef: register //   onBlur: fetchData,\n      //   startAdornment: (\n      //     <InputAdornment position=\"start\">\n      //       <AssignmentInd className={classes.inputIconsColor} />\n      //     </InputAdornment>\n      //   )                           \n\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 836,\n      columnNumber: 27\n    }\n  }))))), __jsx(Grow, _extends({\n    in: activeForm === 3,\n    style: {\n      transformOrigin: '0 0 0',\n      display: activeForm === 3 ? \"block\" : \"none\"\n    }\n  }, activeForm === 3 ? {\n    timeout: 1000\n  } : {}, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 865,\n      columnNumber: 19\n    }\n  }), __jsx(CardBody, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 871,\n      columnNumber: 21\n    }\n  }, error && __jsx(SnackbarContent, {\n    message: __jsx(\"span\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 876,\n        columnNumber: 27\n      }\n    }, __jsx(\"b\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 877,\n        columnNumber: 29\n      }\n    }, \"N\\xE3o encontramos seu CEP\"), \" \", __jsx(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 877,\n        columnNumber: 60\n      }\n    }), \" Tente novamente\") // close\n    ,\n    color: \"warning\",\n    icon: \"info_outline\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 874,\n      columnNumber: 23\n    }\n  }), __jsx(GridContainer, {\n    justify: \"center\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 886,\n      columnNumber: 23\n    }\n  }, __jsx(GridItem, {\n    xs: 12,\n    sm: 12,\n    md: 8,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 887,\n      columnNumber: 25\n    }\n  }, __jsx(\"label\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 905,\n      columnNumber: 25\n    }\n  }, \"Possui o h\\xE1bito de treinar?\"), __jsx(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 906,\n      columnNumber: 25\n    }\n  }), __jsx(Button, {\n    color: \"primary\",\n    fullWidth: true,\n    onClick: handleNext,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 907,\n      columnNumber: 25\n    }\n  }, \"Sim\"), __jsx(Button, {\n    color: \"secondary\",\n    fullWidth: true,\n    onClick: handleNext,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 911,\n      columnNumber: 25\n    }\n  }, \"N\\xE3o\"), __jsx(FormControl, {\n    fullWidth: true,\n    className: classes.selectFormControl,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 915,\n      columnNumber: 25\n    }\n  }, __jsx(InputLabel, {\n    htmlFor: \"frequenciaTreino\",\n    className: classes.selectLabel,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 916,\n      columnNumber: 27\n    }\n  }, \"Se sim, quantas vezes na semana?\"), __jsx(Select, {\n    MenuProps: {\n      className: classes.selectMenu\n    },\n    classes: {\n      select: classes.select\n    } // value={simpleSelect}\n    // onChange={handleSimple}\n    ,\n    inputProps: {\n      name: \"frequenciaTreino\",\n      inputRef: register,\n      id: \"frequenciaTreino\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 922,\n      columnNumber: 27\n    }\n  }, __jsx(MenuItem, {\n    classes: {\n      root: classes.selectMenuItem,\n      selected: classes.selectMenuItemSelected\n    },\n    value: \"2\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 937,\n      columnNumber: 29\n    }\n  }, \"1 a 2 vezes\"), __jsx(MenuItem, {\n    classes: {\n      root: classes.selectMenuItem,\n      selected: classes.selectMenuItemSelected\n    },\n    value: \"3\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 946,\n      columnNumber: 29\n    }\n  }, \"3 a 4 vezes\"), __jsx(MenuItem, {\n    classes: {\n      root: classes.selectMenuItem,\n      selected: classes.selectMenuItemSelected\n    },\n    value: \"4\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 955,\n      columnNumber: 29\n    }\n  }, \"6 a 7 vezes\"))))))), __jsx(Grow, _extends({\n    in: activeForm === 4,\n    style: {\n      transformOrigin: '0 0 0',\n      display: activeForm === 4 ? \"block\" : \"none\"\n    }\n  }, activeForm === 4 ? {\n    timeout: 1000\n  } : {}, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 995,\n      columnNumber: 19\n    }\n  }), __jsx(CardBody, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1001,\n      columnNumber: 21\n    }\n  }, error && __jsx(SnackbarContent, {\n    message: __jsx(\"span\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1006,\n        columnNumber: 27\n      }\n    }, __jsx(\"b\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1007,\n        columnNumber: 29\n      }\n    }, \"N\\xE3o encontramos seu CEP\"), \" \", __jsx(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1007,\n        columnNumber: 60\n      }\n    }), \" Tente novamente\") // close\n    ,\n    color: \"warning\",\n    icon: \"info_outline\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1004,\n      columnNumber: 23\n    }\n  }), __jsx(GridContainer, {\n    justify: \"center\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1016,\n      columnNumber: 23\n    }\n  }, __jsx(GridItem, {\n    xs: 12,\n    sm: 12,\n    md: 8,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1017,\n      columnNumber: 25\n    }\n  }, __jsx(CustomInput, {\n    labelText: \"Na academia, costuma fazer muscula\\xE7\\xE3o?\",\n    labelError: errors.fazMusculacao && errors.fazMusculacao.message,\n    error: errors.fazMusculacao ? true : false,\n    id: \"fazMusculacao\",\n    className: classes.topZero,\n    formControlProps: {\n      fullWidth: true\n    },\n    inputProps: {\n      name: \"fazMusculacao\",\n      inputRef: register\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1018,\n      columnNumber: 27\n    }\n  })), __jsx(GridItem, {\n    xs: 12,\n    sm: 12,\n    md: 8,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1034,\n      columnNumber: 25\n    }\n  }, __jsx(CustomInput, {\n    labelText: \"Na academia, costuma fazer aulas?\",\n    labelError: errors.fazAulas && errors.fazAulas.message,\n    error: errors.fazAulas ? true : false,\n    id: \"fazAulas\",\n    formControlProps: {\n      fullWidth: true\n    },\n    inputProps: {\n      name: \"fazAulas\",\n      inputRef: register\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1035,\n      columnNumber: 27\n    }\n  }))))), __jsx(Grow, _extends({\n    in: activeForm === 5,\n    style: {\n      transformOrigin: '0 0 0',\n      display: activeForm === 5 ? \"block\" : \"none\"\n    }\n  }, activeForm === 5 ? {\n    timeout: 1000\n  } : {}, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1057,\n      columnNumber: 19\n    }\n  }), __jsx(CardBody, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1063,\n      columnNumber: 21\n    }\n  }, error && __jsx(SnackbarContent, {\n    message: __jsx(\"span\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1068,\n        columnNumber: 27\n      }\n    }, __jsx(\"b\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1069,\n        columnNumber: 29\n      }\n    }, \"N\\xE3o encontramos seu CEP\"), \" \", __jsx(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1069,\n        columnNumber: 60\n      }\n    }), \" Tente novamente\") // close\n    ,\n    color: \"warning\",\n    icon: \"info_outline\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1066,\n      columnNumber: 23\n    }\n  }), __jsx(GridContainer, {\n    justify: \"center\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1078,\n      columnNumber: 23\n    }\n  }, __jsx(GridItem, {\n    xs: 12,\n    sm: 12,\n    md: 8,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1079,\n      columnNumber: 25\n    }\n  }, __jsx(CustomInput, {\n    labelText: \"Atualmente, se considera sedent\\xE1rio?\",\n    labelError: errors.sedentario && errors.sedentario.message,\n    error: errors.sedentario ? true : false,\n    id: \"sedentario\",\n    formControlProps: {\n      fullWidth: true\n    },\n    inputProps: {\n      name: \"sedentario\",\n      inputRef: register\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1080,\n      columnNumber: 27\n    }\n  })), __jsx(GridItem, {\n    xs: 12,\n    sm: 12,\n    md: 8,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1095,\n      columnNumber: 25\n    }\n  }, __jsx(CustomInput, {\n    labelText: \"Se sim, h\\xE1 quanto tempo?\",\n    labelError: errors.fazAulas && errors.fazAulas.message,\n    error: errors.fazAulas ? true : false,\n    id: \"fazAulas\",\n    formControlProps: {\n      fullWidth: true\n    },\n    inputProps: {\n      name: \"fazAulas\",\n      inputRef: register\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1096,\n      columnNumber: 27\n    }\n  }))))), __jsx(Grow, _extends({\n    in: activeForm === 6,\n    style: {\n      transformOrigin: '0 0 0',\n      display: activeForm === 6 ? \"block\" : \"none\"\n    }\n  }, activeForm === 6 ? {\n    timeout: 1000\n  } : {}, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1118,\n      columnNumber: 19\n    }\n  }), __jsx(CardBody, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1124,\n      columnNumber: 21\n    }\n  }, error && __jsx(SnackbarContent, {\n    message: __jsx(\"span\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1129,\n        columnNumber: 27\n      }\n    }, __jsx(\"b\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1130,\n        columnNumber: 29\n      }\n    }, \"N\\xE3o encontramos seu CEP\"), \" \", __jsx(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1130,\n        columnNumber: 60\n      }\n    }), \" Tente novamente\") // close\n    ,\n    color: \"warning\",\n    icon: \"info_outline\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1127,\n      columnNumber: 23\n    }\n  }), __jsx(GridContainer, {\n    justify: \"center\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1139,\n      columnNumber: 23\n    }\n  }, __jsx(GridItem, {\n    xs: 12,\n    sm: 12,\n    md: 8,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1140,\n      columnNumber: 25\n    }\n  }, __jsx(CustomInput, {\n    labelText: \"Pretende treinar quanto tempo por dia?\",\n    labelError: errors.tempoPorDia && errors.tempoPorDia.message,\n    error: errors.tempoPorDia ? true : false,\n    id: \"tempoPorDia\",\n    formControlProps: {\n      fullWidth: true\n    },\n    inputProps: {\n      name: \"tempoPorDia\",\n      inputRef: register\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1141,\n      columnNumber: 27\n    }\n  })), __jsx(GridItem, {\n    xs: 12,\n    sm: 12,\n    md: 8,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1156,\n      columnNumber: 25\n    }\n  }, __jsx(CustomInput, {\n    labelText: \"Em qual per\\xEDodo?\",\n    labelError: errors.periodo && errors.periodo.message,\n    error: errors.periodo ? true : false,\n    id: \"periodo\",\n    formControlProps: {\n      fullWidth: true\n    },\n    inputProps: {\n      name: \"periodo\",\n      inputRef: register\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1157,\n      columnNumber: 27\n    }\n  }))))), __jsx(Grow, _extends({\n    in: activeForm === 7,\n    style: {\n      transformOrigin: '0 0 0',\n      display: activeForm === 7 ? \"block\" : \"none\"\n    }\n  }, activeForm === 7 ? {\n    timeout: 1000\n  } : {}, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1179,\n      columnNumber: 19\n    }\n  }), __jsx(CardBody, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1185,\n      columnNumber: 21\n    }\n  }, error && __jsx(SnackbarContent, {\n    message: __jsx(\"span\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1190,\n        columnNumber: 27\n      }\n    }, __jsx(\"b\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1191,\n        columnNumber: 29\n      }\n    }, \"N\\xE3o encontramos seu CEP\"), \" \", __jsx(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1191,\n        columnNumber: 60\n      }\n    }), \" Tente novamente\") // close\n    ,\n    color: \"warning\",\n    icon: \"info_outline\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1188,\n      columnNumber: 23\n    }\n  }), __jsx(GridContainer, {\n    justify: \"center\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1200,\n      columnNumber: 23\n    }\n  }, __jsx(GridItem, {\n    xs: 12,\n    sm: 12,\n    md: 8,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1201,\n      columnNumber: 25\n    }\n  }, __jsx(CustomInput, {\n    labelText: \"Possui algum patologia?\",\n    labelError: errors.patologia && errors.patologia.message,\n    error: errors.patologia ? true : false,\n    id: \"patologia\",\n    formControlProps: {\n      fullWidth: true\n    },\n    inputProps: {\n      name: \"patologia\",\n      inputRef: register\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1202,\n      columnNumber: 27\n    }\n  })), __jsx(GridItem, {\n    xs: 12,\n    sm: 12,\n    md: 8,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1217,\n      columnNumber: 25\n    }\n  }, __jsx(CustomInput, {\n    labelText: \"Se outra, qual?\",\n    labelError: errors.outroPatologia && errors.outroPatologia.message,\n    error: errors.outroPatologia ? true : false,\n    id: \"outroPatologia\",\n    formControlProps: {\n      fullWidth: true\n    },\n    inputProps: {\n      name: \"outroPatologia\",\n      inputRef: register\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1218,\n      columnNumber: 27\n    }\n  }))))), __jsx(Grow, _extends({\n    in: activeForm === 8,\n    style: {\n      transformOrigin: '0 0 0',\n      display: activeForm === 8 ? \"block\" : \"none\"\n    }\n  }, activeForm === 8 ? {\n    timeout: 1000\n  } : {}, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1240,\n      columnNumber: 19\n    }\n  }), __jsx(CardBody, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1246,\n      columnNumber: 21\n    }\n  }, error && __jsx(SnackbarContent, {\n    message: __jsx(\"span\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1251,\n        columnNumber: 27\n      }\n    }, __jsx(\"b\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1252,\n        columnNumber: 29\n      }\n    }, \"N\\xE3o encontramos seu CEP\"), \" \", __jsx(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1252,\n        columnNumber: 60\n      }\n    }), \" Tente novamente\") // close\n    ,\n    color: \"warning\",\n    icon: \"info_outline\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1249,\n      columnNumber: 23\n    }\n  }), __jsx(GridContainer, {\n    justify: \"center\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1261,\n      columnNumber: 23\n    }\n  }, __jsx(GridItem, {\n    xs: 12,\n    sm: 12,\n    md: 8,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1262,\n      columnNumber: 25\n    }\n  }, __jsx(CustomInput, {\n    labelText: \"Possui algum problema \\xF3sseo articular?\",\n    labelError: errors.osseoArticular && errors.osseoArticular.message,\n    error: errors.osseoArticular ? true : false,\n    id: \"osseoArticular\",\n    formControlProps: {\n      fullWidth: true\n    },\n    inputProps: {\n      name: \"osseoArticular\",\n      inputRef: register\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1263,\n      columnNumber: 27\n    }\n  })), __jsx(GridItem, {\n    xs: 12,\n    sm: 12,\n    md: 8,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1278,\n      columnNumber: 25\n    }\n  }, __jsx(CustomInput, {\n    labelText: \"Se sim, qual?\",\n    labelError: errors.qualOsseoArticular && errors.qualOsseoArticular.message,\n    error: errors.qualOsseoArticular ? true : false,\n    id: \"qualOsseoArticular\",\n    formControlProps: {\n      fullWidth: true\n    },\n    inputProps: {\n      name: \"qualOsseoArticular\",\n      inputRef: register\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1279,\n      columnNumber: 27\n    }\n  }))))), __jsx(Grow, _extends({\n    in: activeForm === 9,\n    style: {\n      transformOrigin: '0 0 0',\n      display: activeForm === 9 ? \"block\" : \"none\"\n    }\n  }, activeForm === 9 ? {\n    timeout: 1000\n  } : {}, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1301,\n      columnNumber: 19\n    }\n  }), __jsx(CardBody, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1307,\n      columnNumber: 21\n    }\n  }, error && __jsx(SnackbarContent, {\n    message: __jsx(\"span\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1312,\n        columnNumber: 27\n      }\n    }, __jsx(\"b\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1313,\n        columnNumber: 29\n      }\n    }, \"N\\xE3o encontramos seu CEP\"), \" \", __jsx(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1313,\n        columnNumber: 60\n      }\n    }), \" Tente novamente\") // close\n    ,\n    color: \"warning\",\n    icon: \"info_outline\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1310,\n      columnNumber: 23\n    }\n  }), __jsx(GridContainer, {\n    justify: \"center\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1322,\n      columnNumber: 23\n    }\n  }, __jsx(GridItem, {\n    xs: 12,\n    sm: 12,\n    md: 8,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1323,\n      columnNumber: 25\n    }\n  }, __jsx(CustomInput, {\n    labelText: \"J\\xE1 sofreu alguma cirurgia?\",\n    labelError: errors.cirurgia && errors.cirurgia.message,\n    error: errors.cirurgia ? true : false,\n    id: \"cirurgia\",\n    formControlProps: {\n      fullWidth: true\n    },\n    inputProps: {\n      name: \"cirurgia\",\n      inputRef: register\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1324,\n      columnNumber: 27\n    }\n  })), __jsx(GridItem, {\n    xs: 12,\n    sm: 12,\n    md: 8,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1339,\n      columnNumber: 25\n    }\n  }, __jsx(CustomInput, {\n    labelText: \"Se sim, qual?\",\n    labelError: errors.qualCirurgia && errors.qualCirurgia.message,\n    error: errors.qualCirurgia ? true : false,\n    id: \"qualCirurgia\",\n    formControlProps: {\n      fullWidth: true\n    },\n    inputProps: {\n      name: \"qualCirurgia\",\n      inputRef: register\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1340,\n      columnNumber: 27\n    }\n  }))))), __jsx(Grow, _extends({\n    in: activeForm === 10,\n    style: {\n      transformOrigin: '0 0 0',\n      display: activeForm === 10 ? \"block\" : \"none\"\n    }\n  }, activeForm === 10 ? {\n    timeout: 1000\n  } : {}, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1363,\n      columnNumber: 19\n    }\n  }), __jsx(CardBody, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1369,\n      columnNumber: 21\n    }\n  }, error && __jsx(SnackbarContent, {\n    message: __jsx(\"span\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1374,\n        columnNumber: 27\n      }\n    }, __jsx(\"b\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1375,\n        columnNumber: 29\n      }\n    }, \"N\\xE3o encontramos seu CEP\"), \" \", __jsx(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1375,\n        columnNumber: 60\n      }\n    }), \" Tente novamente\") // close\n    ,\n    color: \"warning\",\n    icon: \"info_outline\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1372,\n      columnNumber: 23\n    }\n  }), __jsx(GridContainer, {\n    justify: \"center\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1384,\n      columnNumber: 23\n    }\n  }, __jsx(GridItem, {\n    xs: 12,\n    sm: 12,\n    md: 8,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1385,\n      columnNumber: 25\n    }\n  }, __jsx(CustomInput, {\n    labelText: \"Sofreu alguma interna\\xE7\\xE3o recentemente?\",\n    labelError: errors.internacao && errors.internacao.message,\n    error: errors.internacao ? true : false,\n    id: \"internacao\",\n    formControlProps: {\n      fullWidth: true\n    },\n    inputProps: {\n      name: \"internacao\",\n      inputRef: register\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1386,\n      columnNumber: 27\n    }\n  })), __jsx(GridItem, {\n    xs: 12,\n    sm: 12,\n    md: 8,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1401,\n      columnNumber: 25\n    }\n  }, __jsx(CustomInput, {\n    labelText: \"Se sim, qual?\",\n    labelError: errors.qualInternacao && errors.qualInternacao.message,\n    error: errors.qualInternacao ? true : false,\n    id: \"qualInternacao\",\n    formControlProps: {\n      fullWidth: true\n    },\n    inputProps: {\n      name: \"qualInternacao\",\n      inputRef: register\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1402,\n      columnNumber: 27\n    }\n  }))))), __jsx(Grow, _extends({\n    in: activeForm === 11,\n    style: {\n      transformOrigin: '0 0 0',\n      display: activeForm === 11 ? \"block\" : \"none\"\n    }\n  }, activeForm === 11 ? {\n    timeout: 1000\n  } : {}, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1424,\n      columnNumber: 19\n    }\n  }), __jsx(CardBody, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1430,\n      columnNumber: 21\n    }\n  }, error && __jsx(SnackbarContent, {\n    message: __jsx(\"span\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1435,\n        columnNumber: 27\n      }\n    }, __jsx(\"b\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1436,\n        columnNumber: 29\n      }\n    }, \"N\\xE3o encontramos seu CEP\"), \" \", __jsx(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1436,\n        columnNumber: 60\n      }\n    }), \" Tente novamente\") // close\n    ,\n    color: \"warning\",\n    icon: \"info_outline\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1433,\n      columnNumber: 23\n    }\n  }), __jsx(GridContainer, {\n    justify: \"center\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1445,\n      columnNumber: 23\n    }\n  }, __jsx(GridItem, {\n    xs: 12,\n    sm: 12,\n    md: 8,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1446,\n      columnNumber: 25\n    }\n  }, __jsx(CustomInput, {\n    labelText: \"Sofreu alguma interna\\xE7\\xE3o recentemente?\",\n    labelError: errors.medicamento && errors.medicamento.message,\n    error: errors.medicamento ? true : false,\n    id: \"medicamento\",\n    formControlProps: {\n      fullWidth: true\n    },\n    inputProps: {\n      name: \"medicamento\",\n      inputRef: register\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1447,\n      columnNumber: 27\n    }\n  })), __jsx(GridItem, {\n    xs: 12,\n    sm: 12,\n    md: 8,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1462,\n      columnNumber: 25\n    }\n  }, __jsx(CustomInput, {\n    labelText: \"Se sim, qual?\",\n    labelError: errors.qualMedicamento && errors.qualMedicamento.message,\n    error: errors.qualMedicamento ? true : false,\n    id: \"qualMedicamento\",\n    formControlProps: {\n      fullWidth: true\n    },\n    inputProps: {\n      name: \"qualMedicamento\",\n      inputRef: register\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1463,\n      columnNumber: 27\n    }\n  }))))), __jsx(Grow, _extends({\n    in: activeForm === 12,\n    style: {\n      transformOrigin: '0 0 0',\n      display: activeForm === 12 ? \"block\" : \"none\"\n    }\n  }, activeForm === 12 ? {\n    timeout: 1000\n  } : {}, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1486,\n      columnNumber: 19\n    }\n  }), __jsx(CardBody, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1492,\n      columnNumber: 21\n    }\n  }, error && __jsx(SnackbarContent, {\n    message: __jsx(\"span\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1497,\n        columnNumber: 27\n      }\n    }, __jsx(\"b\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1498,\n        columnNumber: 29\n      }\n    }, \"N\\xE3o encontramos seu CEP\"), \" \", __jsx(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1498,\n        columnNumber: 60\n      }\n    }), \" Tente novamente\") // close\n    ,\n    color: \"warning\",\n    icon: \"info_outline\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1495,\n      columnNumber: 23\n    }\n  }), __jsx(GridContainer, {\n    justify: \"center\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1507,\n      columnNumber: 23\n    }\n  }, __jsx(GridItem, {\n    xs: 12,\n    sm: 12,\n    md: 8,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1508,\n      columnNumber: 25\n    }\n  }, __jsx(CustomInput, {\n    labelText: \"Possui o h\\xE1bito de fumar?\",\n    labelError: errors.fuma && errors.fuma.message,\n    error: errors.fuma ? true : false,\n    id: \"fuma\",\n    formControlProps: {\n      fullWidth: true\n    },\n    inputProps: {\n      name: \"fuma\",\n      inputRef: register\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1509,\n      columnNumber: 27\n    }\n  }))))), __jsx(Grow, _extends({\n    in: activeForm === 13,\n    style: {\n      transformOrigin: '0 0 0',\n      display: activeForm === 13 ? \"block\" : \"none\"\n    }\n  }, activeForm === 13 ? {\n    timeout: 1000\n  } : {}, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1531,\n      columnNumber: 19\n    }\n  }), __jsx(CardBody, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1537,\n      columnNumber: 21\n    }\n  }, error && __jsx(SnackbarContent, {\n    message: __jsx(\"span\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1542,\n        columnNumber: 27\n      }\n    }, __jsx(\"b\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1543,\n        columnNumber: 29\n      }\n    }, \"N\\xE3o encontramos seu CEP\"), \" \", __jsx(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1543,\n        columnNumber: 60\n      }\n    }), \" Tente novamente\") // close\n    ,\n    color: \"warning\",\n    icon: \"info_outline\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1540,\n      columnNumber: 23\n    }\n  }), __jsx(GridContainer, {\n    justify: \"center\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1552,\n      columnNumber: 23\n    }\n  }, __jsx(GridItem, {\n    xs: 12,\n    sm: 12,\n    md: 8,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1553,\n      columnNumber: 25\n    }\n  }, __jsx(CustomInput, {\n    labelText: \"Faz acompnhamento com um(a) nutricionista?\",\n    labelError: errors.nutricionista && errors.nutricionista.message,\n    error: errors.nutricionista ? true : false,\n    id: \"nutricionista\",\n    formControlProps: {\n      fullWidth: true\n    },\n    inputProps: {\n      name: \"nutricionista\",\n      inputRef: register\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1554,\n      columnNumber: 27\n    }\n  }))))), __jsx(Grow, _extends({\n    in: activeForm === 14,\n    style: {\n      transformOrigin: '0 0 0',\n      display: activeForm === 14 ? \"block\" : \"none\"\n    }\n  }, activeForm === 14 ? {\n    timeout: 1000\n  } : {}, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1576,\n      columnNumber: 19\n    }\n  }), __jsx(CardBody, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1582,\n      columnNumber: 21\n    }\n  }, error && __jsx(SnackbarContent, {\n    message: __jsx(\"span\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1587,\n        columnNumber: 27\n      }\n    }, __jsx(\"b\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1588,\n        columnNumber: 29\n      }\n    }, \"N\\xE3o encontramos seu CEP\"), \" \", __jsx(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1588,\n        columnNumber: 60\n      }\n    }), \" Tente novamente\") // close\n    ,\n    color: \"warning\",\n    icon: \"info_outline\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1585,\n      columnNumber: 23\n    }\n  }), __jsx(GridContainer, {\n    justify: \"center\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1597,\n      columnNumber: 23\n    }\n  }, __jsx(GridItem, {\n    xs: 12,\n    sm: 12,\n    md: 8,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1598,\n      columnNumber: 25\n    }\n  }, __jsx(CustomInput, {\n    labelText: \"Faz acompnhamento com um(a) personal trainer?\",\n    labelError: errors.personalTrainer && errors.personalTrainer.message,\n    error: errors.personalTrainer ? true : false,\n    id: \"personalTrainer\",\n    formControlProps: {\n      fullWidth: true\n    },\n    inputProps: {\n      name: \"personalTrainer\",\n      inputRef: register\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1599,\n      columnNumber: 27\n    }\n  }))))), __jsx(Grow, _extends({\n    in: activeForm === 15,\n    style: {\n      transformOrigin: '0 0 0',\n      display: activeForm === 15 ? \"block\" : \"none\"\n    }\n  }, activeForm === 15 ? {\n    timeout: 1000\n  } : {}, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1621,\n      columnNumber: 19\n    }\n  }), __jsx(CardBody, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1627,\n      columnNumber: 21\n    }\n  }, error && __jsx(SnackbarContent, {\n    message: __jsx(\"span\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1632,\n        columnNumber: 27\n      }\n    }, __jsx(\"b\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1633,\n        columnNumber: 29\n      }\n    }, \"N\\xE3o encontramos seu CEP\"), \" \", __jsx(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1633,\n        columnNumber: 60\n      }\n    }), \" Tente novamente\") // close\n    ,\n    color: \"warning\",\n    icon: \"info_outline\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1630,\n      columnNumber: 23\n    }\n  }), __jsx(GridContainer, {\n    justify: \"center\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1642,\n      columnNumber: 23\n    }\n  }, __jsx(GridItem, {\n    xs: 12,\n    sm: 12,\n    md: 8,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1643,\n      columnNumber: 25\n    }\n  }, __jsx(CustomInput, {\n    labelText: \"Possui algum equipamento de treino? Se sim, informe-os por aqui\",\n    labelError: errors.equipamentos && errors.equipamentos.message,\n    error: errors.equipamentos ? true : false,\n    id: \"equipamentos\",\n    formControlProps: {\n      fullWidth: true\n    },\n    inputProps: {\n      name: \"equipamentos\",\n      inputRef: register\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1644,\n      columnNumber: 27\n    }\n  }))))), __jsx(CardFooter, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1667,\n      columnNumber: 19\n    }\n  }, __jsx(GridContainer, {\n    justify: \"center\",\n    style: {\n      margin: \"0\",\n      width: \"100%\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1668,\n      columnNumber: 21\n    }\n  }, __jsx(GridItem, {\n    xs: 12,\n    sm: 12,\n    md: 12,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1697,\n      columnNumber: 23\n    }\n  }, __jsx(Button, {\n    color: \"primary\",\n    fullWidth: true,\n    onClick: handleNext,\n    style: {\n      display: isDisableNext ? \"none\" : \"block\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1705,\n      columnNumber: 25\n    }\n  }, \"Pr\\xF3ximo\")), __jsx(GridItem, {\n    xs: 12,\n    sm: 12,\n    md: 12,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1711,\n      columnNumber: 23\n    }\n  }, __jsx(Button, {\n    simple: true,\n    color: \"primary\",\n    fullWidth: true,\n    onClick: handleBack,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1720,\n      columnNumber: 25\n    }\n  }, \"Voltar\"))))))))))));\n}","map":{"version":3,"sources":["/Users/gabrieldossantos/Google Drive (webmaster@wigoo.com.br)/Wigoo Desenvolvimento/justfit.com.br/clicoupersonal.com.br/checkout/pages-sections/checkout/SectionAnamnese.js"],"names":["React","useEffect","useState","axios","withScriptjs","withGoogleMap","GoogleMap","Marker","makeStyles","Checkbox","FormControlLabel","InputAdornment","PinDrop","Phone","Check","Email","EventIcon","Favorite","AssignmentInd","GridContainer","GridItem","InfoArea","Card","CardHeader","CardBody","CardFooter","CustomInput","Button","SnackbarContent","FormHelperText","FormControl","FormGroup","Select","MenuItem","InputLabel","Grow","InputMask","MaskedInput","PropTypes","createNumberMask","useForm","yupResolver","yup","setLocale","checkoutStyle","city","useStyles","TextMaskCustom","props","inputRef","other","ref","inputElement","propTypes","func","isRequired","PhoneMask","DateMask","defaultMaskOptions","prefix","suffix","includeThousandsSeparator","thousandsSeparatorSymbol","allowDecimal","decimalSymbol","decimalLimit","integerLimit","allowNegative","allowLeadingZeroes","PesoMask","maskOptions","currencyMask","defaultProps","inputMode","inputmode","string","shape","boolean","requireDecimal","number","mixed","notType","_ref","type","default","required","oneOf","notOneOf","length","min","max","email","url","trim","lowercase","uppercase","lessThan","moreThan","notEqual","positive","negative","integer","date","array","regexCPF","cpfValidate","cpf","console","log","isValidCPF","replace","soma","resto","i","parseInt","substring","isValidPhone","phone","test","isValidDate","addMethod","message","value","SignupSchema","object","nome","telefone","dataNascimento","cep","endereco","numero","complemento","bairro","estado","cidade","idade","sexo","SectionAnamnese","register","trigger","handleSubmit","setValue","getValues","errors","resolver","mode","onSubmit","data","checked","setChecked","handleToggle","currentIndex","indexOf","newChecked","push","splice","isAluno","setIsAluno","activeForm","setActiveForm","activeField","setActiveField","isDisableNext","setIsDisableNext","error","setError","handleNext","result","setStepCheckout","prevActiveStep","handleFieldActive","handleBack","handleFocus","event","target","selectionStart","selectionEnd","handleChange","step","setValueForm","name","anamnese","setAnamnese","peso","altura","objetivo","habitoTreino","frequenciaTreino","fazMusculacao","fazAulas","sedentario","sedentarioTempo","reclusaoTreino","tempoPorDia","periodo","patologia","outroPatologia","osseoArticular","qualOsseoArticular","cirurgia","qualCirurgia","internacao","qualInternacao","medicamento","qualMedicamento","fuma","nutricionista","personalTrainer","equipamentos","fetchData","prevAnamnese","get","then","res","logradouro","uf","localidade","catch","finally","classes","contacts","section","backgroundColor","container","transformOrigin","timeout","card1","textCenter","cardTitle","display","fullWidth","onChange","inputComponent","endAdornment","selectFormControl","selectLabel","className","selectMenu","select","id","root","selectMenuItem","selected","selectMenuItemSelected","topZero","margin","width"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport { useEffect, useState } from \"react\";\nimport axios from 'axios';\n// react components used to create a google map\nimport {\n  withScriptjs,\n  withGoogleMap,\n  GoogleMap,\n  Marker\n} from \"react-google-maps\";\n// @material-ui/core components\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Checkbox from \"@material-ui/core/Checkbox\";\nimport FormControlLabel from \"@material-ui/core/FormControlLabel\";\nimport InputAdornment from \"@material-ui/core/InputAdornment\";\n// @material-ui/icons\nimport PinDrop from \"@material-ui/icons/PinDrop\";\nimport Phone from \"@material-ui/icons/Phone\";\nimport Check from \"@material-ui/icons/Check\";\nimport Email from \"@material-ui/icons/Email\";\nimport EventIcon from '@material-ui/icons/Event';\nimport Favorite from \"@material-ui/icons/Favorite\";\nimport AssignmentInd from \"@material-ui/icons/AssignmentInd\";\n// core components\nimport GridContainer from \"components/Grid/GridContainer.js\";\nimport GridItem from \"components/Grid/GridItem.js\";\nimport InfoArea from \"components/InfoArea/InfoArea.js\";\nimport Card from \"components/Card/Card.js\";\nimport CardHeader from \"components/Card/CardHeader.js\";\nimport CardBody from \"components/Card/CardBody.js\";\nimport CardFooter from \"components/Card/CardFooter.js\";\nimport CustomInput from \"components/CustomInput/CustomInput.js\";\nimport Button from \"components/CustomButtons/Button.js\";\nimport SnackbarContent from \"components/Snackbar/SnackbarContent.js\";\nimport FormHelperText from '@material-ui/core/FormHelperText'; \n\nimport FormControl from '@material-ui/core/FormControl';\nimport FormGroup from '@material-ui/core/FormGroup';\nimport Select from \"@material-ui/core/Select\";\nimport MenuItem from \"@material-ui/core/MenuItem\";\nimport InputLabel from \"@material-ui/core/InputLabel\";\n\nimport Grow from '@material-ui/core/Grow';\n\n\nimport InputMask from \"react-input-mask\";\nimport MaskedInput from 'react-text-mask';\nimport PropTypes from 'prop-types';\nimport createNumberMask from 'text-mask-addons/dist/createNumberMask'\n\nimport { useForm } from \"react-hook-form\";\nimport { yupResolver } from '@hookform/resolvers';\nimport * as yup from \"yup\";\nimport { setLocale } from 'yup';\n\nimport checkoutStyle from \"assets/jss/nextjs-material-kit-pro/pages/checkoutSections/checkoutStyle.js\";\n\nimport city from \"assets/img/examples/city.jpg\";\n\nconst useStyles = makeStyles(checkoutStyle);\n\nfunction TextMaskCustom(props) {\n  const { inputRef, ...other } = props;\n\n  return (\n    <MaskedInput\n      {...other}\n      ref={(ref) => {\n        inputRef(ref ? ref.inputElement : null);\n      }}      \n      mask={[/[0-9]/, /[0-9]/, /[0-9]/, '.', /[0-9]/, /[0-9]/, /[0-9]/, '.', /[0-9]/, /[0-9]/, /[0-9]/, '-', /[0-9]/, /[0-9]/]}\n      // placeholderChar={'\\u2000'}\n      showMask\n    />\n  );\n}\n\nTextMaskCustom.propTypes = {\n  inputRef: PropTypes.func.isRequired,\n};\n\n\nfunction PhoneMask(props) {\n  const { inputRef, ...other } = props;\n\n  return (\n    <MaskedInput\n      {...other}\n      ref={(ref) => {\n        inputRef(ref ? ref.inputElement : null);\n      }}      \n      mask={['(', /[1-9]/, /[0-9]/, ')', ' ', /[1-9]/, /[0-9]/, /[0-9]/, /[0-9]/, /[0-9]/, '-', /[0-9]/, /[0-9]/, /[0-9]/, /[0-9]/]}\n      // placeholderChar={'\\u2000'}\n      showMask\n    />\n  );\n}\n\nPhoneMask.propTypes = {\n  inputRef: PropTypes.func.isRequired,\n};\n\nfunction DateMask(props) {\n  const { inputRef, ...other } = props;\n\n  return (\n    <MaskedInput\n      {...other}\n      ref={(ref) => {\n        inputRef(ref ? ref.inputElement : null);\n      }}\n      // mask={['(', /[1-9]/, /\\d/, /\\d/, ')', ' ', /\\d/, /\\d/, /\\d/, '-', /\\d/, /\\d/, /\\d/, /\\d/]}\n      mask={[/\\d/, /\\d/, '/', /\\d/, /\\d/, '/', /\\d/, /\\d/, /\\d/, /\\d/]}\n      // placeholderChar={'\\u2000'}\n      showMask\n    />\n  );\n}\n\nDateMask.propTypes = {\n  inputRef: PropTypes.func.isRequired,\n};\n\n\nconst defaultMaskOptions = {\n  prefix: '',\n  suffix: ' Kg',\n  includeThousandsSeparator: true,\n  thousandsSeparatorSymbol: '.',\n  allowDecimal: true,\n  decimalSymbol: ',',\n  decimalLimit: 2, // how many digits allowed after the decimal\n  integerLimit: 3, // limit length of integer numbers\n  allowNegative: false,\n  allowLeadingZeroes: false,\n}\n\nconst PesoMask = (props) => {\n  const { inputRef, maskOptions, ...other } = props;\n\n  const currencyMask = createNumberMask({\n    ...defaultMaskOptions,\n    ...maskOptions,\n  })\n\n\n  return (\n    <MaskedInput\n      {...other}\n      ref={(ref) => {\n        inputRef(ref ? ref.inputElement : null);\n      }}\n      mask={currencyMask}\n      showMask\n    />\n  );\n}\n\nPesoMask.defaultProps = {\n  inputMode: 'numeric',\n  maskOptions: {},\n}\n\nPesoMask.propTypes = {\n  inputRef: PropTypes.func.isRequired,\n  inputmode: PropTypes.string,\n  maskOptions: PropTypes.shape({\n    prefix: PropTypes.string,\n    suffix: PropTypes.string,\n    includeThousandsSeparator: PropTypes.boolean,\n    thousandsSeparatorSymbol: PropTypes.string,\n    allowDecimal: PropTypes.boolean,\n    decimalSymbol: PropTypes.string,\n    decimalLimit: PropTypes.string,\n    requireDecimal: PropTypes.boolean,\n    allowNegative: PropTypes.boolean,\n    allowLeadingZeroes: PropTypes.boolean,\n    integerLimit: PropTypes.number,\n  }),\n};\n\n\n\nsetLocale({  \n  mixed: {\n    notType: function notType(_ref) {\n      switch (_ref.type) {\n        case 'number':\n          return 'deve ser um número';\n        case 'string':\n          return 'deve ser um texto';\n        default:\n          return 'formato errado';\n      }\n    },\n    default: 'é inválido',\n    required: 'Desculpe, este campo é obrigatório',\n    oneOf: 'deve ser um dos seguintes valores: ${values}',\n    notOneOf: 'não pode ser um dos seguintes valores: ${values}',\n  },\n  string: {\n      length: 'deve ter exatamente ${length} caracteres',\n      min: 'deve ter pelo menos ${min} caracteres',\n      max: 'deve ter no máximo ${max} caracteres',\n      email: 'Por favor, informe um e-mail inválido',\n      url: 'deve ter um formato de URL válida',\n      trim: 'não deve conter espaços no início ou no fim.',\n      lowercase: 'deve estar em maiúsculo',\n      uppercase: 'deve estar em minúsculo',\n  },\n  number: {\n      min: 'deve ser no mínimo ${min}',\n      max: 'deve ser no máximo ${max}',\n      lessThan: 'deve ser menor que ${less}',\n      moreThan: 'deve ser maior que ${more}',\n      notEqual: 'não pode ser igual à ${notEqual}',\n      positive: 'deve ser um número posítivo',\n      negative: 'deve ser um número negativo',\n      integer: 'deve ser um número inteiro',      \n  },\n      date: {\n      min: 'deve ser maior que a data ${min}',\n      max: 'deve ser menor que a data ${max}',\n  },\n      array: {\n      min: 'deve ter no mínimo ${min} itens',\n      max: 'deve ter no máximo ${max} itens',\n  }\n});\n\n\nconst regexCPF = /([0-9]{2}[\\.]?[0-9]{3}[\\.]?[0-9]{3}[\\/]?[0-9]{4}[-]?[0-9]{2})|([0-9]{3}[\\.]?[0-9]{3}[\\.]?[0-9]{3}[-]?[0-9]{2})/gm;\nfunction cpfValidate(cpf) {\n\tconsole.log(\"Validatring\", cpf);\n\treturn cpf.length > 10\n}\n\nfunction isValidCPF(cpf) {\n  if (typeof cpf !== \"string\") return false\n  cpf = cpf.replace(/[\\s.-]*/igm, '')\n  if (\n      !cpf ||\n      cpf.length != 11 ||\n      cpf == \"00000000000\" ||\n      cpf == \"11111111111\" ||\n      cpf == \"22222222222\" ||\n      cpf == \"33333333333\" ||\n      cpf == \"44444444444\" ||\n      cpf == \"55555555555\" ||\n      cpf == \"66666666666\" ||\n      cpf == \"77777777777\" ||\n      cpf == \"88888888888\" ||\n      cpf == \"99999999999\" \n  ) {\n      return false\n  }\n  var soma = 0\n  var resto\n  for (var i = 1; i <= 9; i++) \n      soma = soma + parseInt(cpf.substring(i-1, i)) * (11 - i)\n  resto = (soma * 10) % 11\n  if ((resto == 10) || (resto == 11))  resto = 0\n  if (resto != parseInt(cpf.substring(9, 10)) ) return false\n  soma = 0\n  for (var i = 1; i <= 10; i++) \n      soma = soma + parseInt(cpf.substring(i-1, i)) * (12 - i)\n  resto = (soma * 10) % 11\n  if ((resto == 10) || (resto == 11))  resto = 0\n  if (resto != parseInt(cpf.substring(10, 11) ) ) return false\n  return true\n}\n\nfunction isValidPhone(phone){\n  return /^(?:(?:\\+|00)?(55)\\s?)?(?:\\(?([1-9][0-9])\\)?\\s?)?(?:((?:9\\d|[2-9])\\d{3})\\-?(\\d{4}))$/.test(phone);\n}\n\nfunction isValidDate(date) {\n  return /^((((0?[1-9]|[12]\\d|3[01])[\\.\\-\\/](0?[13578]|1[02])      [\\.\\-\\/]((1[6-9]|[2-9]\\d)?\\d{2}))|((0?[1-9]|[12]\\d|30)[\\.\\-\\/](0?[13456789]|1[012])[\\.\\-\\/]((1[6-9]|[2-9]\\d)?\\d{2}))|((0?[1-9]|1\\d|2[0-8])[\\.\\-\\/]0?2[\\.\\-\\/]((1[6-9]|[2-9]\\d)?\\d{2}))|(29[\\.\\-\\/]0?2[\\.\\-\\/]((1[6-9]|[2-9]\\d)?(0[48]|[2468][048]|[13579][26])|((16|[2468][048]|[3579][26])00)|00)))|(((0[1-9]|[12]\\d|3[01])(0[13578]|1[02])((1[6-9]|[2-9]\\d)?\\d{2}))|((0[1-9]|[12]\\d|30)(0[13456789]|1[012])((1[6-9]|[2-9]\\d)?\\d{2}))|((0[1-9]|1\\d|2[0-8])02((1[6-9]|[2-9]\\d)?\\d{2}))|(2902((1[6-9]|[2-9]\\d)?(0[48]|[2468][048]|[13579][26])|((16|[2468][048]|[3579][26])00)|00))))$/.test(date);\n}\n\nyup.addMethod(yup.string, \"cpf\", function(message) {\n\t// return yup.mixed().test(\"cpf\", message || \"número de CPF inválido\", value => cpfValidate(value));\n\treturn yup.mixed().test(\"cpf\", message || \"número de CPF inválido\", value => isValidCPF(value));\n});\n\nyup.addMethod(yup.string, \"phone\", function(message) {\t\n\treturn yup.mixed().test(\"phone\", message || \"número de celular inválido\", value => isValidPhone(value));\n});\n\nyup.addMethod(yup.string, \"date\", function(message) {\t\n\treturn yup.mixed().test(\"date\", message || \"data inválida\", value => isValidDate(value));\n});\n\n// const SignupSchema = yup.object().shape({\n//   // firstName: yup.string().required(),\n//   cpf: yup\n//     .string()\n//     // .required(), \n// \t\t// .transform(function removeNonNumericalChar(value) {\n// \t\t// \tconsole.log(\"Transforming\", value);\n// \t\t// \treturn this.isType(value) && value !== null ? value.replace(/\\D/g, \"\") : value;\n// \t\t// })\n// \t\t// .matches(regexCPF, \"formato inválido\")\n//     .cpf(\"informe um CPF válido\")\n//     ,\n//   first: yup\n//     .string()\n//     .required(),  \n//   // email: yup.string().required(),\n//   last: yup\n//     .number()\n//     // .required()\n//     .positive()\n//     .integer(),    \n  \n//   // message: yup.string().url(),\n//   // checkboxInput: yup.boolean().oneOf([true],'aceite obrigatório')\n// });\n\nconst SignupSchema = yup.object().shape({  \n  cpf: yup\n    .string()\n    .cpf(\"Por favor, informe um CPF válido\"),  \n  nome: yup\n    .string()\n    .required(),  \n  email: yup\n    .string()\n    .required()\n    .email(),\n  telefone: yup\n    .string()\n    .phone(\"Por favor, informe um número de celular válido\"),\n  dataNascimento: yup\n    .string()\n    .date(\"Por favor, informe uma data válida\"),  \n  \n  cep: yup\n    .string()\n    .required(),\n  endereco: yup\n    .string()\n    .required(),\n  numero: yup\n    .number()\n    .required(),\n  complemento: yup\n    .string(),    \n  bairro: yup\n    .string()\n    .required(),\n  estado: yup\n    .string()\n    .required(),\n  cidade: yup\n    .string()\n    .required(),\n\n\n\n  idade: yup\n    .number()\n    .required(),\n\n  sexo: yup\n    .number()\n    .required(),\n  \n\n  // receberContatoEmail: yup.boolean().oneOf([true],'aceite obrigatório'),\n  // receberContatoSMS: yup.boolean().oneOf([true],'aceite obrigatório'),\n  // receberContatoWhatsApp: yup.boolean().oneOf([true],'aceite obrigatório')\n    \n\n});\n\n// const schema = yup.object().shape({\n//   first: yup.string().required(),\n//   age: yup.number().positive().integer().required(),\n// });\n\nexport default function SectionAnamnese(props) {\n  // const { register, errors, handleSubmit} = useForm({\n  //   validationSchema: SignupSchema\n  // });\n  const { register, trigger, handleSubmit, setValue, getValues, errors } = useForm({\n    resolver: yupResolver(SignupSchema),\n    mode: \"onBlur\"\n    // mode: \"onChange\"\n  });\n  const onSubmit = data => {\n    console.log(data);\n    // alert(JSON.stringify(data, null));\n  };\n\n\n  useEffect(() => {    \n    // history.pushState({}, null, \"/anamnese\")\n  }, []);\n\n\n  const [checked, setChecked] = React.useState([]);\n  const handleToggle = value => {\n    const currentIndex = checked.indexOf(value);\n    const newChecked = [...checked];\n    if (currentIndex === -1) {\n      newChecked.push(value);\n    } else {\n      newChecked.splice(currentIndex, 1);\n    }\n    setChecked(newChecked);\n  };\n\n  const [isAluno, setIsAluno] = React.useState(false);\n  const [activeForm, setActiveForm] = React.useState(2);\n  // const [activeField, setActiveField] = React.useState(\"first\");\n  const [activeField, setActiveField] = React.useState([\"idade\"]);\n  const [isDisableNext, setIsDisableNext] = React.useState(true);\n  const [error, setError] = useState(false);\n\n  const handleNext = async (type) => {\n\n    // console.log(activeField);\n    // const result = await trigger(activeField)\n    // console.log(result);\n\n    const result = true\n\n    if(result) { \n      if(activeForm == 15){\n        props.setStepCheckout(3);\n      }else {\n        setIsDisableNext(true);\n        setActiveForm((prevActiveStep) => prevActiveStep + 1);\n        handleFieldActive(activeForm + 1);                \n      }\n    }\n\n    // setActiveForm((prevActiveStep) => prevActiveStep + 1);\n        \n\n  };\n\n  const handleBack = (type) => {\n\n    if(activeForm !== 0){\n      setIsDisableNext(false);\n      setActiveForm((prevActiveStep) => prevActiveStep - 1);  \n      handleFieldActive(activeForm - 1); \n    }\n\n  };\n\n  const handleFocus = (event) => {\n    // event.target.select()\n\n    event.target.selectionStart = 0;\n    event.target.selectionEnd = 0;\n    \n  };\n  \n  const handleChange = async (event) => {\n    // event.target.select()\n\n\n    const result = await trigger(activeField);\n    console.log(activeField);\n    console.log(result);\n    if(result){\n      setIsDisableNext(false);\n    } else{\n      setIsDisableNext(true);\n    }\n\n    \n  };\n\n\n\n\n\n  const handleFieldActive = (step) => {\n\n    console.log(\"handleFieldActive\");\n\n    switch (step) {\n      case 0:        \n        setActiveField(\"idade\");\n        break;\n      case 1:\n        setActiveField(\"sexo\");\n        break;      \n      case 2:\n        setActiveField([\"peso, altura\"]);\n        break;      \n      default:\n        setActiveField(\"cpf\");\n        break;\n    }\n\n    console.log(step);\n    // console.log(activeField);\n\n  };\n\n  const setValueForm = (name, value) => {    \n    setValue(name, value);\n    console.log(getValues());\n    handleNext();\n  };\n\n  // useEffect(() => {\n  //   console.log(\"teste de erro\");\n  //   console.log(errors[activeField]);  \n  //   !errors[activeField] && setIsDisableNext(false);\n  // }, [ errors[activeField] ]);\n  \n  // useEffect(() => {\n  //   console.log(\"teste de field\");\n  //   console.log(activeField);    \n   // }, [ activeField ]);\n\n  \n  \n  const [anamnese, setAnamnese] = React.useState({\n    idade: \"TESTE\",\n\n    sexo: \"TESTE\",\n\n    peso: \"TESTE\",\n    altura: \"TESTE\",\n\n    objetivo: \"TESTE\",\n\n    habitoTreino: \"TESTE\",\n\n    frequenciaTreino: \"TESTE\",\n\n    fazMusculacao: \"TESTE\",\n\n    fazAulas: \"TESTE\",\n\n    sedentario: \"TESTE\",\n\n    sedentarioTempo: \"TESTE\",\n\n    reclusaoTreino: \"TESTE\",\n\n    tempoPorDia: \"TESTE\",\n\n    periodo: \"TESTE\",\n\n    patologia: \"TESTE\",\n    outroPatologia: \"TESTE\",\n\n    osseoArticular: \"TESTE\",\n    qualOsseoArticular: \"TESTE\",\n\n    cirurgia: \"TESTE\",\n    qualCirurgia: \"TESTE\",\n\n    internacao: \"TESTE\",\n    qualInternacao: \"TESTE\",\n\n    medicamento: \"TESTE\",\n    qualMedicamento: \"TESTE\",\n\n    fuma: \"TESTE\",\n\n    nutricionista: \"TESTE\",\n\n    personalTrainer: \"TESTE\",\n\n    equipamentos: \"TESTE\"\n\n  });\n\n\n\n  const fetchData = async (event) => {    \n    setError(false);\n    let cep = event.target.value\n    setAnamnese( (prevAnamnese) => {\n      return {\n        ...prevAnamnese,       \n        endereco: \"\",\n        bairro: \"\",\n        estado: \"\",\n        cidade: \"\",\n      }\n    });\n\n    await axios.get(`https://viacep.com.br/ws/${cep}/json/`)\n      .then(res => {\n        // setError(false);\n        // setUsers(prevState => [...prevState, ...res.data]);\n        // setUser(res.data);\n        // console.log(res.data);\n        if(res.data.error){\n          setError(true);\n          return\n        }\n\n        setAnamnese( (prevAnamnese) => {\n          return {\n            ...prevAnamnese,\n            cep: res.data.cep,\n            endereco: res.data.logradouro,\n            bairro: res.data.bairro,\n            estado: res.data.uf,\n            cidade: res.data.localidade,\n          }\n        });\n        // console.log(res.data.cliente);     \n        \n      })\n      .catch((error) => {\n        console.log(error);\n        setError(true);\n      })\n      .finally(() => {\n        // setLoading(false);\n      });\n  };\n\n\n\n\n  const classes = useStyles();\n  return (\n    <div className=\"cd-section\" >\n      {/* Contact us 1 START */}\n      <div\n        className={classes.contacts + \" \" + classes.section}\n        // style={{ backgroundImage: `url(${city})` }}\n        style={{ backgroundColor: \"#ffffff\" }}\n      >\n        <div className={classes.container}>\n          <GridContainer justify=\"center\">\n            {/* <GridItem xs={12} sm={12} md={8} className={classes.mlAuto}> */}\n            <GridItem xs={12} sm={12} md={5}>\n              <Grow \n                in={true}\n                style={{ transformOrigin: '0 0 0' }}\n                {...(true ? { timeout: 1000 } : {})}\n              >\n                <Card className={classes.card1}>\n                <form onSubmit={handleSubmit(onSubmit)}>\n                  <CardHeader\n                    contact\n                    color=\"primary\"\n                    className={classes.textCenter}\n                  >\n                    <h4 className={classes.cardTitle}>Anamnese</h4>\n                  </CardHeader>\n    \n                  {/* <FieldsCpf register={register} errors={errors} handleSubmit={handleSubmit} visible={isAluno} /> */}\n              \n                  {/* <FieldsPersonalData register={register} errors={errors} handleSubmit={handleSubmit} visible={isAluno} />                                     */}\n                  \n\n\n                  <Grow \n                    in={activeForm === 0}\n                    style={{ transformOrigin: '0 0 0', display: activeForm === 0 ? \"block\" : \"none\" }}\n                    {...(activeForm === 0 ? { timeout: 1000 } : {})}\n                  >\n\n                    <CardBody>\n                      <GridContainer justify=\"center\"> \n                        <GridItem xs={12} sm={8} md={8}>\n\n\n                          <CustomInput\n                            labelText=\"Qual é sua idade?\"\n                            labelError={errors.idade && errors.idade.message}\n                            id=\"idade\"  \n                            error={errors.idade ? true : false}                                                                          \n                            formControlProps={{\n                              fullWidth: true\n                            }}                            \n                            inputProps={{\n                              type: \"tel\",\n                              name: \"idade\",\n                              inputRef: register, \n                              onChange: handleChange\n                            //   onFocus: handleFocus,\n                            //   inputComponent: TextMaskCustom,\n                            //   startAdornment: (\n                            //     <InputAdornment position=\"start\">\n                            //       <AssignmentInd className={classes.inputIconsColor} />\n                            //     </InputAdornment>\n                            //   ) \n                            }}                          \n                          />     \n   \n                        </GridItem>   \n                      </GridContainer>                 \n                  \n                    </CardBody>\n\n                  </Grow>\n                  \n                  <Grow \n                    in={activeForm === 1}\n                    style={{ transformOrigin: '0 0 0', display: activeForm === 1 ? \"block\" : \"none\" }}\n                    {...(activeForm === 1 ? { timeout: 1000 } : {})}\n                  >\n                    {/* {\n                      activeForm === 1 && setIsDisableNext(true)\n                    } */}                    \n\n                    <CardBody>\n                      <GridContainer justify=\"center\"> \n                        <GridItem xs={12} sm={8} md={8}>\n\n                          \n                          {/* <CustomInput\n                            labelText=\"Qual seu sexo?\"\n                            labelError={errors.sexo && errors.sexo.message}\n                            id=\"sexo\"  \n                            error={errors.sexo ? true : false}                                                                          \n                            formControlProps={{\n                              fullWidth: true\n                            }}                            \n                            inputProps={{\n                              name: \"sexo\",\n                              inputRef: register, \n                            //   onFocus: handleFocus,\n                            //   inputComponent: TextMaskCustom,\n                            //   startAdornment: (\n                            //     <InputAdornment position=\"start\">\n                            //       <AssignmentInd className={classes.inputIconsColor} />\n                            //     </InputAdornment>\n                            //   ) \n                            }}                          \n                          />      */}\n\n                          <input hidden name=\"sexo\" type=\"text\" ref={register} />\n\n                          <label>Qual o seu sexo?</label>\n\n                          <Button color=\"primary\" fullWidth onClick={() => setValueForm(\"sexo\", \"masculino\")}>\n                            Masculino\n                          </Button>\n                          \n                          <Button color=\"primary\" fullWidth onClick={() => setValueForm(\"sexo\", \"feminino\")}>\n                            Feminino\n                          </Button>\n\n                        </GridItem>   \n                      </GridContainer>                 \n                  \n                    </CardBody>\n\n                  </Grow>\n                  \n                  <Grow \n                    in={activeForm === 2}\n                    style={{ transformOrigin: '0 0 0', display: activeForm === 2 ? \"block\" : \"none\" }}\n                    {...(activeForm === 2 ? { timeout: 1000 } : {})}\n                  >\n\n                    <CardBody>\n                      <GridContainer justify=\"center\"> \n                        <GridItem xs={12} sm={8} md={8}>\n                          <CustomInput\n                            labelText=\"Qual é o seu peso?\"\n                            labelError={errors.peso && errors.peso.message}                          \n                            error={errors.peso ? true : false}\n                            id=\"peso\"\n                            formControlProps={{\n                              fullWidth: true\n                            }}\n                            inputProps={{\n                              type: \"tel\",\n                              name: \"peso\",\n                              inputComponent: PesoMask,\n                              inputRef: register,\n                              endAdornment: (\n                                <InputAdornment position=\"start\">\n                                  {\"Kg\"}\n                                </InputAdornment>\n                              )                           \n                            }}\n                          />                     \n                          <CustomInput\n                            labelText=\"Qual a sua altura? \"\n                            labelError={errors.altura && errors.altura.message}                          \n                            error={errors.altura ? true : false}\n                            id=\"altura\"\n                            formControlProps={{\n                              fullWidth: true\n                            }}\n                            inputProps={{\n                              type: \"tel\",\n                              name: \"altura\",\n                              inputRef: register,\n                            //   startAdornment: (\n                            //     <InputAdornment position=\"start\">\n                            //       <Email className={classes.inputIconsColor} />\n                            //     </InputAdornment>\n                            //   )                                                        \n                            }}\n                          />                                                                  \n                        </GridItem>   \n                      </GridContainer>                 \n                  \n                    </CardBody>\n\n                  </Grow>\n                  \n                  <Grow \n                    in={activeForm === 3}\n                    style={{ transformOrigin: '0 0 0', display: activeForm === 2 ? \"block\" : \"none\" }}\n                    {...(activeForm === 3 ? { timeout: 1000 } : {})}\n                  >\n\n                    <CardBody>\n\n                    {error && ( \n                      <SnackbarContent\n                        message={\n                          <span>\n                            <b>Não encontramos seu CEP</b> <br/> Tente novamente\n                          </span>\n                        }\n                        // close\n                        color=\"warning\"\n                        icon=\"info_outline\"\n                      />\n                    )} \n\n                      <GridContainer justify=\"center\"> \n                        <GridItem xs={12} sm={12} md={8}>\n                          <CustomInput\n                            labelText=\"Qual é o seu objetivo?\"\n                            labelError={errors.objetivo && errors.objetivo.message}                          \n                            error={errors.objetivo ? true : false}\n                            id=\"objetivo\"\n                            formControlProps={{\n                              fullWidth: true\n                            }}\n                            inputProps={{\n                              name: \"objetivo\",\n                              inputRef: register,\n                            //   onBlur: fetchData,\n                            //   startAdornment: (\n                            //     <InputAdornment position=\"start\">\n                            //       <AssignmentInd className={classes.inputIconsColor} />\n                            //     </InputAdornment>\n                            //   )                           \n                            }}\n                          />  \n                        </GridItem>                   \n                          \n                      </GridContainer>                 \n                  \n                    </CardBody>\n\n                  </Grow>\n                  \n                  \n                  \n                  <Grow \n                    in={activeForm === 3}\n                    style={{ transformOrigin: '0 0 0', display: activeForm === 3 ? \"block\" : \"none\" }}\n                    {...(activeForm === 3 ? { timeout: 1000 } : {})}\n                  >\n\n                    <CardBody>\n\n                    {error && ( \n                      <SnackbarContent\n                        message={\n                          <span>\n                            <b>Não encontramos seu CEP</b> <br/> Tente novamente\n                          </span>\n                        }\n                        // close\n                        color=\"warning\"\n                        icon=\"info_outline\"\n                      />\n                    )} \n\n                      <GridContainer justify=\"center\"> \n                        <GridItem xs={12} sm={12} md={8}>\n\n                          {/* <CustomInput\n                            labelText=\"Possui o hábito de treinar?\"\n                            labelError={errors.habitoTreino && errors.habitoTreino.message}                          \n                            error={errors.habitoTreino ? true : false}\n                            id=\"habitoTreino\"\n                            formControlProps={{\n                              fullWidth: true\n                            }}\n                            inputProps={{\n                              name: \"habitoTreino\",\n                              inputRef: register,\n                                             \n                            }}\n                          />   */}\n\n                        \n                        <label>Possui o hábito de treinar?</label>\n                        <br/>                        \n                        <Button color=\"primary\" fullWidth onClick={handleNext}>\n                          Sim\n                        </Button>\n                        \n                        <Button color=\"secondary\" fullWidth onClick={handleNext}>\n                          Não\n                        </Button>\n\n                        <FormControl fullWidth className={classes.selectFormControl}>\n                          <InputLabel\n                            htmlFor=\"frequenciaTreino\"\n                            className={classes.selectLabel}\n                          >\n                            Se sim, quantas vezes na semana?\n                          </InputLabel>\n                          <Select\n                            MenuProps={{\n                              className: classes.selectMenu\n                            }}\n                            classes={{\n                              select: classes.select\n                            }}\n                            // value={simpleSelect}\n                            // onChange={handleSimple}\n                            inputProps={{\n                              name: \"frequenciaTreino\",\n                              inputRef: register,\n                              id: \"frequenciaTreino\"\n                            }}\n                          >\n                            <MenuItem\n                              classes={{\n                                root: classes.selectMenuItem,\n                                selected: classes.selectMenuItemSelected\n                              }}\n                              value=\"2\"\n                            >\n                              1 a 2 vezes\n                            </MenuItem>\n                            <MenuItem\n                              classes={{\n                                root: classes.selectMenuItem,\n                                selected: classes.selectMenuItemSelected\n                              }}\n                              value=\"3\"\n                            >\n                              3 a 4 vezes\n                            </MenuItem>\n                            <MenuItem\n                              classes={{\n                                root: classes.selectMenuItem,\n                                selected: classes.selectMenuItemSelected\n                              }}\n                              value=\"4\"\n                            >\n                              6 a 7 vezes\n                            </MenuItem>\n                          </Select>\n                        </FormControl>\n\n\n\n\n                        </GridItem>                   \n                        {/* <GridItem xs={12} sm={12} md={8}>\n                          <CustomInput\n                            labelText=\"Se sim, quantas vezes na semana?\"\n                            labelError={errors.frequenciaTreino && errors.frequenciaTreino.message}                          \n                            error={errors.frequenciaTreino ? true : false}\n                            id=\"frequenciaTreino\"\n                            formControlProps={{\n                              fullWidth: true\n                            }}\n                            inputProps={{\n                              name: \"frequenciaTreino\",\n                              inputRef: register,\n                                                   \n                            }}\n                          />  \n                        </GridItem>                    */}\n                          \n                      </GridContainer>                 \n                  \n                    </CardBody>\n\n                  </Grow>\n\n\n                  <Grow \n                    in={activeForm === 4}\n                    style={{ transformOrigin: '0 0 0', display: activeForm === 4 ? \"block\" : \"none\" }}\n                    {...(activeForm === 4 ? { timeout: 1000 } : {})}\n                  >\n\n                    <CardBody>\n\n                    {error && ( \n                      <SnackbarContent\n                        message={\n                          <span>\n                            <b>Não encontramos seu CEP</b> <br/> Tente novamente\n                          </span>\n                        }\n                        // close\n                        color=\"warning\"\n                        icon=\"info_outline\"\n                      />\n                    )} \n\n                      <GridContainer justify=\"center\"> \n                        <GridItem xs={12} sm={12} md={8}>\n                          <CustomInput\n                            labelText=\"Na academia, costuma fazer musculação?\"\n                            labelError={errors.fazMusculacao && errors.fazMusculacao.message}                          \n                            error={errors.fazMusculacao ? true : false}\n                            id=\"fazMusculacao\"\n                            className={classes.topZero}\n                            formControlProps={{\n                              fullWidth: true\n                            }}\n                            inputProps={{\n                              name: \"fazMusculacao\",\n                              inputRef: register,\n                                             \n                            }}\n                          />  \n                        </GridItem>                   \n                        <GridItem xs={12} sm={12} md={8}>\n                          <CustomInput\n                            labelText=\"Na academia, costuma fazer aulas?\"\n                            labelError={errors.fazAulas && errors.fazAulas.message}                          \n                            error={errors.fazAulas ? true : false}\n                            id=\"fazAulas\"                            \n                            formControlProps={{\n                              fullWidth: true\n                            }}\n                            inputProps={{\n                              name: \"fazAulas\",\n                              inputRef: register,\n                                                   \n                            }}\n                          />  \n                        </GridItem>                   \n                          \n                      </GridContainer>                 \n                  \n                    </CardBody>\n\n                  </Grow>\n\n                  <Grow \n                    in={activeForm === 5}\n                    style={{ transformOrigin: '0 0 0', display: activeForm === 5 ? \"block\" : \"none\" }}\n                    {...(activeForm === 5 ? { timeout: 1000 } : {})}\n                  >\n\n                    <CardBody>\n\n                    {error && ( \n                      <SnackbarContent\n                        message={\n                          <span>\n                            <b>Não encontramos seu CEP</b> <br/> Tente novamente\n                          </span>\n                        }\n                        // close\n                        color=\"warning\"\n                        icon=\"info_outline\"\n                      />\n                    )} \n\n                      <GridContainer justify=\"center\"> \n                        <GridItem xs={12} sm={12} md={8}>\n                          <CustomInput\n                            labelText=\"Atualmente, se considera sedentário?\"\n                            labelError={errors.sedentario && errors.sedentario.message}                          \n                            error={errors.sedentario ? true : false}\n                            id=\"sedentario\"\n                            formControlProps={{\n                              fullWidth: true\n                            }}\n                            inputProps={{\n                              name: \"sedentario\",\n                              inputRef: register,\n                                             \n                            }}\n                          />  \n                        </GridItem>                   \n                        <GridItem xs={12} sm={12} md={8}>\n                          <CustomInput\n                            labelText=\"Se sim, há quanto tempo?\"\n                            labelError={errors.fazAulas && errors.fazAulas.message}                          \n                            error={errors.fazAulas ? true : false}\n                            id=\"fazAulas\"\n                            formControlProps={{\n                              fullWidth: true\n                            }}\n                            inputProps={{\n                              name: \"fazAulas\",\n                              inputRef: register,\n                                                   \n                            }}\n                          />  \n                        </GridItem>                   \n                          \n                      </GridContainer>                 \n                  \n                    </CardBody>\n\n                  </Grow>\n\n                  <Grow \n                    in={activeForm === 6}\n                    style={{ transformOrigin: '0 0 0', display: activeForm === 6 ? \"block\" : \"none\" }}\n                    {...(activeForm === 6 ? { timeout: 1000 } : {})}\n                  >\n\n                    <CardBody>\n\n                    {error && ( \n                      <SnackbarContent\n                        message={\n                          <span>\n                            <b>Não encontramos seu CEP</b> <br/> Tente novamente\n                          </span>\n                        }\n                        // close\n                        color=\"warning\"\n                        icon=\"info_outline\"\n                      />\n                    )} \n\n                      <GridContainer justify=\"center\"> \n                        <GridItem xs={12} sm={12} md={8}>\n                          <CustomInput\n                            labelText=\"Pretende treinar quanto tempo por dia?\"\n                            labelError={errors.tempoPorDia && errors.tempoPorDia.message}                          \n                            error={errors.tempoPorDia ? true : false}\n                            id=\"tempoPorDia\"\n                            formControlProps={{\n                              fullWidth: true\n                            }}\n                            inputProps={{\n                              name: \"tempoPorDia\",\n                              inputRef: register,\n                                             \n                            }}\n                          />  \n                        </GridItem>                   \n                        <GridItem xs={12} sm={12} md={8}>\n                          <CustomInput\n                            labelText=\"Em qual período?\"\n                            labelError={errors.periodo && errors.periodo.message}                          \n                            error={errors.periodo ? true : false}\n                            id=\"periodo\"\n                            formControlProps={{\n                              fullWidth: true\n                            }}\n                            inputProps={{\n                              name: \"periodo\",\n                              inputRef: register,\n                                                   \n                            }}\n                          />  \n                        </GridItem>                   \n                          \n                      </GridContainer>                 \n                  \n                    </CardBody>\n\n                  </Grow>\n\n                  <Grow \n                    in={activeForm === 7}\n                    style={{ transformOrigin: '0 0 0', display: activeForm === 7 ? \"block\" : \"none\" }}\n                    {...(activeForm === 7 ? { timeout: 1000 } : {})}\n                  >\n\n                    <CardBody>\n\n                    {error && ( \n                      <SnackbarContent\n                        message={\n                          <span>\n                            <b>Não encontramos seu CEP</b> <br/> Tente novamente\n                          </span>\n                        }\n                        // close\n                        color=\"warning\"\n                        icon=\"info_outline\"\n                      />\n                    )} \n\n                      <GridContainer justify=\"center\"> \n                        <GridItem xs={12} sm={12} md={8}>\n                          <CustomInput\n                            labelText=\"Possui algum patologia?\"\n                            labelError={errors.patologia && errors.patologia.message}                          \n                            error={errors.patologia ? true : false}\n                            id=\"patologia\"\n                            formControlProps={{\n                              fullWidth: true\n                            }}\n                            inputProps={{\n                              name: \"patologia\",\n                              inputRef: register,\n                                             \n                            }}\n                          />  \n                        </GridItem>                   \n                        <GridItem xs={12} sm={12} md={8}>\n                          <CustomInput\n                            labelText=\"Se outra, qual?\"\n                            labelError={errors.outroPatologia && errors.outroPatologia.message}                          \n                            error={errors.outroPatologia ? true : false}\n                            id=\"outroPatologia\"\n                            formControlProps={{\n                              fullWidth: true\n                            }}\n                            inputProps={{\n                              name: \"outroPatologia\",\n                              inputRef: register,\n                                                   \n                            }}\n                          />  \n                        </GridItem>                   \n                          \n                      </GridContainer>                 \n                  \n                    </CardBody>\n\n                  </Grow>\n                  \n                  <Grow \n                    in={activeForm === 8}\n                    style={{ transformOrigin: '0 0 0', display: activeForm === 8 ? \"block\" : \"none\" }}\n                    {...(activeForm === 8 ? { timeout: 1000 } : { })}\n                  >\n\n                    <CardBody>\n\n                    {error && ( \n                      <SnackbarContent\n                        message={\n                          <span>\n                            <b>Não encontramos seu CEP</b> <br/> Tente novamente\n                          </span>\n                        }\n                        // close\n                        color=\"warning\"\n                        icon=\"info_outline\"\n                      />\n                    )} \n\n                      <GridContainer justify=\"center\"> \n                        <GridItem xs={12} sm={12} md={8}>\n                          <CustomInput\n                            labelText=\"Possui algum problema ósseo articular?\"\n                            labelError={errors.osseoArticular && errors.osseoArticular.message}                          \n                            error={errors.osseoArticular ? true : false}\n                            id=\"osseoArticular\"\n                            formControlProps={{\n                              fullWidth: true\n                            }}\n                            inputProps={{\n                              name: \"osseoArticular\",\n                              inputRef: register,\n                                             \n                            }}\n                          />  \n                        </GridItem>                   \n                        <GridItem xs={12} sm={12} md={8}>\n                          <CustomInput\n                            labelText=\"Se sim, qual?\"\n                            labelError={errors.qualOsseoArticular && errors.qualOsseoArticular.message}                          \n                            error={errors.qualOsseoArticular ? true : false}\n                            id=\"qualOsseoArticular\"\n                            formControlProps={{\n                              fullWidth: true\n                            }}\n                            inputProps={{\n                              name: \"qualOsseoArticular\",\n                              inputRef: register,\n                                                   \n                            }}\n                          />  \n                        </GridItem>                   \n                          \n                      </GridContainer>                 \n                  \n                    </CardBody>\n\n                  </Grow>\n                  \n                  <Grow \n                    in={activeForm === 9}\n                    style={{ transformOrigin: '0 0 0', display: activeForm === 9 ? \"block\" : \"none\" }}\n                    {...(activeForm === 9 ? { timeout: 1000 } : {})}\n                  >\n\n                    <CardBody>\n\n                    {error && ( \n                      <SnackbarContent\n                        message={\n                          <span>\n                            <b>Não encontramos seu CEP</b> <br/> Tente novamente\n                          </span>\n                        }\n                        // close\n                        color=\"warning\"\n                        icon=\"info_outline\"\n                      />\n                    )} \n\n                      <GridContainer justify=\"center\"> \n                        <GridItem xs={12} sm={12} md={8}>\n                          <CustomInput\n                            labelText=\"Já sofreu alguma cirurgia?\"\n                            labelError={errors.cirurgia && errors.cirurgia.message}                          \n                            error={errors.cirurgia ? true : false}\n                            id=\"cirurgia\"\n                            formControlProps={{\n                              fullWidth: true\n                            }}\n                            inputProps={{\n                              name: \"cirurgia\",\n                              inputRef: register,\n                                             \n                            }}\n                          />  \n                        </GridItem>                   \n                        <GridItem xs={12} sm={12} md={8}>\n                          <CustomInput\n                            labelText=\"Se sim, qual?\"\n                            labelError={errors.qualCirurgia && errors.qualCirurgia.message}                          \n                            error={errors.qualCirurgia ? true : false}\n                            id=\"qualCirurgia\"\n                            formControlProps={{\n                              fullWidth: true\n                            }}\n                            inputProps={{\n                              name: \"qualCirurgia\",\n                              inputRef: register,\n                                                   \n                            }}\n                          />  \n                        </GridItem>                   \n                          \n                      </GridContainer>                 \n                  \n                    </CardBody>\n\n                  </Grow>\n                  \n                  \n                  <Grow \n                    in={activeForm === 10}\n                    style={{ transformOrigin: '0 0 0', display: activeForm === 10 ? \"block\" : \"none\" }}\n                    {...(activeForm === 10 ? { timeout: 1000 } : {})}\n                  >\n\n                    <CardBody>\n\n                    {error && ( \n                      <SnackbarContent\n                        message={\n                          <span>\n                            <b>Não encontramos seu CEP</b> <br/> Tente novamente\n                          </span>\n                        }\n                        // close\n                        color=\"warning\"\n                        icon=\"info_outline\"\n                      />\n                    )} \n\n                      <GridContainer justify=\"center\"> \n                        <GridItem xs={12} sm={12} md={8}>\n                          <CustomInput\n                            labelText=\"Sofreu alguma internação recentemente?\"\n                            labelError={errors.internacao && errors.internacao.message}                          \n                            error={errors.internacao ? true : false}\n                            id=\"internacao\"\n                            formControlProps={{\n                              fullWidth: true\n                            }}\n                            inputProps={{\n                              name: \"internacao\",\n                              inputRef: register,\n                                             \n                            }}\n                          />  \n                        </GridItem>                   \n                        <GridItem xs={12} sm={12} md={8}>\n                          <CustomInput\n                            labelText=\"Se sim, qual?\"\n                            labelError={errors.qualInternacao && errors.qualInternacao.message}                          \n                            error={errors.qualInternacao ? true : false}\n                            id=\"qualInternacao\"\n                            formControlProps={{\n                              fullWidth: true\n                            }}\n                            inputProps={{\n                              name: \"qualInternacao\",\n                              inputRef: register,\n                                                   \n                            }}\n                          />  \n                        </GridItem>                   \n                          \n                      </GridContainer>                 \n                  \n                    </CardBody>\n\n                  </Grow>\n                  \n                  <Grow \n                    in={activeForm === 11}\n                    style={{ transformOrigin: '0 0 0', display: activeForm === 11 ? \"block\" : \"none\" }}\n                    {...(activeForm === 11 ? { timeout: 1000 } : {})}\n                  >\n\n                    <CardBody>\n\n                    {error && ( \n                      <SnackbarContent\n                        message={\n                          <span>\n                            <b>Não encontramos seu CEP</b> <br/> Tente novamente\n                          </span>\n                        }\n                        // close\n                        color=\"warning\"\n                        icon=\"info_outline\"\n                      />\n                    )} \n\n                      <GridContainer justify=\"center\"> \n                        <GridItem xs={12} sm={12} md={8}>\n                          <CustomInput\n                            labelText=\"Sofreu alguma internação recentemente?\"\n                            labelError={errors.medicamento && errors.medicamento.message}                          \n                            error={errors.medicamento ? true : false}\n                            id=\"medicamento\"\n                            formControlProps={{\n                              fullWidth: true\n                            }}\n                            inputProps={{\n                              name: \"medicamento\",\n                              inputRef: register,\n                                             \n                            }}\n                          />  \n                        </GridItem>                   \n                        <GridItem xs={12} sm={12} md={8}>\n                          <CustomInput\n                            labelText=\"Se sim, qual?\"\n                            labelError={errors.qualMedicamento && errors.qualMedicamento.message}                          \n                            error={errors.qualMedicamento ? true : false}\n                            id=\"qualMedicamento\"\n                            formControlProps={{\n                              fullWidth: true\n                            }}\n                            inputProps={{\n                              name: \"qualMedicamento\",\n                              inputRef: register,\n                                                   \n                            }}\n                          />  \n                        </GridItem>                   \n                          \n                      </GridContainer>                 \n                  \n                    </CardBody>\n\n                  </Grow>\n                  \n                  \n                  <Grow \n                    in={activeForm === 12}\n                    style={{ transformOrigin: '0 0 0', display: activeForm === 12 ? \"block\" : \"none\" }}\n                    {...(activeForm === 12 ? { timeout: 1000 } : {})}\n                  >\n\n                    <CardBody>\n\n                    {error && ( \n                      <SnackbarContent\n                        message={\n                          <span>\n                            <b>Não encontramos seu CEP</b> <br/> Tente novamente\n                          </span>\n                        }\n                        // close\n                        color=\"warning\"\n                        icon=\"info_outline\"\n                      />\n                    )} \n\n                      <GridContainer justify=\"center\"> \n                        <GridItem xs={12} sm={12} md={8}>\n                          <CustomInput\n                            labelText=\"Possui o hábito de fumar?\"\n                            labelError={errors.fuma && errors.fuma.message}                          \n                            error={errors.fuma ? true : false}\n                            id=\"fuma\"\n                            formControlProps={{\n                              fullWidth: true\n                            }}\n                            inputProps={{\n                              name: \"fuma\",\n                              inputRef: register,\n                                             \n                            }}\n                          />  \n                        </GridItem>                                  \n                          \n                      </GridContainer>                 \n                  \n                    </CardBody>\n\n                  </Grow>\n                  \n                  <Grow \n                    in={activeForm === 13}\n                    style={{ transformOrigin: '0 0 0', display: activeForm === 13 ? \"block\" : \"none\" }}\n                    {...(activeForm === 13 ? { timeout: 1000 } : {})}\n                  >\n\n                    <CardBody>\n\n                    {error && ( \n                      <SnackbarContent\n                        message={\n                          <span>\n                            <b>Não encontramos seu CEP</b> <br/> Tente novamente\n                          </span>\n                        }\n                        // close\n                        color=\"warning\"\n                        icon=\"info_outline\"\n                      />\n                    )} \n\n                      <GridContainer justify=\"center\"> \n                        <GridItem xs={12} sm={12} md={8}>\n                          <CustomInput\n                            labelText=\"Faz acompnhamento com um(a) nutricionista?\"\n                            labelError={errors.nutricionista && errors.nutricionista.message}                          \n                            error={errors.nutricionista ? true : false}\n                            id=\"nutricionista\"\n                            formControlProps={{\n                              fullWidth: true\n                            }}\n                            inputProps={{\n                              name: \"nutricionista\",\n                              inputRef: register,\n                                             \n                            }}\n                          />  \n                        </GridItem>                                  \n                          \n                      </GridContainer>                 \n                  \n                    </CardBody>\n\n                  </Grow>\n\n                  <Grow \n                    in={activeForm === 14}\n                    style={{ transformOrigin: '0 0 0', display: activeForm === 14 ? \"block\" : \"none\" }}\n                    {...(activeForm === 14 ? { timeout: 1000 } : {})}\n                  >\n\n                    <CardBody>\n\n                    {error && ( \n                      <SnackbarContent\n                        message={\n                          <span>\n                            <b>Não encontramos seu CEP</b> <br/> Tente novamente\n                          </span>\n                        }\n                        // close\n                        color=\"warning\"\n                        icon=\"info_outline\"\n                      />\n                    )} \n\n                      <GridContainer justify=\"center\"> \n                        <GridItem xs={12} sm={12} md={8}>\n                          <CustomInput\n                            labelText=\"Faz acompnhamento com um(a) personal trainer?\"\n                            labelError={errors.personalTrainer && errors.personalTrainer.message}                          \n                            error={errors.personalTrainer ? true : false}\n                            id=\"personalTrainer\"\n                            formControlProps={{\n                              fullWidth: true\n                            }}\n                            inputProps={{\n                              name: \"personalTrainer\",\n                              inputRef: register,\n                                             \n                            }}\n                          />  \n                        </GridItem>                                  \n                          \n                      </GridContainer>                 \n                  \n                    </CardBody>\n\n                  </Grow>\n                  \n                  <Grow \n                    in={activeForm === 15}\n                    style={{ transformOrigin: '0 0 0', display: activeForm === 15 ? \"block\" : \"none\" }}\n                    {...(activeForm === 15 ? { timeout: 1000 } : {})}\n                  >\n\n                    <CardBody>\n\n                    {error && ( \n                      <SnackbarContent\n                        message={\n                          <span>\n                            <b>Não encontramos seu CEP</b> <br/> Tente novamente\n                          </span>\n                        }\n                        // close\n                        color=\"warning\"\n                        icon=\"info_outline\"\n                      />\n                    )} \n\n                      <GridContainer justify=\"center\"> \n                        <GridItem xs={12} sm={12} md={8}>\n                          <CustomInput\n                            labelText=\"Possui algum equipamento de treino? Se sim, informe-os por aqui\"\n                            labelError={errors.equipamentos && errors.equipamentos.message}                          \n                            error={errors.equipamentos ? true : false}\n                            id=\"equipamentos\"\n                            formControlProps={{\n                              fullWidth: true\n                            }}\n                            inputProps={{\n                              name: \"equipamentos\",\n                              inputRef: register,\n                                             \n                            }}\n                          />  \n                        </GridItem>                                  \n                          \n                      </GridContainer>                 \n                  \n                    </CardBody>\n\n                  </Grow>\n\n                  {/* <CardFooter className={classes.justifyContentBetween}>    */}\n                  <CardFooter>   \n                    <GridContainer justify=\"center\" style={{ margin: \"0\", width: \"100%\" }}> \n                      {/* <GridItem xs={12} sm={12} md={12}>\n                        <FormControl required error={errors.checkboxInput} component=\"fieldset\" className={classes.formControl}>                      \n                          <FormGroup>\n\n                            <FormControlLabel\n                              control={\n                                <Checkbox\n                                  tabIndex={-1}\n                                  onClick={() => handleToggle(1)}\n                                  checkedIcon={\n                                    <Check className={classes.checkedIcon} />\n                                  }\n                                  icon={<Check className={classes.uncheckedIcon} />}\n                                  classes={{\n                                    checked: classes.checked,\n                                    root: classes.checkRoot\n                                  }}\n                                  name=\"checkboxInput\"\n                                  inputRef={ register }                          \n                                />\n                              }                      \n                              classes={{ label: classes.label }}\n                              label=\"I'm not a robot\"\n                            />  \n                          </FormGroup>\n                          <FormHelperText>{errors.checkboxInput ? errors.checkboxInput.message : \"\"}</FormHelperText>\n                        </FormControl>                 \n                      </GridItem>  */}\n                      <GridItem xs={12} sm={12} md={12}>\n\n                        {/* <Button type=\"submit\" color=\"primary\" className={classes.pullRight}>\n                          Send Message\n                        </Button> */}\n                        \n\n                        {/* <Button color=\"primary\" disabled className={classes.pullRight} onClick={handleNext}> */}\n                        <Button color=\"primary\" fullWidth onClick={handleNext} style={{ display: isDisableNext ? \"none\" : \"block\" }}>\n                          Próximo\n                        </Button>\n                                                \n                        \n                      </GridItem> \n                      <GridItem xs={12} sm={12} md={12}>\n\n                        {/* <Button type=\"submit\" color=\"primary\" className={classes.pullRight}>\n                          Send Message\n                        </Button> */}\n                        \n                        \n                        {/* <Button color=\"primary\" className={classes.pullRight} onClick={ () => setIsAluno(!isAluno) }> */}\n                        {/* <Button color=\"primary\" className={classes.pullRight} onClick={handleBack}> */}\n                        <Button simple color=\"primary\" fullWidth onClick={handleBack}>\n                          Voltar\n                        </Button>\n                        \n                      </GridItem> \n                    </GridContainer>  \n                    \n                  </CardFooter>\n                </form>\n              </Card>\n              </Grow>\n            </GridItem>\n          </GridContainer>\n        </div>\n      </div>\n      {/* Contact us 1 END */}\n    </div>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}