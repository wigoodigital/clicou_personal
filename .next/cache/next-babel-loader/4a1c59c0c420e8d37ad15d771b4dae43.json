{"ast":null,"code":"var __jsx = React.createElement;\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nimport React from \"react\"; // @material-ui/core components\n\nimport { makeStyles, withStyles } from \"@material-ui/core/styles\";\nimport Slide from \"@material-ui/core/Slide\";\nimport Dialog from \"@material-ui/core/Dialog\";\nimport DialogTitle from \"@material-ui/core/DialogTitle\";\nimport DialogContent from \"@material-ui/core/DialogContent\";\nimport DialogActions from \"@material-ui/core/DialogActions\"; // @material-ui/icons\n\nimport Close from \"@material-ui/icons/Close\";\nimport CheckCircle from \"@material-ui/icons/CheckCircle\";\nimport FitnessCenterIcon from '@material-ui/icons/FitnessCenter';\nimport CardGiftcardIcon from '@material-ui/icons/CardGiftcard';\nimport Check from \"@material-ui/icons/Check\";\nimport ErrorIcon from '@material-ui/icons/Error'; // core components\n\nimport Button from \"components/CustomButtons/Button.js\";\nimport Success from \"components/Typography/Success.js\";\nimport modalStyle from \"assets/jss/nextjs-material-kit-pro/modalStyle.js\";\nconst Transition = React.forwardRef(function Transition(props, ref) {\n  return __jsx(Slide, _extends({\n    direction: \"down\",\n    ref: ref\n  }, props));\n}); // const useStyles = makeStyles(modalStyle);\n// const useStyles = makeStyles(\n//   (theme) => ({\n//     ...modalStyle(theme),\n//     modalTeste: {\n//       color: \"#000\"\n//     }\n//   }),\n//   { withTheme: true },\n// )\n\nconst useStyles = makeStyles(theme => _objectSpread({}, modalStyle(theme), {\n  modalIcon: {\n    color: \"#425CC7\",\n    fontSize: \"6.1875rem\"\n  },\n  modalFooter: {\n    margin: 0,\n    padding: \"15px\",\n    textAlign: \"center\",\n    display: \"block\",\n    paddingTop: 0\n  }\n}));\nexport default function ModalOffer(props) {\n  // const classes = withStyles(\n  //   (theme) => ({\n  //     ...modalStyle(theme),\n  //     modalTeste: {\n  //       color: \"#000\"\n  //     }\n  //   }),\n  //   { withTheme: true },\n  // )\n  const classes = useStyles();\n  return __jsx(\"div\", null, __jsx(Dialog, {\n    classes: {\n      root: classes.modalRoot,\n      paper: classes.modal\n    },\n    open: props.showModal,\n    TransitionComponent: Transition,\n    keepMounted: true,\n    onClose: () => props.setShowModal(false),\n    \"aria-labelledby\": \"classic-modal-slide-title\",\n    \"aria-describedby\": \"classic-modal-slide-description\"\n  }, __jsx(DialogTitle, {\n    id: \"classic-modal-slide-title\",\n    disableTypography: true,\n    className: classes.modalHeader\n  }, __jsx(Button, {\n    simple: true,\n    className: classes.modalCloseButton,\n    key: \"close\",\n    \"aria-label\": \"Close\",\n    onClick: () => props.setShowModal(false)\n  }, \" \", __jsx(Close, {\n    className: classes.modalClose\n  }))), __jsx(DialogContent, {\n    id: \"classic-modal-slide-description\",\n    className: classes.modalBody\n  }, __jsx(\"div\", {\n    style: {\n      textAlign: \"center\"\n    }\n  }, __jsx(ErrorIcon, {\n    color: \"primary\",\n    className: classes.modalIcon\n  }), __jsx(\"br\", null), __jsx(\"div\", {\n    style: {\n      maxWidth: \"240px\",\n      margin: \"0 auto\"\n    }\n  }, __jsx(\"h4\", {\n    className: classes.modalTitle\n  }, props.messageReturn.msg)), __jsx(\"br\", null), __jsx(\"p\", null, \"Erro \", __jsx(\"b\", null, props.messageReturn.code)))), __jsx(DialogActions, {\n    className: classes.modalFooter\n  }, __jsx(Button, {\n    round: true,\n    onClick: () => props.setShowModal(false),\n    color: \"primary\"\n  }, \"Fechar\"))));\n}","map":null,"metadata":{},"sourceType":"module"}