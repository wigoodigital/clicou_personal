{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\nimport _toConsumableArray from \"@babel/runtime/helpers/esm/toConsumableArray\";\nimport _slicedToArray from \"@babel/runtime/helpers/esm/slicedToArray\";\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\nvar _jsxFileName = \"/Users/gabrieldossantos/Google Drive (webmaster@wigoo.com.br)/Wigoo Desenvolvimento/justfit.com.br/clicoupersonal.com.br/checkout/pages-sections/checkout/SectionIdentification.js\";\nvar __jsx = React.createElement;\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport React from \"react\";\nimport { useEffect, useState } from \"react\";\nimport axios from 'axios'; // react components used to create a google map\n\nimport { withScriptjs, withGoogleMap, GoogleMap, Marker } from \"react-google-maps\"; // @material-ui/core components\n\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Checkbox from \"@material-ui/core/Checkbox\";\nimport FormControlLabel from \"@material-ui/core/FormControlLabel\";\nimport InputAdornment from \"@material-ui/core/InputAdornment\"; // @material-ui/icons\n\nimport PinDrop from \"@material-ui/icons/PinDrop\";\nimport Phone from \"@material-ui/icons/Phone\";\nimport Check from \"@material-ui/icons/Check\";\nimport Email from \"@material-ui/icons/Email\";\nimport EventIcon from '@material-ui/icons/Event';\nimport Favorite from \"@material-ui/icons/Favorite\";\nimport AssignmentInd from \"@material-ui/icons/AssignmentInd\"; // core components\n\nimport CircularProgress from '@material-ui/core/CircularProgress';\nimport GridContainer from \"components/Grid/GridContainer.js\";\nimport GridItem from \"components/Grid/GridItem.js\";\nimport InfoArea from \"components/InfoArea/InfoArea.js\";\nimport Card from \"components/Card/Card.js\";\nimport CardHeader from \"components/Card/CardHeader.js\";\nimport CardBody from \"components/Card/CardBody.js\";\nimport CardFooter from \"components/Card/CardFooter.js\";\nimport CustomInput from \"components/CustomInput/CustomInput.js\";\nimport Button from \"components/CustomButtons/Button.js\";\nimport SnackbarContent from \"components/Snackbar/SnackbarContent.js\";\nimport FormHelperText from '@material-ui/core/FormHelperText';\nimport FormControl from '@material-ui/core/FormControl';\nimport FormGroup from '@material-ui/core/FormGroup';\nimport Grow from '@material-ui/core/Grow';\nimport FieldsCpf from \"pages-sections/checkout/identification/FieldsCpf.js\";\nimport FieldsPersonalData from \"pages-sections/checkout/identification/FieldsPersonalData.js\";\nimport InputMask from \"react-input-mask\";\nimport MaskedInput from 'react-text-mask';\nimport PropTypes, { string } from 'prop-types';\nimport { useForm } from \"react-hook-form\";\nimport { yupResolver } from '@hookform/resolvers';\nimport * as yup from \"yup\";\nimport { setLocale } from 'yup';\nimport TagManager from 'react-gtm-module';\nimport checkoutStyle from \"assets/jss/nextjs-material-kit-pro/pages/checkoutSections/checkoutStyle.js\";\nimport city from \"assets/img/examples/city.jpg\";\nvar useStyles = makeStyles(checkoutStyle);\n\nfunction TextMaskCustom(props) {\n  var inputRef = props.inputRef,\n      other = _objectWithoutProperties(props, [\"inputRef\"]);\n\n  return __jsx(MaskedInput, _extends({}, other, {\n    ref: function ref(_ref2) {\n      inputRef(_ref2 ? _ref2.inputElement : null);\n    },\n    mask: [/[0-9]/, /[0-9]/, /[0-9]/, '.', /[0-9]/, /[0-9]/, /[0-9]/, '.', /[0-9]/, /[0-9]/, /[0-9]/, '-', /[0-9]/, /[0-9]/],\n    placeholderChar: \"\\u2007\",\n    guide: false,\n    showMask: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 5\n    }\n  }));\n}\n\nTextMaskCustom.propTypes = {\n  inputRef: PropTypes.func.isRequired\n};\n\nfunction PhoneMask(props) {\n  var inputRef = props.inputRef,\n      other = _objectWithoutProperties(props, [\"inputRef\"]);\n\n  return __jsx(MaskedInput, _extends({}, other, {\n    ref: function ref(_ref3) {\n      inputRef(_ref3 ? _ref3.inputElement : null);\n    },\n    mask: ['(', /[1-9]/, /[0-9]/, ')', ' ', /[1-9]/, /[0-9]/, /[0-9]/, /[0-9]/, /[0-9]/, '-', /[0-9]/, /[0-9]/, /[0-9]/, /[0-9]/],\n    placeholderChar: \"\\u2000\",\n    guide: false,\n    showMask: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 5\n    }\n  }));\n}\n\nPhoneMask.propTypes = {\n  inputRef: PropTypes.func.isRequired\n};\n\nfunction DateMask(props) {\n  var inputRef = props.inputRef,\n      other = _objectWithoutProperties(props, [\"inputRef\"]);\n\n  return __jsx(MaskedInput, _extends({}, other, {\n    ref: function ref(_ref4) {\n      inputRef(_ref4 ? _ref4.inputElement : null);\n    } // mask={['(', /[1-9]/, /\\d/, /\\d/, ')', ' ', /\\d/, /\\d/, /\\d/, '-', /\\d/, /\\d/, /\\d/, /\\d/]}\n    ,\n    mask: [/\\d/, /\\d/, '/', /\\d/, /\\d/, '/', /\\d/, /\\d/, /\\d/, /\\d/],\n    placeholderChar: \"\\u2000\",\n    guide: false,\n    showMask: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 111,\n      columnNumber: 5\n    }\n  }));\n}\n\nDateMask.propTypes = {\n  inputRef: PropTypes.func.isRequired\n};\n\nfunction CEPMask(props) {\n  var inputRef = props.inputRef,\n      other = _objectWithoutProperties(props, [\"inputRef\"]);\n\n  return __jsx(MaskedInput, _extends({}, other, {\n    ref: function ref(_ref5) {\n      inputRef(_ref5 ? _ref5.inputElement : null);\n    } // mask={['(', /[1-9]/, /\\d/, /\\d/, ')', ' ', /\\d/, /\\d/, /\\d/, '-', /\\d/, /\\d/, /\\d/, /\\d/]}\n    ,\n    mask: [/[0-9]/, /[0-9]/, /[0-9]/, /[0-9]/, /[0-9]/, '-', /[0-9]/, /[0-9]/, /[0-9]/],\n    placeholderChar: \"\\u2000\",\n    guide: false,\n    showMask: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 133,\n      columnNumber: 5\n    }\n  }));\n}\n\nCEPMask.propTypes = {\n  inputRef: PropTypes.func.isRequired\n};\nsetLocale({\n  mixed: {\n    notType: function notType(_ref) {\n      switch (_ref.type) {\n        case 'number':\n          return 'deve ser um número';\n\n        case 'string':\n          return 'deve ser um texto';\n\n        default:\n          return 'formato errado';\n      }\n    },\n    \"default\": 'é inválido',\n    required: 'Desculpe, este campo é obrigatório',\n    oneOf: 'deve ser um dos seguintes valores: ${values}',\n    notOneOf: 'não pode ser um dos seguintes valores: ${values}'\n  },\n  string: {\n    length: 'deve ter exatamente ${length} caracteres',\n    min: 'deve ter pelo menos ${min} caracteres',\n    max: 'deve ter no máximo ${max} caracteres',\n    email: 'Por favor, informe um e-mail inválido',\n    url: 'deve ter um formato de URL válida',\n    trim: 'não deve conter espaços no início ou no fim.',\n    lowercase: 'deve estar em maiúsculo',\n    uppercase: 'deve estar em minúsculo'\n  },\n  number: {\n    min: 'deve ser no mínimo ${min}',\n    max: 'deve ser no máximo ${max}',\n    lessThan: 'deve ser menor que ${less}',\n    moreThan: 'deve ser maior que ${more}',\n    notEqual: 'não pode ser igual à ${notEqual}',\n    positive: 'deve ser um número posítivo',\n    negative: 'deve ser um número negativo',\n    integer: 'deve ser um número inteiro'\n  },\n  date: {\n    min: 'deve ser maior que a data ${min}',\n    max: 'deve ser menor que a data ${max}'\n  },\n  array: {\n    min: 'deve ter no mínimo ${min} itens',\n    max: 'deve ter no máximo ${max} itens'\n  }\n});\nvar regexCPF = /([0-9]{2}[\\.]?[0-9]{3}[\\.]?[0-9]{3}[\\/]?[0-9]{4}[-]?[0-9]{2})|([0-9]{3}[\\.]?[0-9]{3}[\\.]?[0-9]{3}[-]?[0-9]{2})/gm;\n\nfunction cpfValidate(cpf) {\n  console.log(\"Validatring\", cpf);\n  return cpf.length > 10;\n}\n\nfunction isValidCPF(cpf) {\n  if (typeof cpf !== \"string\") return false;\n  cpf = cpf.replace(/[\\s.-]*/igm, '');\n\n  if (!cpf || cpf.length != 11 || cpf == \"00000000000\" || cpf == \"11111111111\" || cpf == \"22222222222\" || cpf == \"33333333333\" || cpf == \"44444444444\" || cpf == \"55555555555\" || cpf == \"66666666666\" || cpf == \"77777777777\" || cpf == \"88888888888\" || cpf == \"99999999999\") {\n    return false;\n  }\n\n  var soma = 0;\n  var resto;\n\n  for (var i = 1; i <= 9; i++) {\n    soma = soma + parseInt(cpf.substring(i - 1, i)) * (11 - i);\n  }\n\n  resto = soma * 10 % 11;\n  if (resto == 10 || resto == 11) resto = 0;\n  if (resto != parseInt(cpf.substring(9, 10))) return false;\n  soma = 0;\n\n  for (var i = 1; i <= 10; i++) {\n    soma = soma + parseInt(cpf.substring(i - 1, i)) * (12 - i);\n  }\n\n  resto = soma * 10 % 11;\n  if (resto == 10 || resto == 11) resto = 0;\n  if (resto != parseInt(cpf.substring(10, 11))) return false;\n  return true;\n}\n\nfunction isValidPhone(phone) {\n  return /^(?:(?:\\+|00)?(55)\\s?)?(?:\\(?([1-9][0-9])\\)?\\s?)?(?:((?:9\\d|[2-9])\\d{3})\\-?(\\d{4}))$/.test(phone);\n}\n\nfunction isValidDate(dateString) {\n  // return /^((((0?[1-9]|[12]\\d|3[01])[\\.\\-\\/](0?[13578]|1[02])      [\\.\\-\\/]((1[6-9]|[2-9]\\d)?\\d{2}))|((0?[1-9]|[12]\\d|30)[\\.\\-\\/](0?[13456789]|1[012])[\\.\\-\\/]((1[6-9]|[2-9]\\d)?\\d{2}))|((0?[1-9]|1\\d|2[0-8])[\\.\\-\\/]0?2[\\.\\-\\/]((1[6-9]|[2-9]\\d)?\\d{2}))|(29[\\.\\-\\/]0?2[\\.\\-\\/]((1[6-9]|[2-9]\\d)?(0[48]|[2468][048]|[13579][26])|((16|[2468][048]|[3579][26])00)|00)))|(((0[1-9]|[12]\\d|3[01])(0[13578]|1[02])((1[6-9]|[2-9]\\d)?\\d{2}))|((0[1-9]|[12]\\d|30)(0[13456789]|1[012])((1[6-9]|[2-9]\\d)?\\d{2}))|((0[1-9]|1\\d|2[0-8])02((1[6-9]|[2-9]\\d)?\\d{2}))|(2902((1[6-9]|[2-9]\\d)?(0[48]|[2468][048]|[13579][26])|((16|[2468][048]|[3579][26])00)|00))))$/.test(date);\n  // First check for the pattern\n  if (!/^\\d{1,2}\\/\\d{1,2}\\/\\d{4}$/.test(dateString)) return false; // Parse the date parts to integers\n\n  var parts = dateString.split(\"/\");\n  var day = parseInt(parts[0], 10);\n  var month = parseInt(parts[1], 10);\n  var year = parseInt(parts[2], 10); // Check the ranges of month and year\n\n  if (year < 1000 || year > 3000 || month == 0 || month > 12) return false;\n  var monthLength = [31, 28, 31, 30, 31, 30, 31, 31, 30, 31, 30, 31]; // Adjust for leap years\n\n  if (year % 400 == 0 || year % 100 != 0 && year % 4 == 0) monthLength[1] = 29; // Check the range of the day\n\n  return day > 0 && day <= monthLength[month - 1];\n}\n\nfunction isMaiorIdade(d1) {\n  var parts = d1.split(\"/\");\n  var day = parseInt(parts[0], 10);\n  var month = parseInt(parts[1], 10);\n  var year = parseInt(parts[2], 10); // d1 = new Date(month + \"/\" + day + \"/\" + year);\n\n  d1 = new Date(year, month - 1, day);\n  var d2 = new Date();\n  var diff = d2.getTime() - d1.getTime();\n  var idade = Math.floor(diff / (1000 * 60 * 60 * 24 * 365.25));\n\n  if (idade >= 18) {\n    return true;\n  } else {\n    return false;\n  }\n}\n\nyup.addMethod(yup.string, \"cpf\", function (message) {\n  // return yup.mixed().test(\"cpf\", message || \"número de CPF inválido\", value => cpfValidate(value));\n  return yup.mixed().test(\"cpf\", message || \"número de CPF inválido\", function (value) {\n    return isValidCPF(value);\n  });\n});\nyup.addMethod(yup.string, \"phone\", function (message) {\n  return yup.mixed().test(\"phone\", message || \"número de celular inválido\", function (value) {\n    return isValidPhone(value);\n  });\n});\nyup.addMethod(yup.string, \"dateNasc\", function (message) {\n  return yup.mixed().test(\"dateNasc\", message || \"Por favor, digite uma data válida\", function (value) {\n    return isValidDate(value);\n  });\n});\nvar SignupSchema = yup.object().shape({\n  cpf: yup.string().cpf(\"Por favor, informe um CPF válido\"),\n  nome: yup.string().required(),\n  email: yup.string().required().email(),\n  confirmEmail: yup.string().oneOf([yup.ref('email'), null], \"Email divergente ao inserido acima\"),\n  telefone: yup.string().phone(\"Por favor, informe um número de celular válido\"),\n  confirmTelefone: yup.string().oneOf([yup.ref('telefone'), null], \"Celular divergente ao inserido acima\"),\n  dataNascimento: yup.string().dateNasc().test('maiorIdade', 'Para continuar, você deve ter no mínimo 18 anos', function (value) {\n    return isMaiorIdade(value);\n  }),\n  // dataNascimento: yup\n  //   .string()\n  //   .maiorIdade(),   \n  optinSms: yup.bool().oneOf([true], 'Esta opção é obrigatória'),\n  optinEmail: yup.bool().oneOf([true], 'Esta opção é obrigatória'),\n  optinTelegram: yup.bool().oneOf([true], 'Esta opção é obrigatória'),\n  aceiteTermos: yup.bool().oneOf([true], 'O aceite dos termos é obrigatório'),\n  cep: yup.string().required(),\n  endereco: yup.string().required(),\n  numero: yup.number().required(),\n  complemento: yup.string(),\n  bairro: yup.string().required(),\n  estado: yup.string().required(),\n  cidade: yup.string().required() // receberContatoEmail: yup.boolean().oneOf([true],'aceite obrigatório'),\n  // receberContatoSMS: yup.boolean().oneOf([true],'aceite obrigatório'),\n  // receberContatoWhatsApp: yup.boolean().oneOf([true],'aceite obrigatório')\n\n});\nexport default function SectionIdentification(props) {\n  // const { register, errors, handleSubmit} = useForm({\n  //   validationSchema: SignupSchema\n  // });\n  var _useForm = useForm({\n    resolver: yupResolver(SignupSchema),\n    mode: \"onBlur\" // mode: \"onChange\"\n\n  }),\n      register = _useForm.register,\n      trigger = _useForm.trigger,\n      handleSubmit = _useForm.handleSubmit,\n      getValues = _useForm.getValues,\n      errors = _useForm.errors;\n\n  var onSubmit = function onSubmit(data) {\n    console.log(data); // alert(JSON.stringify(data, null));\n  };\n\n  useEffect(function () {\n    // history.pushState({}, null, \"/checkout/identification\");\n    TagManager.dataLayer({\n      dataLayer: {\n        event: \"identificationView\",\n        userId: '001',\n        userProject: 'project',\n        page: 'home'\n      }\n    });\n    TagManager.dataLayer({\n      dataLayer: {\n        'event': 'checkout',\n        'ecommerce': {\n          'checkout': {\n            'actionField': {\n              'step': 1\n            },\n            'products': [{\n              'name': 'Plano Anual Start',\n              'id': '1',\n              'price': '478.80',\n              'brand': 'Clicou Personal',\n              'category': 'Atendimento online',\n              'quantity': 1\n            }]\n          }\n        }\n      }\n    });\n  }, []);\n\n  var _React$useState = React.useState([]),\n      _React$useState2 = _slicedToArray(_React$useState, 2),\n      checked = _React$useState2[0],\n      setChecked = _React$useState2[1];\n\n  var handleToggle = function handleToggle(value) {\n    var currentIndex = checked.indexOf(value);\n\n    var newChecked = _toConsumableArray(checked);\n\n    if (currentIndex === -1) {\n      newChecked.push(value);\n    } else {\n      newChecked.splice(currentIndex, 1);\n    }\n\n    setChecked(newChecked);\n  };\n\n  var _React$useState3 = React.useState(false),\n      _React$useState4 = _slicedToArray(_React$useState3, 2),\n      isAluno = _React$useState4[0],\n      setIsAluno = _React$useState4[1];\n\n  var _React$useState5 = React.useState(0),\n      _React$useState6 = _slicedToArray(_React$useState5, 2),\n      activeForm = _React$useState6[0],\n      setActiveForm = _React$useState6[1];\n\n  var _React$useState7 = React.useState(\"cpf\"),\n      _React$useState8 = _slicedToArray(_React$useState7, 2),\n      activeField = _React$useState8[0],\n      setActiveField = _React$useState8[1];\n\n  var _React$useState9 = React.useState(false),\n      _React$useState10 = _slicedToArray(_React$useState9, 2),\n      isDisableNext = _React$useState10[0],\n      setIsDisableNext = _React$useState10[1];\n\n  var _useState = useState(false),\n      error = _useState[0],\n      setError = _useState[1];\n\n  var handleNext = function handleNext(type) {\n    var result, identificationForm, dataNascimentoSplit, day, month, year, d1, d2, diff, idadeUser;\n    return _regeneratorRuntime.async(function handleNext$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            setIsDisableNext(true);\n            console.log(activeField);\n            _context.next = 4;\n            return _regeneratorRuntime.awrap(trigger(activeField));\n\n          case 4:\n            result = _context.sent;\n            console.log(result);\n            identificationForm = getValues();\n\n            if (!result) {\n              _context.next = 15;\n              break;\n            }\n\n            console.log(getValues());\n\n            if (!(activeForm == 0)) {\n              _context.next = 14;\n              break;\n            }\n\n            _context.next = 12;\n            return _regeneratorRuntime.awrap(fetchVerifyCPF(identificationForm.cpf));\n\n          case 12:\n            setIsDisableNext(false);\n            return _context.abrupt(\"return\");\n\n          case 14:\n            if (activeForm == 2) {\n              dataNascimentoSplit = identificationForm.dataNascimento.split(\"/\");\n              day = parseInt(dataNascimentoSplit[0], 10);\n              month = parseInt(dataNascimentoSplit[1], 10);\n              year = parseInt(dataNascimentoSplit[2], 10);\n              d1 = new Date(year, month - 1, day);\n              d2 = new Date();\n              diff = d2.getTime() - d1.getTime();\n              idadeUser = Math.floor(diff / (1000 * 60 * 60 * 24 * 365.25));\n              props.setDataSale(function (prevDataSale) {\n                return {\n                  customer: _objectSpread({}, prevDataSale.customer, {\n                    name: identificationForm.nome.toUpperCase(),\n                    birthDate: dataNascimentoSplit[2] + \"-\" + dataNascimentoSplit[1] + \"-\" + dataNascimentoSplit[0],\n                    email: identificationForm.email,\n                    document: identificationForm.cpf.replace(/[^\\d]+/g, ''),\n                    phones: [{\n                      type: \"cellphone\",\n                      number: identificationForm.telefone\n                    }],\n                    address: {\n                      address: identificationForm.endereco,\n                      number: identificationForm.numero,\n                      complement: identificationForm.complemento,\n                      district: identificationForm.bairro,\n                      city: removeAcento(identificationForm.cidade),\n                      state: identificationForm.estado,\n                      postalCode: identificationForm.cep\n                    },\n                    financeResponsible: {\n                      name: identificationForm.nome,\n                      document: identificationForm.cpf,\n                      email: identificationForm.email,\n                      phone: identificationForm.telefone,\n                      active: true\n                    },\n                    anamnese: _objectSpread({}, prevDataSale.customer.anamnese, {\n                      idade: idadeUser,\n                      optinSms: identificationForm.optinSms,\n                      optinEmail: identificationForm.optinEmail,\n                      optinTelegram: identificationForm.optinTelegram,\n                      aceiteTermos: identificationForm.aceiteTermos\n                    })\n                  })\n                };\n              });\n              props.setStepCheckout(1);\n            } else {\n              setActiveForm(function (prevActiveStep) {\n                return prevActiveStep + 1;\n              });\n              handleFieldActive(activeForm + 1);\n            }\n\n          case 15:\n            setIsDisableNext(false);\n\n          case 16:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, null, null, null, Promise);\n  };\n\n  var handleBack = function handleBack(type) {\n    if (activeForm !== 0) {\n      setActiveForm(function (prevActiveStep) {\n        return prevActiveStep - 1;\n      });\n      handleFieldActive(activeForm - 1);\n    }\n  };\n\n  var handleFocus = function handleFocus(event) {\n    try {\n      if (event.target.value == \"\") {\n        event.target.selectionStart = 0;\n        event.target.selectionEnd = 0;\n      } else {\n        event.target.select();\n      }\n    } catch (error) {\n      console.log(error);\n    }\n  };\n\n  var handleBlurEmail = function handleBlurEmail(event) {\n    setIsDisableNext(true);\n    console.log(event);\n\n    try {// // const result = await trigger(event.target.name);\n      // if(result){\n      //   await fetchVerifyEmail(event.target.value);\n      //   setIsDisableNext(false);\n      //   return\n      // }\n    } catch (error) {\n      console.log(error);\n    }\n\n    setIsDisableNext(false);\n  };\n\n  var handleFieldActive = function handleFieldActive(step) {\n    console.log(\"handleFieldActive\");\n\n    switch (step) {\n      case 0:\n        // setActiveField(\"first\");\n        setActiveField(\"cpf\");\n        break;\n\n      case 1:\n        setActiveField([\"nome\", \"email\", \"confirmEmail\", \"telefone\", \"confirmTelefone\", \"dataNascimento\", \"optinSms\", \"optinEmail\", \"optinTelegram\", \"aceiteTermos\"]);\n        break;\n\n      case 2:\n        setActiveField([\"cep\", \"endereco\", \"numero\", \"complemento\", \"bairro\", \"estado\", \"cidade\"]);\n        break;\n\n      default:\n        setActiveField(\"cpf\");\n        break;\n    }\n\n    console.log(step); // console.log(activeField);\n  };\n\n  var removeAcento = function removeAcento(text) {\n    text = text.toLowerCase();\n    text = text.replace(new RegExp('[ÁÀÂÃ]', 'gi'), 'a');\n    text = text.replace(new RegExp('[ÉÈÊ]', 'gi'), 'e');\n    text = text.replace(new RegExp('[ÍÌÎ]', 'gi'), 'i');\n    text = text.replace(new RegExp('[ÓÒÔÕ]', 'gi'), 'o');\n    text = text.replace(new RegExp('[ÚÙÛ]', 'gi'), 'u');\n    text = text.replace(new RegExp('[Ç]', 'gi'), 'c');\n    text = text.toUpperCase();\n    return text;\n  };\n\n  var _React$useState11 = React.useState({\n    cpf: \"\",\n    nome: \"\",\n    email: \"\",\n    telefone: \"\",\n    dataNascimento: \"\",\n    cep: \"\",\n    endereco: \"\",\n    numero: \"\",\n    complemento: \"\",\n    bairro: \"\",\n    estado: \"\",\n    cidade: \"\",\n    receberContatoEmail: \"\",\n    receberContatoSMS: \"\",\n    receberContatoWhatsApp: \"\"\n  }),\n      _React$useState12 = _slicedToArray(_React$useState11, 2),\n      identification = _React$useState12[0],\n      setIdentification = _React$useState12[1];\n\n  var fetchData = function fetchData(event) {\n    var cep;\n    return _regeneratorRuntime.async(function fetchData$(_context2) {\n      while (1) {\n        switch (_context2.prev = _context2.next) {\n          case 0:\n            setError(false);\n            cep = event.target.value;\n            setIdentification(function (prevIdentification) {\n              return _objectSpread({}, prevIdentification, {\n                endereco: \"\",\n                bairro: \"\",\n                estado: \"\",\n                cidade: \"\"\n              });\n            });\n            _context2.next = 5;\n            return _regeneratorRuntime.awrap(axios.get(\"https://viacep.com.br/ws/\".concat(cep, \"/json/\")).then(function (res) {\n              if (res.data.error) {\n                setError(true);\n                return;\n              }\n\n              setIdentification(function (prevIdentification) {\n                return _objectSpread({}, prevIdentification, {\n                  cep: res.data.cep,\n                  endereco: res.data.logradouro,\n                  bairro: res.data.bairro,\n                  estado: res.data.uf,\n                  cidade: res.data.localidade\n                });\n              }); // console.log(res.data.cliente);     \n            })[\"catch\"](function (error) {\n              console.log(error);\n              setError(true);\n            })[\"finally\"](function () {// setLoading(false);\n            }));\n\n          case 5:\n          case \"end\":\n            return _context2.stop();\n        }\n      }\n    }, null, null, null, Promise);\n  };\n\n  var fetchVerifyCPF = function fetchVerifyCPF(cpf) {\n    return _regeneratorRuntime.async(function fetchVerifyCPF$(_context3) {\n      while (1) {\n        switch (_context3.prev = _context3.next) {\n          case 0:\n            _context3.next = 2;\n            return _regeneratorRuntime.awrap(axios.post(\"http://admin.justfit.com.br/app.justfit/api/iAPIClicou/ValidarCPF?cpf=\".concat(cpf)).then(function (res) {\n              try {\n                if (res.data.code == \"0\") {\n                  setActiveForm(function (prevActiveStep) {\n                    return prevActiveStep + 1;\n                  });\n                  handleFieldActive(activeForm + 1);\n                  return;\n                } else {\n                  showError(res.data.code, res.data.msg);\n                }\n              } catch (error) {\n                console.log(error);\n                showError(null, null);\n              }\n\n              console.log(res.data);\n            })[\"catch\"](function (error) {\n              console.log(error);\n              setError(true);\n              showError(null, null);\n            })[\"finally\"](function () {// setLoading(false);\n            }));\n\n          case 2:\n          case \"end\":\n            return _context3.stop();\n        }\n      }\n    }, null, null, null, Promise);\n  };\n\n  var fetchVerifyEmail = function fetchVerifyEmail(email) {\n    return _regeneratorRuntime.async(function fetchVerifyEmail$(_context4) {\n      while (1) {\n        switch (_context4.prev = _context4.next) {\n          case 0:\n            _context4.next = 2;\n            return _regeneratorRuntime.awrap(axios.post(\"http://admin.justfit.com.br/app.justfit/api/iAPIClicou/ValidarEmail?email=\".concat(email)).then(function (res) {\n              try {\n                if (res.data.code == \"0\") {\n                  setActiveForm(function (prevActiveStep) {\n                    return prevActiveStep + 1;\n                  });\n                  handleFieldActive(activeForm + 1);\n                  return;\n                } else {\n                  showError(res.data.code, res.data.msg);\n                }\n              } catch (error) {\n                console.log(error);\n                showError(null, null);\n              }\n\n              console.log(res.data);\n            })[\"catch\"](function (error) {\n              console.log(error);\n              setError(true);\n              showError(null, null);\n            })[\"finally\"](function () {// setLoading(false);\n            }));\n\n          case 2:\n          case \"end\":\n            return _context4.stop();\n        }\n      }\n    }, null, null, null, Promise);\n  };\n\n  var showError = function showError(code, msg) {\n    if (code == null) {\n      props.setMessageReturn(function (prev) {\n        return {\n          code: \"000\",\n          msg: \"Erro ao enviar dados. Tente mais tarde\"\n        };\n      });\n      props.setShowModal(true);\n    } else {\n      props.setMessageReturn(function (prev) {\n        return {\n          code: code,\n          msg: msg\n        };\n      });\n      props.setShowModal(true);\n    }\n  };\n\n  var classes = useStyles();\n  return __jsx(\"div\", {\n    className: \"cd-section\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 763,\n      columnNumber: 5\n    }\n  }, __jsx(\"div\", {\n    className: classes.contacts + \" \" + classes.section // style={{ backgroundImage: `url(${city})` }}\n    // style={{ backgroundColor: \"#ffffff\" }}\n    ,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 765,\n      columnNumber: 7\n    }\n  }, __jsx(\"div\", {\n    className: classes.container,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 770,\n      columnNumber: 9\n    }\n  }, __jsx(GridContainer, {\n    justify: \"center\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 771,\n      columnNumber: 11\n    }\n  }, __jsx(Grow, _extends({\n    \"in\": activeForm === 0 || activeForm === 2,\n    style: {\n      transformOrigin: '0 0 0',\n      display: activeForm === 0 || activeForm === 2 ? \"block\" : \"none\"\n    }\n  }, activeForm === 0 || activeForm === 2 ? {\n    timeout: 1000\n  } : {}, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 773,\n      columnNumber: 13\n    }\n  }), __jsx(GridItem, {\n    xs: 12,\n    sm: 12,\n    md: 5,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 779,\n      columnNumber: 15\n    }\n  }, __jsx(Grow, _extends({\n    \"in\": true,\n    style: {\n      transformOrigin: '0 0 0'\n    }\n  }, true ? {\n    timeout: 1000\n  } : {}, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 780,\n      columnNumber: 17\n    }\n  }), __jsx(Card, {\n    className: classes.card1,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 785,\n      columnNumber: 19\n    }\n  }, __jsx(\"form\", {\n    onSubmit: handleSubmit(onSubmit),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 786,\n      columnNumber: 19\n    }\n  }, __jsx(CardHeader, {\n    contact: true,\n    color: \"primary\",\n    className: classes.textCenter,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 787,\n      columnNumber: 21\n    }\n  }, __jsx(\"h4\", {\n    className: classes.cardTitle,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 792,\n      columnNumber: 23\n    }\n  }, \"Identifica\\xE7\\xE3o\")), __jsx(Grow, _extends({\n    \"in\": activeForm === 0,\n    style: {\n      transformOrigin: '0 0 0',\n      display: activeForm === 0 ? \"block\" : \"none\"\n    }\n  }, activeForm === 0 ? {\n    timeout: 1000\n  } : {}, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 795,\n      columnNumber: 21\n    }\n  }), __jsx(CardBody, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 801,\n      columnNumber: 23\n    }\n  }, __jsx(GridContainer, {\n    justify: \"center\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 802,\n      columnNumber: 25\n    }\n  }, __jsx(GridItem, {\n    xs: 12,\n    sm: 8,\n    md: 8,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 803,\n      columnNumber: 27\n    }\n  }, __jsx(CustomInput, {\n    labelText: \"CPF\",\n    labelError: errors.cpf && errors.cpf.message,\n    id: \"cpf\",\n    error: errors.cpf ? true : false,\n    formControlProps: {\n      fullWidth: true\n    },\n    inputProps: {\n      type: \"tel\",\n      name: \"cpf\",\n      inputRef: register,\n      onClick: handleFocus,\n      onBlur: handleFocus,\n      inputComponent: TextMaskCustom,\n      startAdornment: __jsx(InputAdornment, {\n        position: \"start\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 821,\n          columnNumber: 35\n        }\n      }, __jsx(AssignmentInd, {\n        className: classes.inputIconsColor,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 822,\n          columnNumber: 37\n        }\n      }))\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 805,\n      columnNumber: 29\n    }\n  }))))), __jsx(Grow, _extends({\n    \"in\": activeForm === 2,\n    style: {\n      transformOrigin: '0 0 0',\n      display: activeForm === 2 ? \"block\" : \"none\"\n    }\n  }, activeForm === 2 ? {\n    timeout: 1000\n  } : {}, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 837,\n      columnNumber: 21\n    }\n  }), __jsx(CardBody, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 843,\n      columnNumber: 23\n    }\n  }, error && __jsx(SnackbarContent, {\n    message: __jsx(\"span\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 848,\n        columnNumber: 29\n      }\n    }, __jsx(\"b\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 849,\n        columnNumber: 31\n      }\n    }, \"N\\xE3o encontramos seu CEP\"), \" \", __jsx(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 849,\n        columnNumber: 62\n      }\n    }), \" Tente novamente\") // close\n    ,\n    color: \"warning\",\n    icon: \"info_outline\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 846,\n      columnNumber: 25\n    }\n  }), __jsx(GridContainer, {\n    justify: \"center\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 858,\n      columnNumber: 25\n    }\n  }, __jsx(GridItem, {\n    xs: 12,\n    sm: 12,\n    md: 4,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 859,\n      columnNumber: 27\n    }\n  }, __jsx(CustomInput, {\n    labelText: \"CEP\",\n    labelError: errors.cep && errors.cep.message,\n    error: errors.cep ? true : false,\n    id: \"cep\",\n    formControlProps: {\n      fullWidth: true\n    },\n    inputProps: {\n      type: \"tel\",\n      name: \"cep\",\n      inputComponent: CEPMask,\n      onClick: handleFocus,\n      inputRef: register,\n      onBlur: fetchData\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 860,\n      columnNumber: 29\n    }\n  })), __jsx(GridItem, {\n    xs: 12,\n    sm: 12,\n    md: 8,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 878,\n      columnNumber: 27\n    }\n  }, __jsx(CustomInput, {\n    labelText: \"Endere\\xE7o\",\n    labelError: errors.endereco && errors.endereco.message,\n    error: errors.endereco ? true : false,\n    id: \"endereco\",\n    formControlProps: {\n      fullWidth: true\n    },\n    inputProps: {\n      name: \"endereco\",\n      inputRef: register,\n      value: identification.endereco,\n      disabled: true\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 880,\n      columnNumber: 29\n    }\n  })), __jsx(GridItem, {\n    xs: 12,\n    sm: 12,\n    md: 4,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 896,\n      columnNumber: 27\n    }\n  }, __jsx(CustomInput, {\n    labelText: \"N\\xFAmero\",\n    labelError: errors.numero && errors.numero.message,\n    error: errors.numero ? true : false,\n    id: \"numero\",\n    formControlProps: {\n      fullWidth: true\n    },\n    inputProps: {\n      type: \"tel\",\n      name: \"numero\",\n      inputRef: register\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 897,\n      columnNumber: 29\n    }\n  })), __jsx(GridItem, {\n    xs: 12,\n    sm: 12,\n    md: 8,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 912,\n      columnNumber: 27\n    }\n  }, __jsx(CustomInput, {\n    labelText: \"Complemento\",\n    labelError: errors.complemento && errors.complemento.message,\n    error: errors.complemento ? true : false,\n    id: \"complemento\",\n    formControlProps: {\n      fullWidth: true\n    },\n    inputProps: {\n      name: \"complemento\",\n      inputRef: register\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 913,\n      columnNumber: 29\n    }\n  })), __jsx(GridItem, {\n    xs: 12,\n    sm: 12,\n    md: 5,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 927,\n      columnNumber: 27\n    }\n  }, __jsx(CustomInput, {\n    labelText: \"Bairro\",\n    labelError: errors.bairro && errors.bairro.message,\n    error: errors.bairro ? true : false,\n    id: \"bairro\",\n    formControlProps: {\n      fullWidth: true\n    },\n    inputProps: {\n      name: \"bairro\",\n      inputRef: register,\n      value: identification.bairro,\n      disabled: true\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 928,\n      columnNumber: 29\n    }\n  })), __jsx(GridItem, {\n    xs: 12,\n    sm: 12,\n    md: 3,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 944,\n      columnNumber: 27\n    }\n  }, __jsx(CustomInput, {\n    labelText: \"Estado\",\n    labelError: errors.estado && errors.estado.message,\n    error: errors.estado ? true : false,\n    id: \"estado\",\n    formControlProps: {\n      fullWidth: true\n    },\n    inputProps: {\n      name: \"estado\",\n      inputRef: register,\n      value: identification.estado,\n      disabled: true\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 945,\n      columnNumber: 29\n    }\n  })), __jsx(GridItem, {\n    xs: 12,\n    sm: 12,\n    md: 4,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 961,\n      columnNumber: 27\n    }\n  }, __jsx(CustomInput, {\n    labelText: \"Cidade\",\n    labelError: errors.cidade && errors.cidade.message,\n    error: errors.cidade ? true : false,\n    id: \"cidade\",\n    formControlProps: {\n      fullWidth: true\n    },\n    inputProps: {\n      name: \"cidade\",\n      inputRef: register,\n      value: identification.cidade,\n      disabled: true\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 962,\n      columnNumber: 29\n    }\n  }))))), __jsx(CardFooter, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 985,\n      columnNumber: 21\n    }\n  }, __jsx(GridContainer, {\n    justify: \"center\",\n    style: {\n      margin: \"0\",\n      width: \"100%\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 986,\n      columnNumber: 23\n    }\n  }, __jsx(GridItem, {\n    xs: 12,\n    sm: 12,\n    md: 12,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 988,\n      columnNumber: 25\n    }\n  }, isDisableNext && __jsx(CircularProgress, {\n    style: {\n      color: \"#cad300\"\n    },\n    size: 30,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 991,\n      columnNumber: 29\n    }\n  }), !isDisableNext && __jsx(Button, {\n    color: \"primary\",\n    fullWidth: true,\n    onClick: handleNext,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 994,\n      columnNumber: 29\n    }\n  }, \"Pr\\xF3ximo\")), __jsx(GridItem, {\n    xs: 12,\n    sm: 12,\n    md: 12,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1002,\n      columnNumber: 25\n    }\n  }, __jsx(Button, {\n    simple: true,\n    color: \"primary\",\n    fullWidth: true,\n    onClick: handleBack,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1004,\n      columnNumber: 27\n    }\n  }, \"Voltar\"))))))))), __jsx(Grow, _extends({\n    \"in\": activeForm === 1,\n    style: {\n      transformOrigin: '0 0 0',\n      display: activeForm === 1 ? \"block\" : \"none\"\n    }\n  }, activeForm === 1 ? {\n    timeout: 1000\n  } : {}, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1018,\n      columnNumber: 13\n    }\n  }), __jsx(GridItem, {\n    xs: 12,\n    sm: 12,\n    md: 6,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1023,\n      columnNumber: 15\n    }\n  }, __jsx(Grow, _extends({\n    \"in\": true,\n    style: {\n      transformOrigin: '0 0 0'\n    }\n  }, true ? {\n    timeout: 1000\n  } : {}, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1024,\n      columnNumber: 17\n    }\n  }), __jsx(Card, {\n    className: classes.card1,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1029,\n      columnNumber: 19\n    }\n  }, __jsx(\"form\", {\n    onSubmit: handleSubmit(onSubmit),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1030,\n      columnNumber: 19\n    }\n  }, __jsx(CardHeader, {\n    contact: true,\n    color: \"primary\",\n    className: classes.textCenter,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1031,\n      columnNumber: 21\n    }\n  }, __jsx(\"h4\", {\n    className: classes.cardTitle,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1036,\n      columnNumber: 23\n    }\n  }, \"Identifica\\xE7\\xE3o\")), __jsx(Grow, _extends({\n    \"in\": activeForm === 1,\n    style: {\n      transformOrigin: '0 0 0',\n      display: activeForm === 1 ? \"block\" : \"none\"\n    }\n  }, activeForm === 1 ? {\n    timeout: 1000\n  } : {}, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1041,\n      columnNumber: 21\n    }\n  }), __jsx(CardBody, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1047,\n      columnNumber: 23\n    }\n  }, __jsx(GridContainer, {\n    justify: \"center\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1048,\n      columnNumber: 25\n    }\n  }, __jsx(GridItem, {\n    xs: 12,\n    sm: 8,\n    md: 5,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1049,\n      columnNumber: 27\n    }\n  }, __jsx(CustomInput, {\n    labelText: \"Nome Completo\",\n    labelError: errors.nome && errors.nome.message,\n    error: errors.nome ? true : false,\n    id: \"nome\",\n    formControlProps: {\n      fullWidth: true\n    },\n    inputProps: {\n      name: \"nome\",\n      inputRef: register,\n      startAdornment: __jsx(InputAdornment, {\n        position: \"start\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1062,\n          columnNumber: 35\n        }\n      }, __jsx(AssignmentInd, {\n        className: classes.inputIconsColor,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1063,\n          columnNumber: 37\n        }\n      }))\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1050,\n      columnNumber: 29\n    }\n  }), __jsx(CustomInput, {\n    labelText: \"Email\",\n    labelError: errors.email && errors.email.message,\n    error: errors.email ? true : false,\n    id: \"email\",\n    formControlProps: {\n      fullWidth: true\n    },\n    inputProps: {\n      name: \"email\",\n      inputRef: register,\n      onBlur: handleBlurEmail,\n      startAdornment: __jsx(React.Fragment, null, isDisableNext && __jsx(CircularProgress, {\n        style: {\n          color: \"#cad300\"\n        },\n        size: 30,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1083,\n          columnNumber: 37\n        }\n      }), !isDisableNext && __jsx(InputAdornment, {\n        position: \"start\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1086,\n          columnNumber: 37\n        }\n      }, __jsx(Email, {\n        className: classes.inputIconsColor,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1087,\n          columnNumber: 39\n        }\n      })))\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1068,\n      columnNumber: 29\n    }\n  }), __jsx(CustomInput, {\n    labelText: \"Confirmar Email\",\n    labelError: errors.confirmEmail && errors.confirmEmail.message,\n    error: errors.confirmEmail ? true : false,\n    id: \"confirmEmail\",\n    formControlProps: {\n      fullWidth: true\n    },\n    inputProps: {\n      name: \"confirmEmail\",\n      inputRef: register,\n      startAdornment: __jsx(InputAdornment, {\n        position: \"start\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1107,\n          columnNumber: 35\n        }\n      }, __jsx(Email, {\n        className: classes.inputIconsColor,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1108,\n          columnNumber: 37\n        }\n      }))\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1095,\n      columnNumber: 29\n    }\n  })), __jsx(GridItem, {\n    xs: 12,\n    sm: 8,\n    md: 5,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1114,\n      columnNumber: 27\n    }\n  }, __jsx(CustomInput, {\n    labelText: \"Celular\",\n    labelError: errors.telefone && errors.telefone.message,\n    error: errors.telefone ? true : false,\n    id: \"telefone\",\n    formControlProps: {\n      fullWidth: true\n    },\n    inputProps: {\n      type: \"tel\",\n      name: \"telefone\",\n      inputRef: register,\n      onClick: handleFocus,\n      // onBlur: handleFocus,\n      inputComponent: PhoneMask,\n      startAdornment: __jsx(InputAdornment, {\n        position: \"start\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1131,\n          columnNumber: 35\n        }\n      }, __jsx(Phone, {\n        className: classes.inputIconsColor,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1132,\n          columnNumber: 37\n        }\n      }))\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1115,\n      columnNumber: 29\n    }\n  }), __jsx(CustomInput, {\n    labelText: \"Confirmar Celular\",\n    labelError: errors.confirmTelefone && errors.confirmTelefone.message,\n    error: errors.confirmTelefone ? true : false,\n    id: \"confirmTelefone\",\n    formControlProps: {\n      fullWidth: true\n    },\n    inputProps: {\n      type: \"tel\",\n      name: \"confirmTelefone\",\n      inputRef: register,\n      onClick: handleFocus,\n      // onBlur: handleFocus,\n      inputComponent: PhoneMask,\n      startAdornment: __jsx(InputAdornment, {\n        position: \"start\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1153,\n          columnNumber: 35\n        }\n      }, __jsx(Phone, {\n        className: classes.inputIconsColor,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1154,\n          columnNumber: 37\n        }\n      }))\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1137,\n      columnNumber: 29\n    }\n  }), __jsx(CustomInput, {\n    labelText: \"Data de nascimento\",\n    labelError: errors.dataNascimento && errors.dataNascimento.message,\n    error: errors.dataNascimento ? true : false,\n    id: \"dataNascimento\",\n    formControlProps: {\n      fullWidth: true\n    },\n    inputProps: {\n      name: \"dataNascimento\",\n      type: \"tel\",\n      inputRef: register,\n      onClick: handleFocus,\n      // onBlur: handleFocus,\n      inputComponent: DateMask,\n      startAdornment: __jsx(InputAdornment, {\n        position: \"start\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1175,\n          columnNumber: 35\n        }\n      }, __jsx(EventIcon, {\n        className: classes.inputIconsColor,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1176,\n          columnNumber: 37\n        }\n      }))\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1159,\n      columnNumber: 29\n    }\n  })), __jsx(GridItem, {\n    xs: 12,\n    sm: 12,\n    md: 12,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1182,\n      columnNumber: 27\n    }\n  }, __jsx(\"label\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1184,\n      columnNumber: 29\n    }\n  }, \"Aceito receber contatos via:\"), __jsx(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1185,\n      columnNumber: 29\n    }\n  }), __jsx(FormControlLabel, {\n    control: __jsx(Checkbox, {\n      defaultChecked: true,\n      tabIndex: -1,\n      onClick: function onClick() {\n        return handleToggle(1);\n      },\n      checkedIcon: __jsx(Check, {\n        className: classes.checkedIcon,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1193,\n          columnNumber: 37\n        }\n      }),\n      icon: __jsx(Check, {\n        className: classes.uncheckedIcon,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1195,\n          columnNumber: 41\n        }\n      }),\n      classes: {\n        checked: classes.checked,\n        root: classes.checkRoot\n      },\n      name: \"optinEmail\",\n      inputRef: register,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1188,\n        columnNumber: 33\n      }\n    }),\n    classes: {\n      label: classes.label\n    },\n    label: \"Email\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1186,\n      columnNumber: 29\n    }\n  }), __jsx(FormControlLabel, {\n    control: __jsx(Checkbox, {\n      defaultChecked: true,\n      tabIndex: -1,\n      onClick: function onClick() {\n        return handleToggle(1);\n      },\n      checkedIcon: __jsx(Check, {\n        className: classes.checkedIcon,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1214,\n          columnNumber: 37\n        }\n      }),\n      icon: __jsx(Check, {\n        className: classes.uncheckedIcon,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1216,\n          columnNumber: 41\n        }\n      }),\n      classes: {\n        checked: classes.checked,\n        root: classes.checkRoot\n      },\n      name: \"optinSms\",\n      inputRef: register,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1209,\n        columnNumber: 33\n      }\n    }),\n    classes: {\n      label: classes.label\n    },\n    label: \"SMS\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1207,\n      columnNumber: 29\n    }\n  }), __jsx(FormControlLabel, {\n    control: __jsx(Checkbox, {\n      defaultChecked: true,\n      tabIndex: -1,\n      onClick: function onClick() {\n        return handleToggle(1);\n      },\n      checkedIcon: __jsx(Check, {\n        className: classes.checkedIcon,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1235,\n          columnNumber: 37\n        }\n      }),\n      icon: __jsx(Check, {\n        className: classes.uncheckedIcon,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1237,\n          columnNumber: 41\n        }\n      }),\n      classes: {\n        checked: classes.checked,\n        root: classes.checkRoot\n      },\n      name: \"optinTelegram\",\n      inputRef: register,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1230,\n        columnNumber: 33\n      }\n    }),\n    classes: {\n      label: classes.label\n    },\n    label: \"Telegram\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1228,\n      columnNumber: 29\n    }\n  }), (errors.optinSms || errors.optinEmail || errors.optinTelegram) && __jsx(FormHelperText, {\n    className: classes.marginAuto,\n    error: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1251,\n      columnNumber: 31\n    }\n  }, \"Para uma experi\\xEAncia completa, o contato pelos tr\\xEAs canais \\xE9 obrigat\\xF3rio\")), __jsx(GridItem, {\n    xs: 12,\n    sm: 8,\n    md: 8,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1259,\n      columnNumber: 27\n    }\n  }, __jsx(FormControlLabel, {\n    control: __jsx(Checkbox, {\n      tabIndex: -1,\n      onClick: function onClick() {\n        return handleToggle(1);\n      },\n      checkedIcon: __jsx(Check, {\n        className: classes.checkedIcon,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1266,\n          columnNumber: 37\n        }\n      }),\n      icon: __jsx(Check, {\n        className: classes.uncheckedIcon,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1268,\n          columnNumber: 41\n        }\n      }),\n      classes: {\n        checked: classes.checked,\n        root: classes.checkRoot\n      },\n      name: \"aceiteTermos\",\n      inputRef: register,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1262,\n        columnNumber: 33\n      }\n    }),\n    classes: {\n      label: classes.label\n    } // label=\"Li e aceito o Termo de Uso e Políticas de Privacidade.\"\n    ,\n    label: __jsx(React.Fragment, null, __jsx(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1281,\n        columnNumber: 33\n      }\n    }, \"Li e aceito o\", __jsx(\"a\", {\n      href: \"../termos/Termo_de_Uso_e_Politica_de_Privacidade_Clicou_Personal.pdf\",\n      className: classes.colorPrimary,\n      target: \"_blank\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1283,\n        columnNumber: 35\n      }\n    }, \" Termo de Uso e Pol\\xEDticas de Privacidade.\"))),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1260,\n      columnNumber: 29\n    }\n  }), errors.aceiteTermos && __jsx(FormHelperText, {\n    className: classes.marginAuto,\n    error: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1293,\n      columnNumber: 31\n    }\n  }, errors.aceiteTermos.message))))), __jsx(CardFooter, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1311,\n      columnNumber: 21\n    }\n  }, __jsx(GridContainer, {\n    justify: \"center\",\n    style: {\n      margin: \"0\",\n      width: \"100%\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1312,\n      columnNumber: 23\n    }\n  }, __jsx(GridItem, {\n    xs: 12,\n    sm: 12,\n    md: 12,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1314,\n      columnNumber: 25\n    }\n  }, isDisableNext && __jsx(CircularProgress, {\n    style: {\n      color: \"#cad300\"\n    },\n    size: 30,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1318,\n      columnNumber: 29\n    }\n  }), !isDisableNext && __jsx(Button, {\n    color: \"primary\",\n    fullWidth: true,\n    onClick: handleNext,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1321,\n      columnNumber: 29\n    }\n  }, \"Pr\\xF3ximo\")), __jsx(GridItem, {\n    xs: 12,\n    sm: 12,\n    md: 12,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1331,\n      columnNumber: 25\n    }\n  }, __jsx(Button, {\n    simple: true,\n    color: \"primary\",\n    fullWidth: true,\n    onClick: handleBack,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1333,\n      columnNumber: 27\n    }\n  }, \"Voltar\")))))))))))));\n}","map":{"version":3,"sources":["/Users/gabrieldossantos/Google Drive (webmaster@wigoo.com.br)/Wigoo Desenvolvimento/justfit.com.br/clicoupersonal.com.br/checkout/pages-sections/checkout/SectionIdentification.js"],"names":["React","useEffect","useState","axios","withScriptjs","withGoogleMap","GoogleMap","Marker","makeStyles","Checkbox","FormControlLabel","InputAdornment","PinDrop","Phone","Check","Email","EventIcon","Favorite","AssignmentInd","CircularProgress","GridContainer","GridItem","InfoArea","Card","CardHeader","CardBody","CardFooter","CustomInput","Button","SnackbarContent","FormHelperText","FormControl","FormGroup","Grow","FieldsCpf","FieldsPersonalData","InputMask","MaskedInput","PropTypes","string","useForm","yupResolver","yup","setLocale","TagManager","checkoutStyle","city","useStyles","TextMaskCustom","props","inputRef","other","ref","inputElement","propTypes","func","isRequired","PhoneMask","DateMask","CEPMask","mixed","notType","_ref","type","required","oneOf","notOneOf","length","min","max","email","url","trim","lowercase","uppercase","number","lessThan","moreThan","notEqual","positive","negative","integer","date","array","regexCPF","cpfValidate","cpf","console","log","isValidCPF","replace","soma","resto","i","parseInt","substring","isValidPhone","phone","test","isValidDate","dateString","parts","split","day","month","year","monthLength","isMaiorIdade","d1","Date","d2","diff","getTime","idade","Math","floor","addMethod","message","value","SignupSchema","object","shape","nome","confirmEmail","telefone","confirmTelefone","dataNascimento","dateNasc","optinSms","bool","optinEmail","optinTelegram","aceiteTermos","cep","endereco","numero","complemento","bairro","estado","cidade","SectionIdentification","resolver","mode","register","trigger","handleSubmit","getValues","errors","onSubmit","data","dataLayer","event","userId","userProject","page","checked","setChecked","handleToggle","currentIndex","indexOf","newChecked","push","splice","isAluno","setIsAluno","activeForm","setActiveForm","activeField","setActiveField","isDisableNext","setIsDisableNext","error","setError","handleNext","result","identificationForm","fetchVerifyCPF","dataNascimentoSplit","idadeUser","setDataSale","prevDataSale","customer","name","toUpperCase","birthDate","document","phones","address","complement","district","removeAcento","state","postalCode","financeResponsible","active","anamnese","setStepCheckout","prevActiveStep","handleFieldActive","handleBack","handleFocus","target","selectionStart","selectionEnd","select","handleBlurEmail","step","text","toLowerCase","RegExp","receberContatoEmail","receberContatoSMS","receberContatoWhatsApp","identification","setIdentification","fetchData","prevIdentification","get","then","res","logradouro","uf","localidade","post","code","showError","msg","fetchVerifyEmail","setMessageReturn","prev","setShowModal","classes","contacts","section","container","transformOrigin","display","timeout","card1","textCenter","cardTitle","fullWidth","onClick","onBlur","inputComponent","startAdornment","inputIconsColor","disabled","margin","width","color","checkedIcon","uncheckedIcon","root","checkRoot","label","marginAuto","colorPrimary"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport { useEffect, useState } from \"react\";\nimport axios from 'axios';\n// react components used to create a google map\nimport {\n  withScriptjs,\n  withGoogleMap,\n  GoogleMap,\n  Marker\n} from \"react-google-maps\";\n// @material-ui/core components\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Checkbox from \"@material-ui/core/Checkbox\";\nimport FormControlLabel from \"@material-ui/core/FormControlLabel\";\nimport InputAdornment from \"@material-ui/core/InputAdornment\";\n// @material-ui/icons\nimport PinDrop from \"@material-ui/icons/PinDrop\";\nimport Phone from \"@material-ui/icons/Phone\";\nimport Check from \"@material-ui/icons/Check\";\nimport Email from \"@material-ui/icons/Email\";\nimport EventIcon from '@material-ui/icons/Event';\nimport Favorite from \"@material-ui/icons/Favorite\";\nimport AssignmentInd from \"@material-ui/icons/AssignmentInd\";\n// core components\nimport CircularProgress from '@material-ui/core/CircularProgress';\nimport GridContainer from \"components/Grid/GridContainer.js\";\nimport GridItem from \"components/Grid/GridItem.js\";\nimport InfoArea from \"components/InfoArea/InfoArea.js\";\nimport Card from \"components/Card/Card.js\";\nimport CardHeader from \"components/Card/CardHeader.js\";\nimport CardBody from \"components/Card/CardBody.js\";\nimport CardFooter from \"components/Card/CardFooter.js\";\nimport CustomInput from \"components/CustomInput/CustomInput.js\";\nimport Button from \"components/CustomButtons/Button.js\";\nimport SnackbarContent from \"components/Snackbar/SnackbarContent.js\";\nimport FormHelperText from '@material-ui/core/FormHelperText'; \n\n\nimport FormControl from '@material-ui/core/FormControl';\nimport FormGroup from '@material-ui/core/FormGroup';\n\nimport Grow from '@material-ui/core/Grow';\n\nimport FieldsCpf from \"pages-sections/checkout/identification/FieldsCpf.js\";\nimport FieldsPersonalData from \"pages-sections/checkout/identification/FieldsPersonalData.js\";\n\nimport InputMask from \"react-input-mask\";\nimport MaskedInput from 'react-text-mask';\nimport PropTypes, { string } from 'prop-types';\n\nimport { useForm } from \"react-hook-form\";\nimport { yupResolver } from '@hookform/resolvers';\nimport * as yup from \"yup\";\nimport { setLocale } from 'yup';\n\nimport TagManager from 'react-gtm-module'\n\nimport checkoutStyle from \"assets/jss/nextjs-material-kit-pro/pages/checkoutSections/checkoutStyle.js\";\n\nimport city from \"assets/img/examples/city.jpg\";\n\nconst useStyles = makeStyles(checkoutStyle);\n\nfunction TextMaskCustom(props) {\n  const { inputRef, ...other } = props;\n\n  return (\n    <MaskedInput\n      {...other}\n      ref={(ref) => {\n        inputRef(ref ? ref.inputElement : null);\n      }}      \n      mask={[/[0-9]/, /[0-9]/, /[0-9]/, '.', /[0-9]/, /[0-9]/, /[0-9]/, '.', /[0-9]/, /[0-9]/, /[0-9]/, '-', /[0-9]/, /[0-9]/]}\n      placeholderChar={'\\u2007'}\n      guide={false}\n      showMask\n    />\n  );\n}\n\nTextMaskCustom.propTypes = {\n  inputRef: PropTypes.func.isRequired,\n};\n\n\nfunction PhoneMask(props) {\n  const { inputRef, ...other } = props;\n\n  return (\n    <MaskedInput\n      {...other}\n      ref={(ref) => {\n        inputRef(ref ? ref.inputElement : null);\n      }}      \n      mask={['(', /[1-9]/, /[0-9]/, ')', ' ', /[1-9]/, /[0-9]/, /[0-9]/, /[0-9]/, /[0-9]/, '-', /[0-9]/, /[0-9]/, /[0-9]/, /[0-9]/]}\n      placeholderChar={'\\u2000'}\n      guide={false}\n      showMask\n    />\n  );\n}\n\nPhoneMask.propTypes = {\n  inputRef: PropTypes.func.isRequired,\n};\n\nfunction DateMask(props) {\n  const { inputRef, ...other } = props;\n\n  return (\n    <MaskedInput\n      {...other}\n      ref={(ref) => {\n        inputRef(ref ? ref.inputElement : null);\n      }}\n      // mask={['(', /[1-9]/, /\\d/, /\\d/, ')', ' ', /\\d/, /\\d/, /\\d/, '-', /\\d/, /\\d/, /\\d/, /\\d/]}\n      mask={[/\\d/, /\\d/, '/', /\\d/, /\\d/, '/', /\\d/, /\\d/, /\\d/, /\\d/]}\n      placeholderChar={'\\u2000'}\n      guide={false}\n      showMask\n    />\n  );\n}\n\nDateMask.propTypes = {\n  inputRef: PropTypes.func.isRequired,\n};\n\nfunction CEPMask(props) {\n  const { inputRef, ...other } = props;\n\n  return (\n    <MaskedInput\n      {...other}\n      ref={(ref) => {\n        inputRef(ref ? ref.inputElement : null);\n      }}\n      // mask={['(', /[1-9]/, /\\d/, /\\d/, ')', ' ', /\\d/, /\\d/, /\\d/, '-', /\\d/, /\\d/, /\\d/, /\\d/]}\n      mask={[/[0-9]/, /[0-9]/, /[0-9]/, /[0-9]/, /[0-9]/, '-', /[0-9]/, /[0-9]/, /[0-9]/]}\n      placeholderChar={'\\u2000'}\n      guide={false}\n      showMask\n    />\n  );\n}\n\nCEPMask.propTypes = {\n  inputRef: PropTypes.func.isRequired,\n};\n\n\nsetLocale({  \n  mixed: {\n    notType: function notType(_ref) {\n      switch (_ref.type) {\n        case 'number':\n          return 'deve ser um número';\n        case 'string':\n          return 'deve ser um texto';\n        default:\n          return 'formato errado';\n      }\n    },\n    default: 'é inválido',\n    required: 'Desculpe, este campo é obrigatório',\n    oneOf: 'deve ser um dos seguintes valores: ${values}',\n    notOneOf: 'não pode ser um dos seguintes valores: ${values}',\n  },\n  string: {\n      length: 'deve ter exatamente ${length} caracteres',\n      min: 'deve ter pelo menos ${min} caracteres',\n      max: 'deve ter no máximo ${max} caracteres',\n      email: 'Por favor, informe um e-mail inválido',\n      url: 'deve ter um formato de URL válida',\n      trim: 'não deve conter espaços no início ou no fim.',\n      lowercase: 'deve estar em maiúsculo',\n      uppercase: 'deve estar em minúsculo',\n  },\n  number: {\n      min: 'deve ser no mínimo ${min}',\n      max: 'deve ser no máximo ${max}',\n      lessThan: 'deve ser menor que ${less}',\n      moreThan: 'deve ser maior que ${more}',\n      notEqual: 'não pode ser igual à ${notEqual}',\n      positive: 'deve ser um número posítivo',\n      negative: 'deve ser um número negativo',\n      integer: 'deve ser um número inteiro',      \n  },\n      date: {\n      min: 'deve ser maior que a data ${min}',\n      max: 'deve ser menor que a data ${max}',\n  },\n      array: {\n      min: 'deve ter no mínimo ${min} itens',\n      max: 'deve ter no máximo ${max} itens',\n  }\n});\n\n\nconst regexCPF = /([0-9]{2}[\\.]?[0-9]{3}[\\.]?[0-9]{3}[\\/]?[0-9]{4}[-]?[0-9]{2})|([0-9]{3}[\\.]?[0-9]{3}[\\.]?[0-9]{3}[-]?[0-9]{2})/gm;\nfunction cpfValidate(cpf) {\n\tconsole.log(\"Validatring\", cpf);\n\treturn cpf.length > 10\n}\n\nfunction isValidCPF(cpf) {\n  if (typeof cpf !== \"string\") return false\n  cpf = cpf.replace(/[\\s.-]*/igm, '')\n  if (\n      !cpf ||\n      cpf.length != 11 ||\n      cpf == \"00000000000\" ||\n      cpf == \"11111111111\" ||\n      cpf == \"22222222222\" ||\n      cpf == \"33333333333\" ||\n      cpf == \"44444444444\" ||\n      cpf == \"55555555555\" ||\n      cpf == \"66666666666\" ||\n      cpf == \"77777777777\" ||\n      cpf == \"88888888888\" ||\n      cpf == \"99999999999\" \n  ) {\n      return false\n  }\n  var soma = 0\n  var resto\n  for (var i = 1; i <= 9; i++) \n      soma = soma + parseInt(cpf.substring(i-1, i)) * (11 - i)\n  resto = (soma * 10) % 11\n  if ((resto == 10) || (resto == 11))  resto = 0\n  if (resto != parseInt(cpf.substring(9, 10)) ) return false\n  soma = 0\n  for (var i = 1; i <= 10; i++) \n      soma = soma + parseInt(cpf.substring(i-1, i)) * (12 - i)\n  resto = (soma * 10) % 11\n  if ((resto == 10) || (resto == 11))  resto = 0\n  if (resto != parseInt(cpf.substring(10, 11) ) ) return false\n  return true\n}\n\nfunction isValidPhone(phone){\n  return /^(?:(?:\\+|00)?(55)\\s?)?(?:\\(?([1-9][0-9])\\)?\\s?)?(?:((?:9\\d|[2-9])\\d{3})\\-?(\\d{4}))$/.test(phone);\n}\n\nfunction isValidDate(dateString) {\n  // return /^((((0?[1-9]|[12]\\d|3[01])[\\.\\-\\/](0?[13578]|1[02])      [\\.\\-\\/]((1[6-9]|[2-9]\\d)?\\d{2}))|((0?[1-9]|[12]\\d|30)[\\.\\-\\/](0?[13456789]|1[012])[\\.\\-\\/]((1[6-9]|[2-9]\\d)?\\d{2}))|((0?[1-9]|1\\d|2[0-8])[\\.\\-\\/]0?2[\\.\\-\\/]((1[6-9]|[2-9]\\d)?\\d{2}))|(29[\\.\\-\\/]0?2[\\.\\-\\/]((1[6-9]|[2-9]\\d)?(0[48]|[2468][048]|[13579][26])|((16|[2468][048]|[3579][26])00)|00)))|(((0[1-9]|[12]\\d|3[01])(0[13578]|1[02])((1[6-9]|[2-9]\\d)?\\d{2}))|((0[1-9]|[12]\\d|30)(0[13456789]|1[012])((1[6-9]|[2-9]\\d)?\\d{2}))|((0[1-9]|1\\d|2[0-8])02((1[6-9]|[2-9]\\d)?\\d{2}))|(2902((1[6-9]|[2-9]\\d)?(0[48]|[2468][048]|[13579][26])|((16|[2468][048]|[3579][26])00)|00))))$/.test(date);\n\n  // First check for the pattern\n  if(!/^\\d{1,2}\\/\\d{1,2}\\/\\d{4}$/.test(dateString))\n  return false;\n\n  // Parse the date parts to integers\n  var parts = dateString.split(\"/\");\n  var day = parseInt(parts[0], 10);\n  var month = parseInt(parts[1], 10);\n  var year = parseInt(parts[2], 10);\n\n  // Check the ranges of month and year\n  if(year < 1000 || year > 3000 || month == 0 || month > 12)\n    return false;\n\n  var monthLength = [ 31, 28, 31, 30, 31, 30, 31, 31, 30, 31, 30, 31 ];\n\n  // Adjust for leap years\n  if(year % 400 == 0 || (year % 100 != 0 && year % 4 == 0))\n    monthLength[1] = 29;\n\n  // Check the range of the day\n  return day > 0 && day <= monthLength[month - 1];\n}\n\nfunction isMaiorIdade(d1){  \n  var parts = d1.split(\"/\");\n  var day = parseInt(parts[0], 10);\n  var month = parseInt(parts[1], 10);\n  var year = parseInt(parts[2], 10);\n  // d1 = new Date(month + \"/\" + day + \"/\" + year);\n  d1 = new Date(year, month - 1, day);\n  var d2 = new Date();\n  var diff = d2.getTime() - d1.getTime();\n  var idade = Math.floor(diff / (1000 * 60 * 60 * 24 * 365.25));\n  if(idade >= 18){\n    return true\n  } else {\n    return false\n  }\n}\n\nyup.addMethod(yup.string, \"cpf\", function(message) {\n\t// return yup.mixed().test(\"cpf\", message || \"número de CPF inválido\", value => cpfValidate(value));\n\treturn yup.mixed().test(\"cpf\", message || \"número de CPF inválido\", value => isValidCPF(value));\n});\n\nyup.addMethod(yup.string, \"phone\", function(message) {\t\n\treturn yup.mixed().test(\"phone\", message || \"número de celular inválido\", value => isValidPhone(value));\n});\n\nyup.addMethod(yup.string, \"dateNasc\", function(message) {\t\n  return yup.mixed().test(\"dateNasc\", message || \"Por favor, digite uma data válida\", value => isValidDate(value));  \n});\n\n\n\nconst SignupSchema = yup.object().shape({  \n  cpf: yup\n    .string()\n    .cpf(\"Por favor, informe um CPF válido\"),  \n  nome: yup\n    .string()\n    .required(),  \n  email: yup\n    .string()\n    .required()    \n    .email(),\n  confirmEmail: yup\n    .string()\n    .oneOf([yup.ref('email'), null], \"Email divergente ao inserido acima\"),\n  telefone: yup\n    .string()\n    .phone(\"Por favor, informe um número de celular válido\"),\n  confirmTelefone: yup\n    .string()\n    .oneOf([yup.ref('telefone'), null], \"Celular divergente ao inserido acima\"),         \n  dataNascimento: yup   \n    .string()   \n    .dateNasc()\n    .test('maiorIdade', 'Para continuar, você deve ter no mínimo 18 anos', \n      function(value) {\n          return isMaiorIdade(value);\n      }),    \n    \n  // dataNascimento: yup\n  //   .string()\n  //   .maiorIdade(),   \n  optinSms: yup.bool().oneOf([true], 'Esta opção é obrigatória'),\n  optinEmail: yup.bool().oneOf([true], 'Esta opção é obrigatória'),\n  optinTelegram: yup.bool().oneOf([true], 'Esta opção é obrigatória'),\n  aceiteTermos: yup.bool().oneOf([true], 'O aceite dos termos é obrigatório'),\n\n  \n  \n  cep: yup\n    .string()\n    .required(),\n  endereco: yup\n    .string()\n    .required(),\n  numero: yup\n    .number()\n    .required(),\n  complemento: yup\n    .string(),    \n  bairro: yup\n    .string()\n    .required(),\n  estado: yup\n    .string()\n    .required(),\n  cidade: yup\n    .string()\n    .required(),\n\n  // receberContatoEmail: yup.boolean().oneOf([true],'aceite obrigatório'),\n  // receberContatoSMS: yup.boolean().oneOf([true],'aceite obrigatório'),\n  // receberContatoWhatsApp: yup.boolean().oneOf([true],'aceite obrigatório')\n    \n\n});\n\n\n\nexport default function SectionIdentification(props) {\n  // const { register, errors, handleSubmit} = useForm({\n  //   validationSchema: SignupSchema\n  // });\n  const { register, trigger, handleSubmit, getValues, errors } = useForm({\n    resolver: yupResolver(SignupSchema),\n    mode: \"onBlur\"\n    // mode: \"onChange\"\n  });\n  const onSubmit = data => {\n    console.log(data);\n    // alert(JSON.stringify(data, null));\n  };\n\n\n  useEffect(() => {    \n    // history.pushState({}, null, \"/checkout/identification\");\n    TagManager.dataLayer({\n      dataLayer: {\n        event: \"identificationView\",\n        userId: '001',\n        userProject: 'project',\n        page: 'home'\n      },          \n    })\n    \n    TagManager.dataLayer({\n      dataLayer: {\n        'event': 'checkout',\n        'ecommerce': {\n          'checkout': {\n            'actionField': {'step': 1},\n            'products': [{\n                'name': 'Plano Anual Start',\n                'id': '1',\n                'price': '478.80',\n                'brand': 'Clicou Personal',\n                'category': 'Atendimento online',                \n                'quantity': 1\n            }]\n          }\n        }        \n      },          \n    })\n  }, []);\n\n\n  const [checked, setChecked] = React.useState([]);\n  const handleToggle = value => {\n    const currentIndex = checked.indexOf(value);\n    const newChecked = [...checked];\n    if (currentIndex === -1) {\n      newChecked.push(value);\n    } else {\n      newChecked.splice(currentIndex, 1);\n    }\n    setChecked(newChecked);\n  };\n\n  const [isAluno, setIsAluno] = React.useState(false);\n  const [activeForm, setActiveForm] = React.useState(0); \n  const [activeField, setActiveField] = React.useState(\"cpf\");\n  const [isDisableNext, setIsDisableNext] = React.useState(false);  \n  const [error, setError] = useState(false);\n\n  const handleNext = async (type) => {\n\n    setIsDisableNext(true);\n    console.log(activeField);\n    var result = await trigger(activeField)\n    console.log(result);\n\n    var identificationForm = getValues();\n\n    \n    if(result) { \n      console.log(getValues());\n\n\n\n      if(activeForm == 0){\n\n        await fetchVerifyCPF(identificationForm.cpf);\n        setIsDisableNext(false);\n        return\n      }\n\n\n\n      if(activeForm  == 2){\n        var dataNascimentoSplit = identificationForm.dataNascimento.split(\"/\"); \n        var day = parseInt(dataNascimentoSplit[0], 10);\n        var month = parseInt(dataNascimentoSplit[1], 10);\n        var year = parseInt(dataNascimentoSplit[2], 10);\n        var d1 = new Date(year, month - 1, day);        \n        var d2 = new Date();\n        var diff = d2.getTime() - d1.getTime();\n        var idadeUser = Math.floor(diff / (1000 * 60 * 60 * 24 * 365.25));       \n        props.setDataSale( prevDataSale => {\n          return {  \n            customer: {     \n              ...prevDataSale.customer,            \n              name: identificationForm.nome.toUpperCase(),\n              birthDate: dataNascimentoSplit[2] + \"-\" + dataNascimentoSplit[1] + \"-\" + dataNascimentoSplit[0],\n              email: identificationForm.email,\n              document: identificationForm.cpf.replace(/[^\\d]+/g,''), \n              phones: [\n                {\n                    type: \"cellphone\",\n                    number: identificationForm.telefone\n                }\n              ],\n              address: {\n                address: identificationForm.endereco,\n                number: identificationForm.numero,\n                complement: identificationForm.complemento,\n                district: identificationForm.bairro,\n                city: removeAcento(identificationForm.cidade),\n                state: identificationForm.estado,\n                postalCode: identificationForm.cep\n              },\n              financeResponsible:{                \n                name: identificationForm.nome,\n                document: identificationForm.cpf, \n                email: identificationForm.email,\n                phone: identificationForm.telefone,\n                active: true\n              },\n              anamnese: {\n                ...prevDataSale.customer.anamnese,\n                idade: idadeUser,\n                optinSms: identificationForm.optinSms,\n                optinEmail: identificationForm.optinEmail,\n                optinTelegram: identificationForm.optinTelegram,\n                aceiteTermos: identificationForm.aceiteTermos\n              }              \n            }         \n          }\n        });    \n\n        props.setStepCheckout(1);\n      }else {        \n        setActiveForm((prevActiveStep) => prevActiveStep + 1);\n        handleFieldActive(activeForm + 1);\n      }\n    }\n\n\n    setIsDisableNext(false);\n        \n\n  };\n\n  const handleBack = (type) => {\n\n    if(activeForm !== 0){\n      setActiveForm((prevActiveStep) => prevActiveStep - 1);  \n      handleFieldActive(activeForm - 1); \n    }\n\n  };\n\n  const handleFocus = (event) => {\n    \n    try {\n      if(event.target.value == \"\"){      \n        event.target.selectionStart = 0;\n        event.target.selectionEnd = 0;      \n      } else {\n        event.target.select();      \n      }\n      \n    } catch (error) {\n      console.log(error);\n    }\n    \n    \n  };\n  \n  const handleBlurEmail = (event) => {\n    setIsDisableNext(true);\n    console.log(event);\n    try {\n      // // const result = await trigger(event.target.name);\n      // if(result){\n      //   await fetchVerifyEmail(event.target.value);\n      //   setIsDisableNext(false);\n      //   return\n      // }\n      \n    } catch (error) {\n      console.log(error);\n    }\n    setIsDisableNext(false);    \n  };\n\n\n  const handleFieldActive = (step) => {\n\n    console.log(\"handleFieldActive\");\n\n    switch (step) {\n      case 0:\n        // setActiveField(\"first\");\n        setActiveField(\"cpf\");\n        break;\n      case 1:\n        setActiveField([\"nome\",\"email\", \"confirmEmail\", \"telefone\", \"confirmTelefone\",\"dataNascimento\", \"optinSms\", \"optinEmail\", \"optinTelegram\", \"aceiteTermos\" ]);\n        break;      \n      case 2:\n        setActiveField([\"cep\",\"endereco\",\"numero\", \"complemento\",\"bairro\", \"estado\", \"cidade\"]);\n        break;      \n      default:\n        setActiveField(\"cpf\");\n        break;\n    }\n\n    console.log(step);\n    // console.log(activeField);\n\n  };\n\n  const removeAcento = (text) => {\n    text = text.toLowerCase();                                                         \n    text = text.replace(new RegExp('[ÁÀÂÃ]','gi'), 'a');\n    text = text.replace(new RegExp('[ÉÈÊ]','gi'), 'e');\n    text = text.replace(new RegExp('[ÍÌÎ]','gi'), 'i');\n    text = text.replace(new RegExp('[ÓÒÔÕ]','gi'), 'o');\n    text = text.replace(new RegExp('[ÚÙÛ]','gi'), 'u');\n    text = text.replace(new RegExp('[Ç]','gi'), 'c');\n    text = text.toUpperCase()\n    return text;    \n  }\n\n  \n  \n  const [identification, setIdentification] = React.useState({\n    cpf: \"\",\n    nome: \"\",\n    email: \"\",\n    telefone: \"\",\n    dataNascimento: \"\",\n\n    cep: \"\",\n    endereco: \"\",\n    numero: \"\",\n    complemento: \"\",\n    bairro: \"\",\n    estado: \"\",\n    cidade: \"\",\n\n    receberContatoEmail: \"\",\n    receberContatoSMS: \"\",\n    receberContatoWhatsApp: \"\"\n\n  });\n\n\n\n  const fetchData = async (event) => {    \n    setError(false);\n    let cep = event.target.value\n    setIdentification( (prevIdentification) => {\n      return {\n        ...prevIdentification,       \n        endereco: \"\",\n        bairro: \"\",\n        estado: \"\",\n        cidade: \"\",\n      }\n    });\n\n    await axios.get(`https://viacep.com.br/ws/${cep}/json/`)\n      .then(res => {\n\n        if(res.data.error){\n          setError(true);\n          return\n        }\n\n        setIdentification( (prevIdentification) => {\n          return {\n            ...prevIdentification,\n            cep: res.data.cep,\n            endereco: res.data.logradouro,\n            bairro: res.data.bairro,\n            estado: res.data.uf,\n            cidade: res.data.localidade,\n          }\n        });\n        // console.log(res.data.cliente);     \n        \n      })\n      .catch((error) => {\n        console.log(error);\n        setError(true);\n      })\n      .finally(() => {\n        // setLoading(false);\n      });\n  };\n  \n  \n  const fetchVerifyCPF = async (cpf) => {        \n\n    await axios.post(`http://admin.justfit.com.br/app.justfit/api/iAPIClicou/ValidarCPF?cpf=${cpf}`)\n      .then(res => {\n\n        try {\n          if(res.data.code == \"0\"){\n            setActiveForm((prevActiveStep) => prevActiveStep + 1);\n            handleFieldActive(activeForm + 1);\n            return\n          } else {            \n            showError(res.data.code, res.data.msg);\n          }          \n        } catch (error) {\n          console.log(error);\n          showError(null, null);\n        }            \n        console.log(res.data);     \n        \n      })\n      .catch((error) => {\n        console.log(error);\n        setError(true);\n        showError(null, null);\n        \n      })\n      .finally(() => {\n        // setLoading(false);\n      });\n  };\n  \n  const fetchVerifyEmail = async (email) => {        \n\n    await axios.post(`http://admin.justfit.com.br/app.justfit/api/iAPIClicou/ValidarEmail?email=${email}`)\n      .then(res => {\n\n        try {\n          if(res.data.code == \"0\"){\n            setActiveForm((prevActiveStep) => prevActiveStep + 1);\n            handleFieldActive(activeForm + 1);\n            return\n          } else {            \n            showError(res.data.code, res.data.msg);\n          }          \n        } catch (error) {\n          console.log(error);\n          showError(null, null);\n        }            \n        console.log(res.data);     \n        \n      })\n      .catch((error) => {\n        console.log(error);\n        setError(true);\n        showError(null, null);\n        \n      })\n      .finally(() => {\n        // setLoading(false);\n      });\n  };\n\n\n  const showError = (code, msg) => {\n    if(code == null){\n      props.setMessageReturn( prev => {\n        return {\n          code: \"000\",\n          msg: \"Erro ao enviar dados. Tente mais tarde\"\n        }\n      });\n      props.setShowModal(true);\n    } else {       \n      props.setMessageReturn( prev => {\n        return {\n          code: code,\n          msg: msg\n        }\n      });\n      props.setShowModal(true);\n    }\n    \n  }\n\n\n\n  const classes = useStyles();\n  return (\n    <div className=\"cd-section\" >\n      {/* Contact us 1 START */}\n      <div\n        className={classes.contacts + \" \" + classes.section}\n        // style={{ backgroundImage: `url(${city})` }}\n        // style={{ backgroundColor: \"#ffffff\" }}\n      >\n        <div className={classes.container}>\n          <GridContainer justify=\"center\">\n            {/* <GridItem xs={12} sm={12} md={8} className={classes.mlAuto}> */}\n            <Grow \n              in={activeForm === 0 || activeForm === 2}\n              style={{ transformOrigin: '0 0 0', display: activeForm === 0 || activeForm === 2 ? \"block\" : \"none\" }}\n              {...(activeForm === 0 || activeForm === 2 ? { timeout: 1000 } : {})}\n            >\n\n              <GridItem xs={12} sm={12} md={5}>\n                <Grow \n                  in={true}\n                  style={{ transformOrigin: '0 0 0' }}\n                  {...(true ? { timeout: 1000 } : {})}\n                >\n                  <Card className={classes.card1}>\n                  <form onSubmit={handleSubmit(onSubmit)}>\n                    <CardHeader\n                      contact\n                      color=\"primary\"\n                      className={classes.textCenter}\n                    >\n                      <h4 className={classes.cardTitle}>Identificação</h4>\n                    </CardHeader>\n\n                    <Grow \n                      in={activeForm === 0}\n                      style={{ transformOrigin: '0 0 0', display: activeForm === 0 ? \"block\" : \"none\" }}\n                      {...(activeForm === 0 ? { timeout: 1000 } : {})}\n                    >\n\n                      <CardBody>\n                        <GridContainer justify=\"center\"> \n                          <GridItem xs={12} sm={8} md={8}>\n\n                            <CustomInput\n                              labelText=\"CPF\"\n                              labelError={errors.cpf && errors.cpf.message}\n                              id=\"cpf\"  \n                              error={errors.cpf ? true : false}                                                                          \n                              formControlProps={{\n                                fullWidth: true\n                              }}                            \n                              inputProps={{\n                                type: \"tel\",\n                                name: \"cpf\",\n                                inputRef: register, \n                                onClick: handleFocus,\n                                onBlur: handleFocus,\n                                inputComponent: TextMaskCustom,\n                                startAdornment: (\n                                  <InputAdornment position=\"start\"> \n                                    <AssignmentInd className={classes.inputIconsColor} />\n                                  </InputAdornment>\n                                ) \n                              }}                          \n                            />     \n\n                          </GridItem>   \n                        </GridContainer>                 \n                    \n                      </CardBody>\n\n                    </Grow>   \n                    \n                                             \n                    \n                    <Grow \n                      in={activeForm === 2}\n                      style={{ transformOrigin: '0 0 0', display: activeForm === 2 ? \"block\" : \"none\" }}\n                      {...(activeForm === 2 ? { timeout: 1000 } : {})}\n                    >\n\n                      <CardBody>\n\n                      {error && ( \n                        <SnackbarContent\n                          message={\n                            <span>\n                              <b>Não encontramos seu CEP</b> <br/> Tente novamente\n                            </span>\n                          }\n                          // close\n                          color=\"warning\"\n                          icon=\"info_outline\"\n                        />\n                      )} \n\n                        <GridContainer justify=\"center\"> \n                          <GridItem xs={12} sm={12} md={4}>\n                            <CustomInput\n                              labelText=\"CEP\"\n                              labelError={errors.cep && errors.cep.message}                          \n                              error={errors.cep ? true : false}\n                              id=\"cep\"\n                              formControlProps={{\n                                fullWidth: true\n                              }}\n                              inputProps={{\n                                type: \"tel\",\n                                name: \"cep\",\n                                inputComponent: CEPMask,\n                                onClick: handleFocus,\n                                inputRef: register,\n                                onBlur: fetchData,                                                    \n                              }}\n                            />  \n                          </GridItem>                   \n                          <GridItem xs={12} sm={12} md={8}>\n                          \n                            <CustomInput\n                              labelText=\"Endereço\"\n                              labelError={errors.endereco && errors.endereco.message}                          \n                              error={errors.endereco ? true : false}\n                              id=\"endereco\"\n                              formControlProps={{\n                                fullWidth: true\n                              }}                            \n                              inputProps={{\n                                name: \"endereco\",\n                                inputRef: register,\n                                value: identification.endereco,\n                                disabled: true\n                              }}\n                            />   \n                          </GridItem>\n                          <GridItem xs={12} sm={12} md={4}>                                                            \n                            <CustomInput\n                              labelText=\"Número\"\n                              labelError={errors.numero && errors.numero.message}                          \n                              error={errors.numero ? true : false}\n                              id=\"numero\"\n                              formControlProps={{\n                                fullWidth: true\n                              }}\n                              inputProps={{\n                                type: \"tel\",\n                                name: \"numero\",\n                                inputRef: register,                                                                                                                 \n                              }}\n                            /> \n                          </GridItem> \n                          <GridItem xs={12} sm={12} md={8}>                                                             \n                            <CustomInput\n                              labelText=\"Complemento\"\n                              labelError={errors.complemento && errors.complemento.message}                          \n                              error={errors.complemento ? true : false}\n                              id=\"complemento\"\n                              formControlProps={{\n                                fullWidth: true\n                              }}\n                              inputProps={{\n                                name: \"complemento\",\n                                inputRef: register                                                                                                                   \n                              }}\n                            />        \n                          </GridItem>   \n                          <GridItem xs={12} sm={12} md={5}>                                                    \n                            <CustomInput\n                              labelText=\"Bairro\"\n                              labelError={errors.bairro && errors.bairro.message}                          \n                              error={errors.bairro ? true : false}\n                              id=\"bairro\"\n                              formControlProps={{\n                                fullWidth: true\n                              }}\n                              inputProps={{\n                                name: \"bairro\",\n                                inputRef: register,\n                                value: identification.bairro,\n                                disabled: true                                                                                      \n                              }}\n                            />   \n                          </GridItem>\n                          <GridItem xs={12} sm={12} md={3}>                                                            \n                            <CustomInput\n                              labelText=\"Estado\"\n                              labelError={errors.estado && errors.estado.message}                          \n                              error={errors.estado ? true : false}\n                              id=\"estado\"\n                              formControlProps={{\n                                fullWidth: true\n                              }}\n                              inputProps={{\n                                name: \"estado\",\n                                inputRef: register,\n                                value: identification.estado,\n                                disabled: true                                                                                      \n                              }}\n                            />    \n                          </GridItem>\n                          <GridItem xs={12} sm={12} md={4}>                                                           \n                            <CustomInput\n                              labelText=\"Cidade\"\n                              labelError={errors.cidade && errors.cidade.message}                          \n                              error={errors.cidade ? true : false}\n                              id=\"cidade\"\n                              formControlProps={{\n                                fullWidth: true\n                              }}\n                              inputProps={{\n                                name: \"cidade\",\n                                inputRef: register,\n                                value: identification.cidade,\n                                disabled: true                                                                                      \n                              }}\n                            />                                                               \n                          </GridItem>   \n                        </GridContainer>                 \n                    \n                      </CardBody>\n\n                    </Grow>\n\n                    \n                    <CardFooter>   \n                      <GridContainer justify=\"center\" style={{ margin: \"0\", width: \"100%\" }}> \n                        \n                        <GridItem xs={12} sm={12} md={12}>\n\n                          {isDisableNext && (\n                            <CircularProgress style={{ color: \"#cad300\" }} size={30}/>\n                          )}\n                          {!isDisableNext && (\n                            <Button color=\"primary\" fullWidth onClick={handleNext}>\n                              Próximo\n                            </Button>\n                          )}\n\n                                                  \n                          \n                        </GridItem> \n                        <GridItem xs={12} sm={12} md={12}>\n                          \n                          <Button simple color=\"primary\" fullWidth onClick={handleBack}>\n                            Voltar\n                          </Button>\n                          \n                        </GridItem> \n                      </GridContainer>  \n                      \n                    </CardFooter>\n                  </form>\n                </Card>\n                </Grow>\n              </GridItem>\n\n            </Grow>          \n            <Grow \n              in={activeForm === 1}\n              style={{ transformOrigin: '0 0 0', display: activeForm === 1 ? \"block\" : \"none\" }}\n              {...(activeForm === 1 ? { timeout: 1000 } : {})}\n            >\n              <GridItem xs={12} sm={12} md={6}>\n                <Grow \n                  in={true}\n                  style={{ transformOrigin: '0 0 0' }}\n                  {...(true ? { timeout: 1000 } : {})}\n                >\n                  <Card className={classes.card1}>\n                  <form onSubmit={handleSubmit(onSubmit)}>\n                    <CardHeader\n                      contact\n                      color=\"primary\"\n                      className={classes.textCenter}\n                    >\n                      <h4 className={classes.cardTitle}>Identificação</h4>\n                    </CardHeader>\n\n    \n                    \n                    <Grow \n                      in={activeForm === 1}\n                      style={{ transformOrigin: '0 0 0', display: activeForm === 1 ? \"block\" : \"none\" }}\n                      {...(activeForm === 1 ? { timeout: 1000 } : {})}\n                    >\n\n                      <CardBody>\n                        <GridContainer justify=\"center\"> \n                          <GridItem xs={12} sm={8} md={5}>\n                            <CustomInput\n                              labelText=\"Nome Completo\"\n                              labelError={errors.nome && errors.nome.message}                          \n                              error={errors.nome ? true : false}\n                              id=\"nome\"\n                              formControlProps={{\n                                fullWidth: true\n                              }}\n                              inputProps={{\n                                name: \"nome\",\n                                inputRef: register,\n                                startAdornment: (\n                                  <InputAdornment position=\"start\">\n                                    <AssignmentInd className={classes.inputIconsColor} />\n                                  </InputAdornment>\n                                )                           \n                              }}\n                            />                     \n                            <CustomInput\n                              labelText=\"Email\"\n                              labelError={errors.email && errors.email.message}                          \n                              error={errors.email ? true : false}\n                              id=\"email\"\n                              formControlProps={{\n                                fullWidth: true\n                              }}\n                              inputProps={{\n                                name: \"email\",\n                                inputRef: register,\n                                onBlur: handleBlurEmail,\n                                startAdornment: (\n                                  <>\n                                  {isDisableNext && (\n                                    <CircularProgress style={{ color: \"#cad300\" }} size={30}/>\n                                  )}\n                                  {!isDisableNext && (\n                                    <InputAdornment position=\"start\">\n                                      <Email className={classes.inputIconsColor} />\n                                    </InputAdornment>\n                                  )}\n                                  </>\n        \n                                )                                                        \n                              }}\n                            />                     \n                            <CustomInput\n                              labelText=\"Confirmar Email\"\n                              labelError={errors.confirmEmail && errors.confirmEmail.message}                          \n                              error={errors.confirmEmail ? true : false}\n                              id=\"confirmEmail\"\n                              formControlProps={{\n                                fullWidth: true\n                              }}\n                              inputProps={{\n                                name: \"confirmEmail\",\n                                inputRef: register,\n                                startAdornment: (\n                                  <InputAdornment position=\"start\">\n                                    <Email className={classes.inputIconsColor} />\n                                  </InputAdornment>\n                                )                                                        \n                              }}\n                            />                                                  \n                          </GridItem>\n                          <GridItem xs={12} sm={8} md={5}>                       \n                            <CustomInput\n                              labelText=\"Celular\"\n                              labelError={errors.telefone && errors.telefone.message}                          \n                              error={errors.telefone ? true : false}\n                              id=\"telefone\"\n                              formControlProps={{\n                                fullWidth: true\n                              }}\n                              inputProps={{\n                                type: \"tel\",\n                                name: \"telefone\",\n                                inputRef: register,\n                                onClick: handleFocus,\n                                // onBlur: handleFocus,\n                                inputComponent: PhoneMask,\n                                startAdornment: (\n                                  <InputAdornment position=\"start\">\n                                    <Phone className={classes.inputIconsColor} />\n                                  </InputAdornment>\n                                )                            \n                              }}\n                            />                     \n                            <CustomInput\n                              labelText=\"Confirmar Celular\"\n                              labelError={errors.confirmTelefone && errors.confirmTelefone.message}                          \n                              error={errors.confirmTelefone ? true : false}\n                              id=\"confirmTelefone\"\n                              formControlProps={{\n                                fullWidth: true\n                              }}\n                              inputProps={{\n                                type: \"tel\",\n                                name: \"confirmTelefone\",\n                                inputRef: register,\n                                onClick: handleFocus,\n                                // onBlur: handleFocus,\n                                inputComponent: PhoneMask,\n                                startAdornment: (\n                                  <InputAdornment position=\"start\">\n                                    <Phone className={classes.inputIconsColor} />\n                                  </InputAdornment>\n                                )                            \n                              }}\n                            />                     \n                            <CustomInput\n                              labelText=\"Data de nascimento\"\n                              labelError={errors.dataNascimento && errors.dataNascimento.message}                          \n                              error={errors.dataNascimento ? true : false}\n                              id=\"dataNascimento\"\n                              formControlProps={{\n                                fullWidth: true\n                              }}\n                              inputProps={{\n                                name: \"dataNascimento\",\n                                type: \"tel\",\n                                inputRef: register,\n                                onClick: handleFocus,\n                                // onBlur: handleFocus,\n                                inputComponent: DateMask,\n                                startAdornment: (\n                                  <InputAdornment position=\"start\">\n                                    <EventIcon className={classes.inputIconsColor} />\n                                  </InputAdornment>\n                                )                           \n                              }}\n                            />    \n                          </GridItem>\n                          <GridItem xs={12} sm={12} md={12}>\n                          \n                            <label>Aceito receber contatos via:</label>\n                            <br/>\n                            <FormControlLabel\n                              control={\n                                <Checkbox  \n                                  defaultChecked                              \n                                  tabIndex={-1}\n                                  onClick={() => handleToggle(1)}\n                                  checkedIcon={\n                                    <Check className={classes.checkedIcon} />\n                                  }\n                                  icon={<Check className={classes.uncheckedIcon} />}\n                                  classes={{\n                                    checked: classes.checked,\n                                    root: classes.checkRoot\n                                  }}\n                                  name=\"optinEmail\"\n                                  inputRef={ register }                          \n                                />\n                              }                      \n                              classes={{ label: classes.label }}\n                              label=\"Email\"\n                            />                          \n                            <FormControlLabel\n                              control={\n                                <Checkbox   \n                                  defaultChecked                             \n                                  tabIndex={-1}\n                                  onClick={() => handleToggle(1)}\n                                  checkedIcon={\n                                    <Check className={classes.checkedIcon} />\n                                  }\n                                  icon={<Check className={classes.uncheckedIcon} />}\n                                  classes={{\n                                    checked: classes.checked,\n                                    root: classes.checkRoot\n                                  }}\n                                  name=\"optinSms\"\n                                  inputRef={ register }                          \n                                />\n                              }                      \n                              classes={{ label: classes.label }}\n                              label=\"SMS\"\n                            />                          \n                            <FormControlLabel\n                              control={\n                                <Checkbox    \n                                  defaultChecked                            \n                                  tabIndex={-1}\n                                  onClick={() => handleToggle(1)}\n                                  checkedIcon={\n                                    <Check className={classes.checkedIcon} />\n                                  }                                \n                                  icon={<Check className={classes.uncheckedIcon} />}\n                                  classes={{\n                                    checked: classes.checked,\n                                    root: classes.checkRoot\n                                  }}\n                                  name=\"optinTelegram\"\n                                  inputRef={ register }                          \n                                />\n                              }                      \n                              classes={{ label: classes.label }}\n                              label=\"Telegram\"\n                            />  \n                            {\n                              (errors.optinSms || errors.optinEmail || errors.optinTelegram) &&  (\n                              <FormHelperText className={classes.marginAuto} error={true}>\n                                Para uma experiência completa, o contato pelos três canais é obrigatório\n                              </FormHelperText>  \n                              )\n                            }\n\n                          </GridItem>\n\n                          <GridItem xs={12} sm={8} md={8}>\n                            <FormControlLabel\n                              control={\n                                <Checkbox\n                                  tabIndex={-1}\n                                  onClick={() => handleToggle(1)}                                \n                                  checkedIcon={\n                                    <Check className={classes.checkedIcon} />\n                                  }\n                                  icon={<Check className={classes.uncheckedIcon} />}\n                                  classes={{\n                                    checked: classes.checked,\n                                    root: classes.checkRoot\n                                  }}\n                                  name=\"aceiteTermos\"\n                                  inputRef={ register }                          \n                                />\n                              }                      \n                              classes={{ label: classes.label }}\n                              // label=\"Li e aceito o Termo de Uso e Políticas de Privacidade.\"\n                              label={\n                                <>\n                                <div>\n                                  Li e aceito o \n                                  <a href=\"../termos/Termo_de_Uso_e_Politica_de_Privacidade_Clicou_Personal.pdf\" className={classes.colorPrimary} target=\"_blank\"> Termo de Uso e Políticas de Privacidade.</a>\n                                  {/* <Button color=\"primary\" href=\"\" target=\"_blank\" simple>\n                                    Termo de Uso e Políticas de Privacidade.\n                                  </Button> */}\n                                </div>\n                                </>\n                              }\n                            />  \n                            {\n                              errors.aceiteTermos && (\n                              <FormHelperText className={classes.marginAuto} error={true}>\n                                {errors.aceiteTermos.message}\n                              </FormHelperText>  \n                              )\n                            }\n                            \n\n\n                          </GridItem>   \n                        </GridContainer>                 \n                    \n                      </CardBody>\n\n                    </Grow>\n                    \n        \n\n                    \n                    <CardFooter>   \n                      <GridContainer justify=\"center\" style={{ margin: \"0\", width: \"100%\" }}> \n                        \n                        <GridItem xs={12} sm={12} md={12}>          \n\n\n                          {isDisableNext && (\n                            <CircularProgress style={{ color: \"#cad300\" }} size={30}/>\n                          )}\n                          {!isDisableNext && (\n                            <Button color=\"primary\" fullWidth onClick={handleNext}>\n                              Próximo\n                            </Button>\n                          )}\n\n\n                          \n                                                  \n                          \n                        </GridItem> \n                        <GridItem xs={12} sm={12} md={12}>\n                          \n                          <Button simple color=\"primary\" fullWidth onClick={handleBack}>\n                            Voltar\n                          </Button>\n                          \n                        </GridItem> \n                      </GridContainer>  \n                      \n                    </CardFooter>\n                  </form>\n                </Card>\n                </Grow>\n              </GridItem>\n\n            </Grow>  \n          </GridContainer>\n        </div>\n      </div>\n      \n    </div>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}