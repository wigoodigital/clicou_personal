{"ast":null,"code":"var _jsxFileName = \"/Users/gabrieldossantos/Google Drive (webmaster@wigoo.com.br)/Wigoo Desenvolvimento/justfit.com.br/clicoupersonal.com.br/checkout/pages/checkout.js\";\nvar __jsx = React.createElement;\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { makeStyles, withStyles, useTheme } from '@material-ui/core/styles';\nimport clsx from 'clsx';\nimport Stepper from '@material-ui/core/Stepper';\nimport Step from '@material-ui/core/Step';\nimport StepLabel from '@material-ui/core/StepLabel';\nimport Check from '@material-ui/icons/Check';\nimport SettingsIcon from '@material-ui/icons/Settings';\nimport GroupAddIcon from '@material-ui/icons/GroupAdd';\nimport VideoLabelIcon from '@material-ui/icons/VideoLabel';\nimport StepConnector from '@material-ui/core/StepConnector';\nimport Button from '@material-ui/core/Button';\nimport Typography from '@material-ui/core/Typography';\nimport Head from 'next/head';\nimport Header from \"components/Header/Header.js\";\nimport HeaderLinks from \"components/Header/HeaderLinks.js\";\nimport GridContainer from \"components/Grid/GridContainer.js\";\nimport GridItem from \"components/Grid/GridItem.js\";\nimport Grow from '@material-ui/core/Grow';\nimport MobileStepper from '@material-ui/core/MobileStepper';\nimport KeyboardArrowLeft from '@material-ui/icons/KeyboardArrowLeft';\nimport KeyboardArrowRight from '@material-ui/icons/KeyboardArrowRight';\nimport SectionFooter from \"pages-sections/footer/SectionFooter.js\";\nimport SectionContacts from \"pages-sections/checkout/SectionContacts.js\";\nimport SectionIdentification from \"pages-sections/checkout/SectionIdentification.js\";\nimport SectionPayment from \"pages-sections/checkout/SectionPayment.js\";\nimport SectionAnamnese from \"pages-sections/checkout/SectionAnamnese.js\";\nimport SectionFinish from \"pages-sections/checkout/SectionFinish.js\";\nimport logo from \"assets/img/logo.png\";\nconst QontoConnector = withStyles({\n  alternativeLabel: {\n    top: 10,\n    left: 'calc(-50% + 16px)',\n    right: 'calc(50% + 16px)'\n  },\n  active: {\n    '& $line': {\n      borderColor: '#784af4'\n    }\n  },\n  completed: {\n    '& $line': {\n      borderColor: '#784af4'\n    }\n  },\n  line: {\n    borderColor: '#eaeaf0',\n    borderTopWidth: 3,\n    borderRadius: 1\n  }\n})(StepConnector);\nconst useQontoStepIconStyles = makeStyles({\n  root: {\n    color: '#eaeaf0',\n    display: 'flex',\n    height: 22,\n    alignItems: 'center'\n  },\n  active: {\n    color: '#784af4'\n  },\n  circle: {\n    width: 8,\n    height: 8,\n    borderRadius: '50%',\n    backgroundColor: 'currentColor'\n  },\n  completed: {\n    color: '#784af4',\n    zIndex: 1,\n    fontSize: 18\n  }\n});\n\nfunction QontoStepIcon(props) {\n  const classes = useQontoStepIconStyles();\n  const {\n    active,\n    completed\n  } = props;\n  return __jsx(\"div\", {\n    className: clsx(classes.root, {\n      [classes.active]: active\n    }),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 5\n    }\n  }, completed ? __jsx(Check, {\n    className: classes.completed,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 97,\n      columnNumber: 20\n    }\n  }) : __jsx(\"div\", {\n    className: classes.circle,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 97,\n      columnNumber: 62\n    }\n  }));\n}\n\nQontoStepIcon.propTypes = {\n  /**\n   * Whether this step is active.\n   */\n  active: PropTypes.bool,\n\n  /**\n   * Mark the step as completed. Is passed to child components.\n   */\n  completed: PropTypes.bool\n};\nconst ColorlibConnector = withStyles({\n  alternativeLabel: {\n    top: 22\n  },\n  active: {\n    '& $line': {\n      backgroundImage: 'linear-gradient(90deg, rgba(66,92,199,1) 0%, rgba(59,191,173,1) 100%);'\n    }\n  },\n  completed: {\n    '& $line': {\n      backgroundImage: 'linear-gradient(90deg, rgba(66,92,199,1) 0%, rgba(59,191,173,1) 100%);'\n    }\n  },\n  line: {\n    height: 3,\n    border: 0,\n    backgroundColor: '#eaeaf0',\n    borderRadius: 1\n  }\n})(StepConnector);\nconst useColorlibStepIconStyles = makeStyles({\n  root: {\n    backgroundColor: '#ccc',\n    zIndex: 1,\n    color: '#fff',\n    width: 50,\n    height: 50,\n    display: 'flex',\n    borderRadius: '50%',\n    justifyContent: 'center',\n    alignItems: 'center'\n  },\n  active: {\n    backgroundImage: 'linear-gradient(90deg, rgba(66,92,199,1) 0%, rgba(59,191,173,1) 100%)',\n    boxShadow: '0 4px 10px 0 rgba(0,0,0,.25)'\n  },\n  completed: {\n    backgroundImage: 'linear-gradient(90deg, rgba(66,92,199,1) 0%, rgba(59,191,173,1) 100%);'\n  }\n});\n\nfunction ColorlibStepIcon(props) {\n  const classes = useColorlibStepIconStyles();\n  const {\n    active,\n    completed\n  } = props;\n  const icons = {\n    1: __jsx(SettingsIcon, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 165,\n        columnNumber: 8\n      }\n    }),\n    2: __jsx(GroupAddIcon, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 166,\n        columnNumber: 8\n      }\n    }),\n    3: __jsx(VideoLabelIcon, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 167,\n        columnNumber: 8\n      }\n    }),\n    4: __jsx(VideoLabelIcon, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 168,\n        columnNumber: 8\n      }\n    })\n  };\n  return __jsx(\"div\", {\n    className: clsx(classes.root, {\n      [classes.active]: active,\n      [classes.completed]: completed\n    }),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 172,\n      columnNumber: 5\n    }\n  }, icons[String(props.icon)]);\n}\n\nColorlibStepIcon.propTypes = {\n  /**\n   * Whether this step is active.\n   */\n  active: PropTypes.bool,\n\n  /**\n   * Mark the step as completed. Is passed to child components.\n   */\n  completed: PropTypes.bool,\n\n  /**\n   * The label displayed in the step icon.\n   */\n  icon: PropTypes.node\n};\nconst useStyles = makeStyles(theme => ({\n  root: {\n    width: '100%',\n    backgroundColor: \"#ffffff\"\n  },\n  button: {\n    marginRight: theme.spacing(1)\n  },\n  instructions: {\n    marginTop: theme.spacing(1),\n    marginBottom: theme.spacing(1)\n  },\n  progress: {\n    // display: \"none\n    margin: \"0 auto\"\n  },\n  textCenter: {\n    textAlign: \"center\"\n  },\n  imgLogo: {\n    maxHeight: \"90px\",\n    margin: \"0 auto\"\n  },\n  containerLogo: {\n    // textAlign: \"center\",\n    display: \"flex\",\n    alignItems: \"center\"\n  },\n  containerStep: {\n    padding: \"8px\"\n  },\n  containerTopo: {\n    padding: 0,\n    margin: 0\n  }\n}));\n\nfunction getSteps() {\n  return ['Identificação', 'Pagamento', 'Anamnese', \"Finalização\"];\n}\n\nfunction getStepContent(step) {\n  switch (step) {\n    case 0:\n      return __jsx(SectionIdentification, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 242,\n          columnNumber: 14\n        }\n      });\n\n    case 1:\n      return __jsx(SectionPayment, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 244,\n          columnNumber: 14\n        }\n      });\n\n    case 2:\n      return __jsx(SectionAnamnese, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 246,\n          columnNumber: 14\n        }\n      });\n\n    case 3:\n      return __jsx(SectionFinish, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 248,\n          columnNumber: 14\n        }\n      });\n\n    default:\n      return 'Unknown step';\n  }\n}\n\nexport default function CustomizedSteppers() {\n  const classes = useStyles();\n  const [activeStep, setActiveStep] = React.useState(0);\n  const [activeAnamnese, setActiveAnamnese] = React.useState(0);\n  const steps = getSteps();\n  const theme = useTheme();\n\n  const handleNext = type => {\n    switch (type) {\n      case \"Checkout\":\n        setActiveStep(prevActiveStep => prevActiveStep + 1);\n        return;\n\n      case \"Anamnese\":\n        if (activeAnamnese === 4) {\n          setActiveStep(prevActiveStep => prevActiveStep + 1);\n        } else {\n          setActiveAnamnese(prevActiveStep => prevActiveStep + 1);\n        }\n\n        return;\n\n      default:\n        return;\n    }\n  };\n\n  const handleBack = type => {\n    switch (type) {\n      case \"Checkout\":\n        setActiveStep(prevActiveStep => prevActiveStep - 1);\n        return;\n\n      case \"Anamnese\":\n        if (activeAnamnese === 0) {\n          setActiveStep(prevActiveStep => prevActiveStep - 1);\n        } else {\n          setActiveAnamnese(prevActiveStep => prevActiveStep - 1);\n        }\n\n        return;\n\n      default:\n        return;\n    }\n  };\n\n  const handleReset = () => {\n    setActiveStep(0);\n    setActiveAnamnese(0);\n  };\n\n  return __jsx(React.Fragment, null, __jsx(Head, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 303,\n      columnNumber: 7\n    }\n  }, __jsx(\"title\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 304,\n      columnNumber: 11\n    }\n  }, \"Checkout - Clicou Personal\")), __jsx(\"div\", {\n    className: classes.root,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 319,\n      columnNumber: 7\n    }\n  }, __jsx(GridContainer, {\n    justify: \"center\",\n    className: classes.containerTopo,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 321,\n      columnNumber: 7\n    }\n  }, __jsx(GridItem, {\n    xs: 12,\n    sm: 12,\n    md: 2,\n    className: classes.containerLogo,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 322,\n      columnNumber: 9\n    }\n  }, __jsx(\"img\", {\n    src: logo,\n    alt: \"...\",\n    className: classes.imgLogo,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 323,\n      columnNumber: 11\n    }\n  })), __jsx(GridItem, {\n    xs: 12,\n    sm: 12,\n    md: 10,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 325,\n      columnNumber: 9\n    }\n  }, __jsx(Stepper, {\n    alternativeLabel: true,\n    activeStep: activeStep,\n    connector: __jsx(ColorlibConnector, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 326,\n        columnNumber: 72\n      }\n    }),\n    className: classes.containerStep,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 326,\n      columnNumber: 11\n    }\n  }, steps.map(label => __jsx(Step, {\n    key: label,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 328,\n      columnNumber: 15\n    }\n  }, __jsx(StepLabel, {\n    StepIconComponent: ColorlibStepIcon,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 329,\n      columnNumber: 17\n    }\n  }, label)))))), __jsx(\"div\", {\n    className: classes.textCenter,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 362,\n      columnNumber: 9\n    }\n  }, activeStep === steps.length ? __jsx(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 364,\n      columnNumber: 13\n    }\n  }, __jsx(Typography, {\n    className: classes.instructions,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 365,\n      columnNumber: 15\n    }\n  }, \"All steps completed - you're finished\"), __jsx(Button, {\n    onClick: handleReset,\n    className: classes.button,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 368,\n      columnNumber: 15\n    }\n  }, \"Reset\")) : __jsx(React.Fragment, null, activeStep === 10 ? __jsx(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 376,\n      columnNumber: 17\n    }\n  }, getStepContent(activeStep), __jsx(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 379,\n      columnNumber: 19\n    }\n  }, __jsx(Button, {\n    disabled: activeStep === 0,\n    onClick: () => handleBack(\"Anamnese\"),\n    className: classes.button,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 380,\n      columnNumber: 21\n    }\n  }, \"Back\"), __jsx(Button, {\n    variant: \"contained\",\n    color: \"primary\",\n    onClick: () => handleNext(\"Anamnese\"),\n    className: classes.button,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 383,\n      columnNumber: 21\n    }\n  }, activeStep === steps.length - 1 ? 'Finish' : 'Next'))) : __jsx(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 396,\n      columnNumber: 17\n    }\n  }, __jsx(Grow, _extends({\n    in: true,\n    style: {\n      transformOrigin: '0 0 0'\n    }\n  }, true ? {\n    timeout: 1000\n  } : {}, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 398,\n      columnNumber: 19\n    }\n  }), getStepContent(activeStep)), __jsx(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 407,\n      columnNumber: 19\n    }\n  }, __jsx(Button, {\n    disabled: activeStep === 0,\n    onClick: () => handleBack(\"Checkout\"),\n    className: classes.button,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 408,\n      columnNumber: 21\n    }\n  }, \"Back\"), __jsx(Button, {\n    variant: \"contained\",\n    color: \"primary\",\n    onClick: () => handleNext(\"Checkout\"),\n    className: classes.button,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 411,\n      columnNumber: 21\n    }\n  }, activeStep === steps.length - 1 ? 'Finish' : 'Next'))))), activeStep === 2 && __jsx(MobileStepper, {\n    variant: \"progress\",\n    steps: 5,\n    position: \"static\",\n    activeStep: activeAnamnese // className={classes.root}\n    ,\n    classes: {\n      root: classes.root,\n      progress: classes.progress\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 430,\n      columnNumber: 11\n    }\n  }), __jsx(SectionFooter, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 444,\n      columnNumber: 9\n    }\n  })));\n}","map":{"version":3,"sources":["/Users/gabrieldossantos/Google Drive (webmaster@wigoo.com.br)/Wigoo Desenvolvimento/justfit.com.br/clicoupersonal.com.br/checkout/pages/checkout.js"],"names":["React","PropTypes","makeStyles","withStyles","useTheme","clsx","Stepper","Step","StepLabel","Check","SettingsIcon","GroupAddIcon","VideoLabelIcon","StepConnector","Button","Typography","Head","Header","HeaderLinks","GridContainer","GridItem","Grow","MobileStepper","KeyboardArrowLeft","KeyboardArrowRight","SectionFooter","SectionContacts","SectionIdentification","SectionPayment","SectionAnamnese","SectionFinish","logo","QontoConnector","alternativeLabel","top","left","right","active","borderColor","completed","line","borderTopWidth","borderRadius","useQontoStepIconStyles","root","color","display","height","alignItems","circle","width","backgroundColor","zIndex","fontSize","QontoStepIcon","props","classes","propTypes","bool","ColorlibConnector","backgroundImage","border","useColorlibStepIconStyles","justifyContent","boxShadow","ColorlibStepIcon","icons","String","icon","node","useStyles","theme","button","marginRight","spacing","instructions","marginTop","marginBottom","progress","margin","textCenter","textAlign","imgLogo","maxHeight","containerLogo","containerStep","padding","containerTopo","getSteps","getStepContent","step","CustomizedSteppers","activeStep","setActiveStep","useState","activeAnamnese","setActiveAnamnese","steps","handleNext","type","prevActiveStep","handleBack","handleReset","map","label","length","transformOrigin","timeout"],"mappings":";;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,SAASC,UAAT,EAAqBC,UAArB,EAAiCC,QAAjC,QAAiD,0BAAjD;AACA,OAAOC,IAAP,MAAiB,MAAjB;AACA,OAAOC,OAAP,MAAoB,2BAApB;AACA,OAAOC,IAAP,MAAiB,wBAAjB;AACA,OAAOC,SAAP,MAAsB,6BAAtB;AACA,OAAOC,KAAP,MAAkB,0BAAlB;AACA,OAAOC,YAAP,MAAyB,6BAAzB;AACA,OAAOC,YAAP,MAAyB,6BAAzB;AACA,OAAOC,cAAP,MAA2B,+BAA3B;AACA,OAAOC,aAAP,MAA0B,iCAA1B;AACA,OAAOC,MAAP,MAAmB,0BAAnB;AACA,OAAOC,UAAP,MAAuB,8BAAvB;AACA,OAAOC,IAAP,MAAiB,WAAjB;AACA,OAAOC,MAAP,MAAmB,6BAAnB;AACA,OAAOC,WAAP,MAAwB,kCAAxB;AACA,OAAOC,aAAP,MAA0B,kCAA1B;AACA,OAAOC,QAAP,MAAqB,6BAArB;AAEA,OAAOC,IAAP,MAAiB,wBAAjB;AAEA,OAAOC,aAAP,MAA0B,iCAA1B;AACA,OAAOC,iBAAP,MAA8B,sCAA9B;AACA,OAAOC,kBAAP,MAA+B,uCAA/B;AAEA,OAAOC,aAAP,MAA0B,wCAA1B;AACA,OAAOC,eAAP,MAA4B,4CAA5B;AAEA,OAAOC,qBAAP,MAAkC,kDAAlC;AACA,OAAOC,cAAP,MAA2B,2CAA3B;AACA,OAAOC,eAAP,MAA4B,4CAA5B;AACA,OAAOC,aAAP,MAA0B,0CAA1B;AAEA,OAAOC,IAAP,MAAiB,qBAAjB;AAMA,MAAMC,cAAc,GAAG7B,UAAU,CAAC;AAChC8B,EAAAA,gBAAgB,EAAE;AAChBC,IAAAA,GAAG,EAAE,EADW;AAEhBC,IAAAA,IAAI,EAAE,mBAFU;AAGhBC,IAAAA,KAAK,EAAE;AAHS,GADc;AAMhCC,EAAAA,MAAM,EAAE;AACN,eAAW;AACTC,MAAAA,WAAW,EAAE;AADJ;AADL,GANwB;AAWhCC,EAAAA,SAAS,EAAE;AACT,eAAW;AACTD,MAAAA,WAAW,EAAE;AADJ;AADF,GAXqB;AAgBhCE,EAAAA,IAAI,EAAE;AACJF,IAAAA,WAAW,EAAE,SADT;AAEJG,IAAAA,cAAc,EAAE,CAFZ;AAGJC,IAAAA,YAAY,EAAE;AAHV;AAhB0B,CAAD,CAAV,CAqBpB7B,aArBoB,CAAvB;AAuBA,MAAM8B,sBAAsB,GAAGzC,UAAU,CAAC;AACxC0C,EAAAA,IAAI,EAAE;AACJC,IAAAA,KAAK,EAAE,SADH;AAEJC,IAAAA,OAAO,EAAE,MAFL;AAGJC,IAAAA,MAAM,EAAE,EAHJ;AAIJC,IAAAA,UAAU,EAAE;AAJR,GADkC;AAOxCX,EAAAA,MAAM,EAAE;AACNQ,IAAAA,KAAK,EAAE;AADD,GAPgC;AAUxCI,EAAAA,MAAM,EAAE;AACNC,IAAAA,KAAK,EAAE,CADD;AAENH,IAAAA,MAAM,EAAE,CAFF;AAGNL,IAAAA,YAAY,EAAE,KAHR;AAINS,IAAAA,eAAe,EAAE;AAJX,GAVgC;AAgBxCZ,EAAAA,SAAS,EAAE;AACTM,IAAAA,KAAK,EAAE,SADE;AAETO,IAAAA,MAAM,EAAE,CAFC;AAGTC,IAAAA,QAAQ,EAAE;AAHD;AAhB6B,CAAD,CAAzC;;AAuBA,SAASC,aAAT,CAAuBC,KAAvB,EAA8B;AAC5B,QAAMC,OAAO,GAAGb,sBAAsB,EAAtC;AACA,QAAM;AAAEN,IAAAA,MAAF;AAAUE,IAAAA;AAAV,MAAwBgB,KAA9B;AAEA,SACE;AACE,IAAA,SAAS,EAAElD,IAAI,CAACmD,OAAO,CAACZ,IAAT,EAAe;AAC5B,OAACY,OAAO,CAACnB,MAAT,GAAkBA;AADU,KAAf,CADjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAKGE,SAAS,GAAG,MAAC,KAAD;AAAO,IAAA,SAAS,EAAEiB,OAAO,CAACjB,SAA1B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAAH,GAA6C;AAAK,IAAA,SAAS,EAAEiB,OAAO,CAACP,MAAxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IALzD,CADF;AASD;;AAEDK,aAAa,CAACG,SAAd,GAA0B;AACxB;;;AAGApB,EAAAA,MAAM,EAAEpC,SAAS,CAACyD,IAJM;;AAKxB;;;AAGAnB,EAAAA,SAAS,EAAEtC,SAAS,CAACyD;AARG,CAA1B;AAWA,MAAMC,iBAAiB,GAAGxD,UAAU,CAAC;AACnC8B,EAAAA,gBAAgB,EAAE;AAChBC,IAAAA,GAAG,EAAE;AADW,GADiB;AAInCG,EAAAA,MAAM,EAAE;AACN,eAAW;AACTuB,MAAAA,eAAe,EACb;AAFO;AADL,GAJ2B;AAUnCrB,EAAAA,SAAS,EAAE;AACT,eAAW;AACTqB,MAAAA,eAAe,EACb;AAFO;AADF,GAVwB;AAgBnCpB,EAAAA,IAAI,EAAE;AACJO,IAAAA,MAAM,EAAE,CADJ;AAEJc,IAAAA,MAAM,EAAE,CAFJ;AAGJV,IAAAA,eAAe,EAAE,SAHb;AAIJT,IAAAA,YAAY,EAAE;AAJV;AAhB6B,CAAD,CAAV,CAsBvB7B,aAtBuB,CAA1B;AAwBA,MAAMiD,yBAAyB,GAAG5D,UAAU,CAAC;AAC3C0C,EAAAA,IAAI,EAAE;AACJO,IAAAA,eAAe,EAAE,MADb;AAEJC,IAAAA,MAAM,EAAE,CAFJ;AAGJP,IAAAA,KAAK,EAAE,MAHH;AAIJK,IAAAA,KAAK,EAAE,EAJH;AAKJH,IAAAA,MAAM,EAAE,EALJ;AAMJD,IAAAA,OAAO,EAAE,MANL;AAOJJ,IAAAA,YAAY,EAAE,KAPV;AAQJqB,IAAAA,cAAc,EAAE,QARZ;AASJf,IAAAA,UAAU,EAAE;AATR,GADqC;AAY3CX,EAAAA,MAAM,EAAE;AACNuB,IAAAA,eAAe,EACb,uEAFI;AAGNI,IAAAA,SAAS,EAAE;AAHL,GAZmC;AAiB3CzB,EAAAA,SAAS,EAAE;AACTqB,IAAAA,eAAe,EACb;AAFO;AAjBgC,CAAD,CAA5C;;AAuBA,SAASK,gBAAT,CAA0BV,KAA1B,EAAiC;AAC/B,QAAMC,OAAO,GAAGM,yBAAyB,EAAzC;AACA,QAAM;AAAEzB,IAAAA,MAAF;AAAUE,IAAAA;AAAV,MAAwBgB,KAA9B;AAEA,QAAMW,KAAK,GAAG;AACZ,OAAG,MAAC,YAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADS;AAEZ,OAAG,MAAC,YAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAFS;AAGZ,OAAG,MAAC,cAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAHS;AAIZ,OAAG,MAAC,cAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAJS,GAAd;AAOA,SACE;AACE,IAAA,SAAS,EAAE7D,IAAI,CAACmD,OAAO,CAACZ,IAAT,EAAe;AAC5B,OAACY,OAAO,CAACnB,MAAT,GAAkBA,MADU;AAE5B,OAACmB,OAAO,CAACjB,SAAT,GAAqBA;AAFO,KAAf,CADjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAMG2B,KAAK,CAACC,MAAM,CAACZ,KAAK,CAACa,IAAP,CAAP,CANR,CADF;AAUD;;AAEDH,gBAAgB,CAACR,SAAjB,GAA6B;AAC3B;;;AAGApB,EAAAA,MAAM,EAAEpC,SAAS,CAACyD,IAJS;;AAK3B;;;AAGAnB,EAAAA,SAAS,EAAEtC,SAAS,CAACyD,IARM;;AAS3B;;;AAGAU,EAAAA,IAAI,EAAEnE,SAAS,CAACoE;AAZW,CAA7B;AAeA,MAAMC,SAAS,GAAGpE,UAAU,CAAEqE,KAAD,KAAY;AACvC3B,EAAAA,IAAI,EAAE;AACJM,IAAAA,KAAK,EAAE,MADH;AAEJC,IAAAA,eAAe,EAAE;AAFb,GADiC;AAKvCqB,EAAAA,MAAM,EAAE;AACNC,IAAAA,WAAW,EAAEF,KAAK,CAACG,OAAN,CAAc,CAAd;AADP,GAL+B;AAQvCC,EAAAA,YAAY,EAAE;AACZC,IAAAA,SAAS,EAAEL,KAAK,CAACG,OAAN,CAAc,CAAd,CADC;AAEZG,IAAAA,YAAY,EAAEN,KAAK,CAACG,OAAN,CAAc,CAAd;AAFF,GARyB;AAYvCI,EAAAA,QAAQ,EAAE;AACR;AACAC,IAAAA,MAAM,EAAE;AAFA,GAZ6B;AAgBvCC,EAAAA,UAAU,EAAE;AACVC,IAAAA,SAAS,EAAE;AADD,GAhB2B;AAmBvCC,EAAAA,OAAO,EAAE;AACPC,IAAAA,SAAS,EAAE,MADJ;AAEPJ,IAAAA,MAAM,EAAE;AAFD,GAnB8B;AAuBvCK,EAAAA,aAAa,EAAE;AACb;AACAtC,IAAAA,OAAO,EAAE,MAFI;AAGbE,IAAAA,UAAU,EAAE;AAHC,GAvBwB;AA4BvCqC,EAAAA,aAAa,EAAE;AACbC,IAAAA,OAAO,EAAE;AADI,GA5BwB;AA+BvCC,EAAAA,aAAa,EAAE;AACbD,IAAAA,OAAO,EAAE,CADI;AAEbP,IAAAA,MAAM,EAAE;AAFK;AA/BwB,CAAZ,CAAD,CAA5B;;AAqCA,SAASS,QAAT,GAAoB;AAClB,SAAO,CAAC,eAAD,EAAkB,WAAlB,EAA+B,UAA/B,EAA2C,aAA3C,CAAP;AACD;;AAED,SAASC,cAAT,CAAwBC,IAAxB,EAA8B;AAC5B,UAAQA,IAAR;AACE,SAAK,CAAL;AACE,aAAO,MAAC,qBAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAAP;;AACF,SAAK,CAAL;AACE,aAAO,MAAC,cAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAAP;;AACF,SAAK,CAAL;AACE,aAAO,MAAC,eAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAAP;;AACF,SAAK,CAAL;AACE,aAAO,MAAC,aAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAAP;;AACF;AACE,aAAO,cAAP;AAVJ;AAYD;;AAED,eAAe,SAASC,kBAAT,GAA8B;AAC3C,QAAMnC,OAAO,GAAGc,SAAS,EAAzB;AACA,QAAM,CAACsB,UAAD,EAAaC,aAAb,IAA8B7F,KAAK,CAAC8F,QAAN,CAAe,CAAf,CAApC;AACA,QAAM,CAACC,cAAD,EAAiBC,iBAAjB,IAAsChG,KAAK,CAAC8F,QAAN,CAAe,CAAf,CAA5C;AACA,QAAMG,KAAK,GAAGT,QAAQ,EAAtB;AACA,QAAMjB,KAAK,GAAGnE,QAAQ,EAAtB;;AAEA,QAAM8F,UAAU,GAAIC,IAAD,IAAU;AAC3B,YAAQA,IAAR;AACE,WAAK,UAAL;AACEN,QAAAA,aAAa,CAAEO,cAAD,IAAoBA,cAAc,GAAG,CAAtC,CAAb;AACA;;AACF,WAAK,UAAL;AACE,YAAIL,cAAc,KAAK,CAAvB,EAAyB;AACvBF,UAAAA,aAAa,CAAEO,cAAD,IAAoBA,cAAc,GAAG,CAAtC,CAAb;AACD,SAFD,MAEO;AACLJ,UAAAA,iBAAiB,CAAEI,cAAD,IAAoBA,cAAc,GAAG,CAAtC,CAAjB;AACD;;AACD;;AACF;AACE;AAZJ;AAcD,GAfD;;AAiBA,QAAMC,UAAU,GAAIF,IAAD,IAAU;AAC3B,YAAQA,IAAR;AACE,WAAK,UAAL;AACEN,QAAAA,aAAa,CAAEO,cAAD,IAAoBA,cAAc,GAAG,CAAtC,CAAb;AACA;;AACF,WAAK,UAAL;AACE,YAAIL,cAAc,KAAK,CAAvB,EAAyB;AACvBF,UAAAA,aAAa,CAAEO,cAAD,IAAoBA,cAAc,GAAG,CAAtC,CAAb;AACD,SAFD,MAEO;AACLJ,UAAAA,iBAAiB,CAAEI,cAAD,IAAoBA,cAAc,GAAG,CAAtC,CAAjB;AACD;;AACD;;AACF;AACE;AAZJ;AAcD,GAfD;;AAiBA,QAAME,WAAW,GAAG,MAAM;AACxBT,IAAAA,aAAa,CAAC,CAAD,CAAb;AACAG,IAAAA,iBAAiB,CAAC,CAAD,CAAjB;AACD,GAHD;;AAKA,SACE,4BAEE,MAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kCADJ,CAFF,EAkBE;AAAK,IAAA,SAAS,EAAExC,OAAO,CAACZ,IAAxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAEA,MAAC,aAAD;AAAe,IAAA,OAAO,EAAC,QAAvB;AAAgC,IAAA,SAAS,EAAEY,OAAO,CAAC+B,aAAnD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,MAAC,QAAD;AAAU,IAAA,EAAE,EAAE,EAAd;AAAkB,IAAA,EAAE,EAAE,EAAtB;AAA0B,IAAA,EAAE,EAAE,CAA9B;AAAiC,IAAA,SAAS,EAAE/B,OAAO,CAAC4B,aAApD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAK,IAAA,GAAG,EAAErD,IAAV;AAAgB,IAAA,GAAG,EAAC,KAApB;AAA0B,IAAA,SAAS,EAAEyB,OAAO,CAAC0B,OAA7C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,CADF,EAIE,MAAC,QAAD;AAAU,IAAA,EAAE,EAAE,EAAd;AAAkB,IAAA,EAAE,EAAE,EAAtB;AAA0B,IAAA,EAAE,EAAE,EAA9B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,MAAC,OAAD;AAAS,IAAA,gBAAgB,MAAzB;AAA0B,IAAA,UAAU,EAAEU,UAAtC;AAAkD,IAAA,SAAS,EAAE,MAAC,iBAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAA7D;AAAoF,IAAA,SAAS,EAAEpC,OAAO,CAAC6B,aAAvG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGY,KAAK,CAACM,GAAN,CAAWC,KAAD,IACT,MAAC,IAAD;AAAM,IAAA,GAAG,EAAEA,KAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,MAAC,SAAD;AAAW,IAAA,iBAAiB,EAAEvC,gBAA9B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAiDuC,KAAjD,CADF,CADD,CADH,CADF,CAJF,CAFA,EA2CE;AAAK,IAAA,SAAS,EAAEhD,OAAO,CAACwB,UAAxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGY,UAAU,KAAKK,KAAK,CAACQ,MAArB,GACC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,MAAC,UAAD;AAAY,IAAA,SAAS,EAAEjD,OAAO,CAACmB,YAA/B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,6CADF,EAIE,MAAC,MAAD;AAAQ,IAAA,OAAO,EAAE2B,WAAjB;AAA8B,IAAA,SAAS,EAAE9C,OAAO,CAACgB,MAAjD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aAJF,CADD,GAUC,4BACIoB,UAAU,KAAK,EAAf,GAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAEGH,cAAc,CAACG,UAAD,CAFjB,EAGE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,MAAC,MAAD;AAAQ,IAAA,QAAQ,EAAEA,UAAU,KAAK,CAAjC;AAAoC,IAAA,OAAO,EAAE,MAAMS,UAAU,CAAC,UAAD,CAA7D;AAA2E,IAAA,SAAS,EAAE7C,OAAO,CAACgB,MAA9F;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADF,EAIE,MAAC,MAAD;AACE,IAAA,OAAO,EAAC,WADV;AAEE,IAAA,KAAK,EAAC,SAFR;AAGE,IAAA,OAAO,EAAE,MAAM0B,UAAU,CAAC,UAAD,CAH3B;AAIE,IAAA,SAAS,EAAE1C,OAAO,CAACgB,MAJrB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAMGoB,UAAU,KAAKK,KAAK,CAACQ,MAAN,GAAe,CAA9B,GAAkC,QAAlC,GAA6C,MANhD,CAJF,CAHF,CAFA,GAsBA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAEE,MAAC,IAAD;AACE,IAAA,EAAE,EAAE,IADN;AAEE,IAAA,KAAK,EAAE;AAAEC,MAAAA,eAAe,EAAE;AAAnB;AAFT,KAGO,OAAO;AAAEC,IAAAA,OAAO,EAAE;AAAX,GAAP,GAA2B,EAHlC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAMGlB,cAAc,CAACG,UAAD,CANjB,CAFF,EAWE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,MAAC,MAAD;AAAQ,IAAA,QAAQ,EAAEA,UAAU,KAAK,CAAjC;AAAoC,IAAA,OAAO,EAAE,MAAMS,UAAU,CAAC,UAAD,CAA7D;AAA2E,IAAA,SAAS,EAAE7C,OAAO,CAACgB,MAA9F;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADF,EAIE,MAAC,MAAD;AACE,IAAA,OAAO,EAAC,WADV;AAEE,IAAA,KAAK,EAAC,SAFR;AAGE,IAAA,OAAO,EAAE,MAAM0B,UAAU,CAAC,UAAD,CAH3B;AAIE,IAAA,SAAS,EAAE1C,OAAO,CAACgB,MAJrB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAMGoB,UAAU,KAAKK,KAAK,CAACQ,MAAN,GAAe,CAA9B,GAAkC,QAAlC,GAA6C,MANhD,CAJF,CAXF,CAvBJ,CAXJ,CA3CF,EA8GIb,UAAU,KAAK,CAAf,IACA,MAAC,aAAD;AACE,IAAA,OAAO,EAAC,UADV;AAEE,IAAA,KAAK,EAAE,CAFT;AAGE,IAAA,QAAQ,EAAC,QAHX;AAIE,IAAA,UAAU,EAAEG,cAJd,CAKE;AALF;AAME,IAAA,OAAO,EAAE;AACPnD,MAAAA,IAAI,EAAEY,OAAO,CAACZ,IADP;AAEPkC,MAAAA,QAAQ,EAAEtB,OAAO,CAACsB;AAFX,KANX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IA/GJ,EA6HE,MAAC,aAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IA7HF,CAlBF,CADF;AAqJD","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\nimport { makeStyles, withStyles, useTheme } from '@material-ui/core/styles';\nimport clsx from 'clsx';\nimport Stepper from '@material-ui/core/Stepper';\nimport Step from '@material-ui/core/Step';\nimport StepLabel from '@material-ui/core/StepLabel';\nimport Check from '@material-ui/icons/Check';\nimport SettingsIcon from '@material-ui/icons/Settings';\nimport GroupAddIcon from '@material-ui/icons/GroupAdd';\nimport VideoLabelIcon from '@material-ui/icons/VideoLabel';\nimport StepConnector from '@material-ui/core/StepConnector';\nimport Button from '@material-ui/core/Button';\nimport Typography from '@material-ui/core/Typography';\nimport Head from 'next/head'\nimport Header from \"components/Header/Header.js\";\nimport HeaderLinks from \"components/Header/HeaderLinks.js\";\nimport GridContainer from \"components/Grid/GridContainer.js\";\nimport GridItem from \"components/Grid/GridItem.js\";\n\nimport Grow from '@material-ui/core/Grow';\n\nimport MobileStepper from '@material-ui/core/MobileStepper';\nimport KeyboardArrowLeft from '@material-ui/icons/KeyboardArrowLeft';\nimport KeyboardArrowRight from '@material-ui/icons/KeyboardArrowRight';\n\nimport SectionFooter from \"pages-sections/footer/SectionFooter.js\";\nimport SectionContacts from \"pages-sections/checkout/SectionContacts.js\";\n\nimport SectionIdentification from \"pages-sections/checkout/SectionIdentification.js\";\nimport SectionPayment from \"pages-sections/checkout/SectionPayment.js\";\nimport SectionAnamnese from \"pages-sections/checkout/SectionAnamnese.js\";\nimport SectionFinish from \"pages-sections/checkout/SectionFinish.js\";\n\nimport logo from \"assets/img/logo.png\";\n\n\n\n\n\nconst QontoConnector = withStyles({\n  alternativeLabel: {\n    top: 10,\n    left: 'calc(-50% + 16px)',\n    right: 'calc(50% + 16px)',\n  },\n  active: {\n    '& $line': {\n      borderColor: '#784af4',\n    },\n  },\n  completed: {\n    '& $line': {\n      borderColor: '#784af4',\n    },\n  },\n  line: {\n    borderColor: '#eaeaf0',\n    borderTopWidth: 3,\n    borderRadius: 1,\n  },\n})(StepConnector);\n\nconst useQontoStepIconStyles = makeStyles({\n  root: {\n    color: '#eaeaf0',\n    display: 'flex',\n    height: 22,\n    alignItems: 'center'     \n  },\n  active: {\n    color: '#784af4',\n  },\n  circle: {\n    width: 8,\n    height: 8,\n    borderRadius: '50%',\n    backgroundColor: 'currentColor',\n  },\n  completed: {\n    color: '#784af4',\n    zIndex: 1,\n    fontSize: 18,\n  },\n});\n\nfunction QontoStepIcon(props) {\n  const classes = useQontoStepIconStyles();\n  const { active, completed } = props;\n\n  return (\n    <div\n      className={clsx(classes.root, {\n        [classes.active]: active,\n      })}\n    >\n      {completed ? <Check className={classes.completed} /> : <div className={classes.circle} />}\n    </div>\n  );\n}\n\nQontoStepIcon.propTypes = {\n  /**\n   * Whether this step is active.\n   */\n  active: PropTypes.bool,\n  /**\n   * Mark the step as completed. Is passed to child components.\n   */\n  completed: PropTypes.bool,\n};\n\nconst ColorlibConnector = withStyles({\n  alternativeLabel: {\n    top: 22,\n  },\n  active: {\n    '& $line': {\n      backgroundImage:\n        'linear-gradient(90deg, rgba(66,92,199,1) 0%, rgba(59,191,173,1) 100%);',\n    },\n  },\n  completed: {\n    '& $line': {\n      backgroundImage:\n        'linear-gradient(90deg, rgba(66,92,199,1) 0%, rgba(59,191,173,1) 100%);',\n    },\n  },\n  line: {\n    height: 3,\n    border: 0,\n    backgroundColor: '#eaeaf0',\n    borderRadius: 1,\n  },\n})(StepConnector);\n\nconst useColorlibStepIconStyles = makeStyles({\n  root: {\n    backgroundColor: '#ccc',\n    zIndex: 1,\n    color: '#fff',\n    width: 50,\n    height: 50,\n    display: 'flex',    \n    borderRadius: '50%',\n    justifyContent: 'center',\n    alignItems: 'center',\n  },  \n  active: {\n    backgroundImage:\n      'linear-gradient(90deg, rgba(66,92,199,1) 0%, rgba(59,191,173,1) 100%)',\n    boxShadow: '0 4px 10px 0 rgba(0,0,0,.25)',\n  },\n  completed: {\n    backgroundImage:\n      'linear-gradient(90deg, rgba(66,92,199,1) 0%, rgba(59,191,173,1) 100%);',\n  }  \n});\n\nfunction ColorlibStepIcon(props) {\n  const classes = useColorlibStepIconStyles();\n  const { active, completed } = props;\n\n  const icons = {\n    1: <SettingsIcon />,\n    2: <GroupAddIcon />,\n    3: <VideoLabelIcon />,\n    4: <VideoLabelIcon />,\n  };\n\n  return (\n    <div\n      className={clsx(classes.root, {\n        [classes.active]: active,\n        [classes.completed]: completed,\n      })}\n    >\n      {icons[String(props.icon)]}\n    </div>\n  );\n}\n\nColorlibStepIcon.propTypes = {\n  /**\n   * Whether this step is active.\n   */\n  active: PropTypes.bool,\n  /**\n   * Mark the step as completed. Is passed to child components.\n   */\n  completed: PropTypes.bool,\n  /**\n   * The label displayed in the step icon.\n   */\n  icon: PropTypes.node,\n};\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    width: '100%',\n    backgroundColor: \"#ffffff\"\n  },\n  button: {\n    marginRight: theme.spacing(1),\n  },\n  instructions: {\n    marginTop: theme.spacing(1),\n    marginBottom: theme.spacing(1),\n  }, \n  progress: {\n    // display: \"none\n    margin: \"0 auto\"\n  },\n  textCenter: {\n    textAlign: \"center\"\n  },\n  imgLogo: {\n    maxHeight: \"90px\",\n    margin: \"0 auto\"\n  },\n  containerLogo: {\n    // textAlign: \"center\",\n    display: \"flex\",\n    alignItems: \"center\"\n  },\n  containerStep: {\n    padding: \"8px\"\n  },\n  containerTopo: {\n    padding: 0,\n    margin: 0\n  }\n}));\n\nfunction getSteps() {\n  return ['Identificação', 'Pagamento', 'Anamnese', \"Finalização\"];\n}\n\nfunction getStepContent(step) {\n  switch (step) {\n    case 0:\n      return <SectionIdentification/>;\n    case 1:\n      return <SectionPayment/>;\n    case 2:\n      return <SectionAnamnese/>\n    case 3:\n      return <SectionFinish/>\n    default:\n      return 'Unknown step';\n  }\n}\n\nexport default function CustomizedSteppers() {\n  const classes = useStyles();\n  const [activeStep, setActiveStep] = React.useState(0);\n  const [activeAnamnese, setActiveAnamnese] = React.useState(0);\n  const steps = getSteps();\n  const theme = useTheme();\n\n  const handleNext = (type) => {\n    switch (type) {\n      case \"Checkout\":\n        setActiveStep((prevActiveStep) => prevActiveStep + 1);\n        return\n      case \"Anamnese\":        \n        if (activeAnamnese === 4){\n          setActiveStep((prevActiveStep) => prevActiveStep + 1);   \n        } else {\n          setActiveAnamnese((prevActiveStep) => prevActiveStep + 1);   \n        }  \n        return\n      default:\n        return \n    }    \n  };\n\n  const handleBack = (type) => {\n    switch (type) {\n      case \"Checkout\":\n        setActiveStep((prevActiveStep) => prevActiveStep - 1);\n        return\n      case \"Anamnese\":\n        if (activeAnamnese === 0){\n          setActiveStep((prevActiveStep) => prevActiveStep - 1);   \n        } else {\n          setActiveAnamnese((prevActiveStep) => prevActiveStep - 1);   \n        }\n        return\n      default:\n        return \n    }    \n  };\n\n  const handleReset = () => {\n    setActiveStep(0);  \n    setActiveAnamnese(0);      \n  };\n\n  return (\n    <>\n\n      <Head>\n          <title>Checkout - Clicou Personal</title>\n          {/* <meta name=\"viewport\" content=\"initial-scale=1.0, width=device-width\" /> */}\n      </Head>\n      {/* <div>\n        <Head>\n          <title>Checkout - Clicou Personal</title>\n          <meta name=\"viewport\" content=\"initial-scale=1.0, width=device-width\" />\n        </Head>\n        <Header          \n          color=\"primary\"\n          // brand=\"NextJS Material Kit PRO\"\n          // imgBrand={image}\n          links={<HeaderLinks dropdownHoverColor=\"info\" />}\n        />\n      </div> */}\n      <div className={classes.root}>   \n\n      <GridContainer justify=\"center\" className={classes.containerTopo}> \n        <GridItem xs={12} sm={12} md={2} className={classes.containerLogo}>\n          <img src={logo} alt=\"...\" className={classes.imgLogo} />\n        </GridItem> \n        <GridItem xs={12} sm={12} md={10}>\n          <Stepper alternativeLabel activeStep={activeStep} connector={<ColorlibConnector />} className={classes.containerStep}>\n            {steps.map((label) => (\n              <Step key={label}>              \n                <StepLabel StepIconComponent={ColorlibStepIcon}>{label}</StepLabel>\n              </Step>\n            ))}\n          </Stepper>\n\n        </GridItem> \n      </GridContainer>\n\n        {/* <Stepper alternativeLabel activeStep={activeStep}>\n          {steps.map((label) => (\n            <Step key={label}>\n              <StepLabel>{label}</StepLabel>\n            </Step>\n          ))}\n        </Stepper>\n        <Stepper alternativeLabel activeStep={activeStep} connector={<QontoConnector />}>\n          {steps.map((label) => (\n            <Step key={label}>\n              <StepLabel StepIconComponent={QontoStepIcon}>{label}</StepLabel>\n            </Step>\n          ))}\n        </Stepper> */}\n\n\n\n        {/* <Stepper alternativeLabel activeStep={activeStep} connector={<ColorlibConnector />}>\n          {steps.map((label) => (\n            <Step key={label}>              \n              <StepLabel StepIconComponent={ColorlibStepIcon}>{label}</StepLabel>\n            </Step>\n          ))}\n        </Stepper> */}\n\n        <div className={classes.textCenter}>\n          {activeStep === steps.length ? (\n            <div>\n              <Typography className={classes.instructions}>\n                All steps completed - you&apos;re finished\n              </Typography>\n              <Button onClick={handleReset} className={classes.button}>\n                Reset\n              </Button>\n            </div>\n          ) : (\n            <>\n              { activeStep === 10 ? (\n\n                <div>\n                  {/* <Typography className={classes.instructions}>{getStepContent(activeStep)}</Typography>                 */}\n                  {getStepContent(activeStep)}                \n                  <div>\n                    <Button disabled={activeStep === 0} onClick={() => handleBack(\"Anamnese\")} className={classes.button}>\n                      Back\n                    </Button>\n                    <Button\n                      variant=\"contained\"\n                      color=\"primary\"\n                      onClick={() => handleNext(\"Anamnese\")}\n                      className={classes.button}\n                    >\n                      {activeStep === steps.length - 1 ? 'Finish' : 'Next'}\n                    </Button>\n                  </div>\n                </div>\n\n              ) : (\n\n                <div>\n                  \n                  <Grow \n                    in={true}\n                    style={{ transformOrigin: '0 0 0' }}\n                    {...(true ? { timeout: 1000 } : {})}\n                  >\n                    {/* <Typography className={classes.instructions}>{getStepContent(activeStep)}</Typography>      */}\n                    {getStepContent(activeStep)}\n                    {/* <SectionContacts/> */}\n                  </Grow>           \n                  <div>\n                    <Button disabled={activeStep === 0} onClick={() => handleBack(\"Checkout\")} className={classes.button}>\n                      Back\n                    </Button>\n                    <Button\n                      variant=\"contained\"\n                      color=\"primary\"\n                      onClick={() => handleNext(\"Checkout\")}\n                      className={classes.button}\n                    >\n                      {activeStep === steps.length - 1 ? 'Finish' : 'Next'}\n                    </Button>\n                  </div>\n                </div>\n\n              )}\n            </>\n            \n          )}\n        </div>\n\n\n        { activeStep === 2 && (\n          <MobileStepper\n            variant=\"progress\"\n            steps={5}\n            position=\"static\"\n            activeStep={activeAnamnese}\n            // className={classes.root}\n            classes={{\n              root: classes.root,          \n              progress: classes.progress,\n            }}\n          />\n        )}\n        \n\n        <SectionFooter/>\n\n      </div>\n    </>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}