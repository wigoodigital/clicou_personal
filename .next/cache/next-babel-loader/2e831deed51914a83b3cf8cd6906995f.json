{"ast":null,"code":"function ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\n/*!\n\n=========================================================\n* NextJS Material Kit PRO v1.1.0 based on Material Kit PRO - v2.0.2 (Bootstrap 4.0.0 Final Edition) and Material Kit PRO React v1.8.0\n=========================================================\n\n* Product Page: https://www.creative-tim.com/product/nextjs-material-kit-pro\n* Copyright 2020 Creative Tim (https://www.creative-tim.com)\n\n* Coded by Creative Tim\n\n=========================================================\n\n* The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software.\n\n*/\n// ##############################\n// // // Function that converts from hex color to rgb color\n// // // Example: input = #9c27b0 => output = 156, 39, 176\n// // // Example: input = 9c27b0 => output = 156, 39, 176\n// // // Example: input = #999 => output = 153, 153, 153\n// // // Example: input = 999 => output = 153, 153, 153\n// #############################\nconst hexToRgb = input => {\n  input = input + \"\";\n  input = input.replace(\"#\", \"\");\n  let hexRegex = /[0-9A-Fa-f]/g;\n\n  if (!hexRegex.test(input) || input.length !== 3 && input.length !== 6) {\n    throw new Error(\"input is not a valid hex color.\");\n  }\n\n  if (input.length === 3) {\n    let first = input[0];\n    let second = input[1];\n    let last = input[2];\n    input = first + first + second + second + last + last;\n  }\n\n  input = input.toUpperCase(input);\n  let first = input[0] + input[1];\n  let second = input[2] + input[3];\n  let last = input[4] + input[5];\n  return parseInt(first, 16) + \", \" + parseInt(second, 16) + \", \" + parseInt(last, 16);\n}; // ##############################\n// // // Variables - Styles that are used on more than one component\n// #############################\n\n\nconst drawerWidth = 260;\nconst primaryColor = [\"#425CC7\", \"#425cc7\", \"#425cc7\", \"#425cc7\", \"#425cc7\", \"#425cc7\"];\nconst secondaryColor = [\"#3BBFAD\"];\nconst warningColor = [\"#ff9800\", \"#ffa726\", \"#fb8c00\", \"#ffa21a\", \"#fcf8e3\", \"#faf2cc\", \"#ffe0b2\", \"#ffb74d\"];\nconst dangerColor = [\"#f44336\", \"#ef5350\", \"#e53935\", \"#f55a4e\", \"#f2dede\", \"#ebcccc\", \"ef9a9a\", \"#ef5350\"];\nconst successColor = [\"#4caf50\", \"#66bb6a\", \"#43a047\", \"#5cb860\", \"#dff0d8\", \"#d0e9c6\", \"#a5d6a7\", \"#66bb6a\"];\nconst infoColor = [\"#00acc1\", \"#26c6da\", \"#00acc1\", \"#00d3ee\", \"#d9edf7\", \"#c4e3f3\", \"#b2ebf2\", \"#4dd0e1\"];\nconst roseColor = [\"#e91e63\", \"#ec407a\", \"#d81b60\", \"#f8bbd0\", \"#f06292\"];\nconst grayColor = [\"#999\", \"#3C4858\", \"#eee\", \"#343434\", \"#585858\", \"#272727\", \"#ddd\", \"#6c757d\", \"#333\", \"#212121\", \"#777\", \"#D2D2D2\", \"#AAA\", \"#495057\", \"#e5e5e5\", \"#555\", \"#f9f9f9\", \"#ccc\", \"#444\", \"#f2f2f2\", \"#89229b\", \"#c0c1c2\", \"#9a9a9a\", \"#f5f5f5\", \"#505050\", \"#1f1f1f\"];\nconst whiteColor = \"#FFF\";\nconst blackColor = \"#000\";\nconst twitterColor = \"#55acee\";\nconst facebookColor = \"#3b5998\";\nconst googleColor = \"#dd4b39\";\nconst linkedinColor = \"#0976b4\";\nconst pinterestColor = \"#cc2127\";\nconst youtubeColor = \"#e52d27\";\nconst tumblrColor = \"#35465c\";\nconst behanceColor = \"#1769ff\";\nconst dribbbleColor = \"#ea4c89\";\nconst redditColor = \"#ff4500\";\nconst instagramColor = \"#125688\";\nconst transition = {\n  transition: \"all 0.33s cubic-bezier(0.685, 0.0473, 0.346, 1)\"\n};\nconst containerFluid = {\n  paddingRight: \"15px\",\n  paddingLeft: \"15px\",\n  marginRight: \"auto\",\n  marginLeft: \"auto\",\n  width: \"100%\"\n};\n\nconst container = _objectSpread({}, containerFluid, {\n  \"@media (min-width: 576px)\": {\n    maxWidth: \"540px\"\n  },\n  \"@media (min-width: 768px)\": {\n    maxWidth: \"720px\"\n  },\n  \"@media (min-width: 992px)\": {\n    maxWidth: \"960px\"\n  },\n  \"@media (min-width: 1200px)\": {\n    maxWidth: \"1140px\"\n  }\n});\n\nconst card = {\n  display: \"inline-block\",\n  position: \"relative\",\n  width: \"100%\",\n  margin: \"25px 0\",\n  boxShadow: \"0 1px 4px 0 rgba(\" + hexToRgb(blackColor) + \", 0.14)\",\n  borderRadius: \"3px\",\n  color: \"rgba(\" + hexToRgb(blackColor) + \", 0.87)\",\n  background: whiteColor\n};\nconst defaultFont = {\n  fontFamily: '\"Benton Sans\", \"Helvetica\", \"Arial\", sans-serif !important',\n  fontWeight: \"300\",\n  lineHeight: \"1.5em\"\n};\nconst boxShadow = {\n  boxShadow: \"0 10px 30px -12px rgba(\" + hexToRgb(blackColor) + \", 0.42), 0 4px 25px 0px rgba(\" + hexToRgb(blackColor) + \", 0.12), 0 8px 10px -5px rgba(\" + hexToRgb(blackColor) + \", 0.2)\"\n};\nconst primaryBoxShadow = {\n  boxShadow: \"0 12px 20px -10px rgba(\" + hexToRgb(primaryColor[0]) + \", 0.28), 0 4px 20px 0px rgba(\" + hexToRgb(blackColor) + \", 0.12), 0 7px 8px -5px rgba(\" + hexToRgb(primaryColor[0]) + \", 0.2)\"\n};\nconst infoBoxShadow = {\n  boxShadow: \"0 12px 20px -10px rgba(\" + hexToRgb(grayColor[5]) + \", 0.28), 0 4px 20px 0px rgba(\" + hexToRgb(blackColor) + \", 0.12), 0 7px 8px -5px rgba(\" + hexToRgb(grayColor[5]) + \", 0.2)\"\n};\nconst successBoxShadow = {\n  boxShadow: \"0 12px 20px -10px rgba(\" + hexToRgb(successColor[0]) + \", 0.28), 0 4px 20px 0px rgba(\" + hexToRgb(blackColor) + \", 0.12), 0 7px 8px -5px rgba(\" + hexToRgb(successColor[0]) + \", 0.2)\"\n};\nconst warningBoxShadow = {\n  boxShadow: \"0 12px 20px -10px rgba(\" + hexToRgb(warningColor[0]) + \", 0.28), 0 4px 20px 0px rgba(\" + hexToRgb(blackColor) + \", 0.12), 0 7px 8px -5px rgba(\" + hexToRgb(warningColor[0]) + \", 0.2)\"\n};\nconst dangerBoxShadow = {\n  boxShadow: \"0 12px 20px -10px rgba(\" + hexToRgb(dangerColor[0]) + \", 0.28), 0 4px 20px 0px rgba(\" + hexToRgb(blackColor) + \", 0.12), 0 7px 8px -5px rgba(\" + hexToRgb(dangerColor[0]) + \", 0.2)\"\n};\nconst roseBoxShadow = {\n  boxShadow: \"0 4px 20px 0px rgba(\" + hexToRgb(blackColor) + \", 0.14), 0 7px 10px -5px rgba(\" + hexToRgb(roseColor[0]) + \", 0.4)\"\n};\n\nconst warningCardHeader = _objectSpread({\n  color: whiteColor,\n  background: \"linear-gradient(60deg, \" + warningColor[1] + \", \" + warningColor[2] + \")\"\n}, warningBoxShadow);\n\nconst successCardHeader = _objectSpread({\n  color: whiteColor,\n  background: \"linear-gradient(60deg, \" + successColor[1] + \", \" + successColor[2] + \")\"\n}, successBoxShadow);\n\nconst dangerCardHeader = _objectSpread({\n  color: whiteColor,\n  background: \"linear-gradient(60deg, \" + dangerColor[1] + \", \" + dangerColor[2] + \")\"\n}, dangerBoxShadow);\n\nconst infoCardHeader = _objectSpread({\n  color: whiteColor,\n  background: \"linear-gradient(60deg, \" + infoColor[1] + \", \" + infoColor[2] + \")\"\n}, infoBoxShadow);\n\nconst primaryCardHeader = _objectSpread({\n  color: whiteColor,\n  background: \"linear-gradient(60deg, \" + primaryColor[1] + \", \" + primaryColor[2] + \")\"\n}, primaryBoxShadow);\n\nconst roseCardHeader = _objectSpread({\n  color: whiteColor,\n  background: \"linear-gradient(60deg, \" + roseColor[1] + \", \" + roseColor[2] + \")\"\n}, roseBoxShadow);\n\nconst cardActions = _objectSpread({\n  margin: \"0 20px 10px\",\n  paddingTop: \"10px\",\n  borderTop: \"1px solid  \" + grayColor[2],\n  height: \"auto\"\n}, defaultFont);\n\nconst cardHeader = {\n  margin: \"-30px 15px 0\",\n  borderRadius: \"3px\",\n  padding: \"15px\"\n};\nconst defaultBoxShadow = {\n  border: \"0\",\n  borderRadius: \"3px\",\n  boxShadow: \"0 10px 20px -12px rgba(\" + hexToRgb(blackColor) + \", 0.42), 0 3px 20px 0px rgba(\" + hexToRgb(blackColor) + \", 0.12), 0 8px 10px -5px rgba(\" + hexToRgb(blackColor) + \", 0.2)\",\n  padding: \"10px 0\",\n  transition: \"all 150ms ease 0s\"\n};\nconst title = {\n  color: whiteColor,\n  textDecoration: \"none\",\n  fontWeight: \"900\",\n  marginTop: \"30px\",\n  marginBottom: \"25px\",\n  minHeight: \"32px\",\n  fontFamily: '\"Benton Sans\", \"Helvetica\", \"Arial\", sans-serif !important'\n};\nconst cardTitle = {\n  \"&, & a\": _objectSpread({}, title, {\n    marginTop: \".625rem\",\n    marginBottom: \"0.75rem\",\n    minHeight: \"auto\",\n    fontWeight: 900\n  })\n};\nconst cardLink = {\n  \"& + $cardLink\": {\n    marginLeft: \"1.25rem\"\n  }\n};\nconst cardSubtitle = {\n  marginBottom: \"0\",\n  marginTop: \"-.375rem\"\n};\nconst main = {\n  background: whiteColor,\n  position: \"relative\",\n  zIndex: \"3\"\n};\nconst mainRaised = {\n  \"@media (max-width: 576px)\": {\n    marginTop: \"-30px\"\n  },\n  \"@media (max-width: 830px)\": {\n    marginLeft: \"10px\",\n    marginRight: \"10px\"\n  },\n  margin: \"-60px 30px 0px\",\n  borderRadius: \"6px\",\n  boxShadow: \"0 16px 24px 2px rgba(\" + hexToRgb(blackColor) + \", 0.14), 0 6px 30px 5px rgba(\" + hexToRgb(blackColor) + \", 0.12), 0 8px 10px -5px rgba(\" + hexToRgb(blackColor) + \", 0.2)\"\n};\nconst section = {\n  backgroundPosition: \"50%\",\n  backgroundSize: \"cover\"\n};\nconst sectionDark = {\n  backgroundColor: grayColor[3] // background:\n  //   \"radial-gradient(ellipse at center,\" +\n  //   grayColor[4] +\n  //   \" 0,\" +\n  //   grayColor[5] +\n  //   \" 100%)\"\n\n};\nconst sectionDescription = {\n  marginTop: \"130px\"\n};\nconst description = {\n  color: grayColor[0]\n};\nconst mlAuto = {\n  marginLeft: \"auto\"\n};\nconst mrAuto = {\n  marginRight: \"auto\"\n};\nconst btnLink = {\n  backgroundColor: \"transparent\",\n  boxShdow: \"none\",\n  marginTop: \"5px\",\n  marginBottom: \"5px\"\n};\nconst coloredShadow = {\n  // some jss/css to make the cards look a bit better on Internet Explorer\n  \"@media all and (-ms-high-contrast: none), (-ms-high-contrast: active)\": {\n    display: \"none !important\"\n  },\n  transform: \"scale(0.94)\",\n  top: \"12px\",\n  filter: \"blur(12px)\",\n  position: \"absolute\",\n  width: \"100%\",\n  height: \"100%\",\n  backgroundSize: \"cover\",\n  zIndex: \"-1\",\n  transition: \"opacity .45s\",\n  opacity: \"0\"\n};\nexport { //variables\ndrawerWidth, transition, container, containerFluid, boxShadow, card, defaultFont, primaryColor, secondaryColor, warningColor, dangerColor, successColor, infoColor, roseColor, grayColor, whiteColor, blackColor, twitterColor, facebookColor, googleColor, linkedinColor, pinterestColor, youtubeColor, tumblrColor, behanceColor, dribbbleColor, redditColor, instagramColor, primaryBoxShadow, infoBoxShadow, successBoxShadow, warningBoxShadow, dangerBoxShadow, roseBoxShadow, warningCardHeader, successCardHeader, dangerCardHeader, infoCardHeader, primaryCardHeader, roseCardHeader, cardActions, cardHeader, defaultBoxShadow, title, cardTitle, description, cardLink, cardSubtitle, main, mainRaised, section, sectionDark, sectionDescription, mlAuto, mrAuto, btnLink, coloredShadow, hexToRgb };","map":null,"metadata":{},"sourceType":"module"}