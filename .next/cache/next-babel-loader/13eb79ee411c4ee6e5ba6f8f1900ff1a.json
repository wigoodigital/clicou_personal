{"ast":null,"code":"var _jsxFileName = \"/Users/gabrieldossantos/Google Drive (webmaster@wigoo.com.br)/Wigoo Desenvolvimento/justfit.com.br/clicoupersonal.com.br/checkout/pages-sections/checkout/SectionPayment.js\";\nvar __jsx = React.createElement;\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nimport React from \"react\";\nimport { useEffect, useState } from \"react\";\nimport axios from 'axios'; // react components used to create a google map\n\nimport { withScriptjs, withGoogleMap, GoogleMap, Marker } from \"react-google-maps\";\nimport TagManager from 'react-gtm-module'; // @material-ui/core components\n\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Checkbox from \"@material-ui/core/Checkbox\";\nimport FormControlLabel from \"@material-ui/core/FormControlLabel\";\nimport InputAdornment from \"@material-ui/core/InputAdornment\";\nimport Box from '@material-ui/core/Box'; // @material-ui/icons\n\nimport PinDrop from \"@material-ui/icons/PinDrop\";\nimport Phone from \"@material-ui/icons/Phone\";\nimport Check from \"@material-ui/icons/Check\";\nimport Email from \"@material-ui/icons/Email\";\nimport EventIcon from '@material-ui/icons/Event';\nimport Favorite from \"@material-ui/icons/Favorite\";\nimport AssignmentInd from \"@material-ui/icons/AssignmentInd\";\nimport CircularProgress from '@material-ui/core/CircularProgress'; // core components\n\nimport GridContainer from \"components/Grid/GridContainer.js\";\nimport GridItem from \"components/Grid/GridItem.js\";\nimport InfoArea from \"components/InfoArea/InfoArea.js\";\nimport Card from \"components/Card/Card.js\";\nimport CardHeader from \"components/Card/CardHeader.js\";\nimport CardBody from \"components/Card/CardBody.js\";\nimport CardFooter from \"components/Card/CardFooter.js\";\nimport CustomInput from \"components/CustomInput/CustomInput.js\";\nimport Button from \"components/CustomButtons/Button.js\";\nimport SnackbarContent from \"components/Snackbar/SnackbarContent.js\";\nimport FormHelperText from '@material-ui/core/FormHelperText';\nimport FormControl from '@material-ui/core/FormControl';\nimport FormGroup from '@material-ui/core/FormGroup';\nimport Grow from '@material-ui/core/Grow';\nimport InputMask from \"react-input-mask\";\nimport MaskedInput from 'react-text-mask';\nimport PropTypes from 'prop-types';\nimport { useForm } from \"react-hook-form\";\nimport { yupResolver } from '@hookform/resolvers';\nimport * as yup from \"yup\";\nimport { setLocale } from 'yup';\nimport checkoutStyle from \"assets/jss/nextjs-material-kit-pro/pages/checkoutSections/checkoutStyle.js\";\nimport chipCard from \"assets/img/icon-cartoes/icon-chip.png\";\nimport visa from \"assets/img/icon-cartoes/icon-visa.png\";\nimport mastercard from \"assets/img/icon-cartoes/icon-master.png\";\nimport diners from \"assets/img/icon-cartoes/icon-diners.png\";\nimport amex from \"assets/img/icon-cartoes/icon-amex.png\";\nimport discover from \"assets/img/icon-cartoes/icon-discover.png\";\nimport hipercard from \"assets/img/icon-cartoes/icon-hipercard.png\";\nimport elo from \"assets/img/icon-cartoes/icon-elo.png\";\nimport jcb from \"assets/img/icon-cartoes/icon-jcb.png\";\nimport aura from \"assets/img/icon-cartoes/icon-aura.png\";\nimport nocard from \"assets/img/icon-cartoes/icon-nocard.png\";\nconst useStyles = makeStyles(checkoutStyle);\n\nfunction TextMaskCustom(props) {\n  const {\n    inputRef\n  } = props,\n        other = _objectWithoutProperties(props, [\"inputRef\"]);\n\n  return __jsx(MaskedInput, _extends({}, other, {\n    ref: ref => {\n      inputRef(ref ? ref.inputElement : null);\n    },\n    mask: [/[0-9]/, /[0-9]/, /[0-9]/, '.', /[0-9]/, /[0-9]/, /[0-9]/, '.', /[0-9]/, /[0-9]/, /[0-9]/, '-', /[0-9]/, /[0-9]/],\n    placeholderChar: '\\u2000',\n    guide: false,\n    showMask: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 5\n    }\n  }));\n}\n\nTextMaskCustom.propTypes = {\n  inputRef: PropTypes.func.isRequired\n};\n\nfunction ValidadeMask(props) {\n  const {\n    inputRef\n  } = props,\n        other = _objectWithoutProperties(props, [\"inputRef\"]);\n\n  return __jsx(MaskedInput, _extends({}, other, {\n    ref: ref => {\n      inputRef(ref ? ref.inputElement : null);\n    },\n    mask: [/[0-9]/, /[0-9]/, '/', /[0-9]/, /[0-9]/, /[0-9]/, /[0-9]/],\n    placeholderChar: '\\u2000',\n    guide: false,\n    showMask: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 97,\n      columnNumber: 5\n    }\n  }));\n}\n\nValidadeMask.propTypes = {\n  inputRef: PropTypes.func.isRequired\n};\n\nfunction CVVMask(props) {\n  const {\n    inputRef\n  } = props,\n        other = _objectWithoutProperties(props, [\"inputRef\"]);\n\n  return __jsx(MaskedInput, _extends({}, other, {\n    ref: ref => {\n      inputRef(ref ? ref.inputElement : null);\n    } // mask={['(', /[1-9]/, /\\d/, /\\d/, ')', ' ', /\\d/, /\\d/, /\\d/, '-', /\\d/, /\\d/, /\\d/, /\\d/]}\n    ,\n    mask: [/[0-9]/, /[0-9]/, /[0-9]/],\n    placeholderChar: '\\u2000',\n    guide: false,\n    showMask: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 118,\n      columnNumber: 5\n    }\n  }));\n}\n\nCVVMask.propTypes = {\n  inputRef: PropTypes.func.isRequired\n};\n\nfunction CardMask(props) {\n  const {\n    inputRef\n  } = props,\n        other = _objectWithoutProperties(props, [\"inputRef\"]);\n\n  return __jsx(MaskedInput, _extends({}, other, {\n    ref: ref => {\n      inputRef(ref ? ref.inputElement : null);\n    } // mask={['(', /[1-9]/, /\\d/, /\\d/, ')', ' ', /\\d/, /\\d/, /\\d/, '-', /\\d/, /\\d/, /\\d/, /\\d/]}\n    ,\n    mask: [/[0-9]/, /[0-9]/, /[0-9]/, /[0-9]/, ' ', /[0-9]/, /[0-9]/, /[0-9]/, /[0-9]/, ' ', /[0-9]/, /[0-9]/, /[0-9]/, /[0-9]/, ' ', /[0-9]/, /[0-9]/, /[0-9]/, /[0-9]/],\n    placeholderChar: '\\u2000',\n    guide: false,\n    showMask: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 141,\n      columnNumber: 5\n    }\n  }));\n}\n\nCardMask.propTypes = {\n  inputRef: PropTypes.func.isRequired\n};\nsetLocale({\n  mixed: {\n    notType: function notType(_ref) {\n      switch (_ref.type) {\n        case 'number':\n          return 'deve ser um número';\n\n        case 'string':\n          return 'deve ser um texto';\n\n        default:\n          return 'formato errado';\n      }\n    },\n    default: 'é inválido',\n    required: 'Desculpe, este campo é obrigatório',\n    oneOf: 'deve ser um dos seguintes valores: ${values}',\n    notOneOf: 'não pode ser um dos seguintes valores: ${values}'\n  },\n  string: {\n    length: 'deve ter exatamente ${length} caracteres',\n    min: 'deve ter pelo menos ${min} caracteres',\n    max: 'deve ter no máximo ${max} caracteres',\n    email: 'Por favor, informe um e-mail inválido',\n    url: 'deve ter um formato de URL válida',\n    trim: 'não deve conter espaços no início ou no fim.',\n    lowercase: 'deve estar em maiúsculo',\n    uppercase: 'deve estar em minúsculo'\n  },\n  number: {\n    min: 'deve ser no mínimo ${min}',\n    max: 'deve ser no máximo ${max}',\n    lessThan: 'deve ser menor que ${less}',\n    moreThan: 'deve ser maior que ${more}',\n    notEqual: 'não pode ser igual à ${notEqual}',\n    positive: 'deve ser um número posítivo',\n    negative: 'deve ser um número negativo',\n    integer: 'deve ser um número inteiro'\n  },\n  date: {\n    min: 'deve ser maior que a data ${min}',\n    max: 'deve ser menor que a data ${max}'\n  },\n  array: {\n    min: 'deve ter no mínimo ${min} itens',\n    max: 'deve ter no máximo ${max} itens'\n  }\n});\nconst regexCPF = /([0-9]{2}[\\.]?[0-9]{3}[\\.]?[0-9]{3}[\\/]?[0-9]{4}[-]?[0-9]{2})|([0-9]{3}[\\.]?[0-9]{3}[\\.]?[0-9]{3}[-]?[0-9]{2})/gm;\n\nfunction cpfValidate(cpf) {\n  console.log(\"Validatring\", cpf);\n  return cpf.length > 10;\n}\n\nfunction isValidCPF(cpf) {\n  if (typeof cpf !== \"string\") return false;\n  cpf = cpf.replace(/[\\s.-]*/igm, '');\n\n  if (!cpf || cpf.length != 11 || cpf == \"00000000000\" || cpf == \"11111111111\" || cpf == \"22222222222\" || cpf == \"33333333333\" || cpf == \"44444444444\" || cpf == \"55555555555\" || cpf == \"66666666666\" || cpf == \"77777777777\" || cpf == \"88888888888\" || cpf == \"99999999999\") {\n    return false;\n  }\n\n  var soma = 0;\n  var resto;\n\n  for (var i = 1; i <= 9; i++) soma = soma + parseInt(cpf.substring(i - 1, i)) * (11 - i);\n\n  resto = soma * 10 % 11;\n  if (resto == 10 || resto == 11) resto = 0;\n  if (resto != parseInt(cpf.substring(9, 10))) return false;\n  soma = 0;\n\n  for (var i = 1; i <= 10; i++) soma = soma + parseInt(cpf.substring(i - 1, i)) * (12 - i);\n\n  resto = soma * 10 % 11;\n  if (resto == 10 || resto == 11) resto = 0;\n  if (resto != parseInt(cpf.substring(10, 11))) return false;\n  return true;\n}\n\nfunction isValidPhone(phone) {\n  return /^(?:(?:\\+|00)?(55)\\s?)?(?:\\(?([1-9][0-9])\\)?\\s?)?(?:((?:9\\d|[2-9])\\d{3})\\-?(\\d{4}))$/.test(phone);\n}\n\nfunction isValidDate(date) {\n  return /^((((0?[1-9]|[12]\\d|3[01])[\\.\\-\\/](0?[13578]|1[02])      [\\.\\-\\/]((1[6-9]|[2-9]\\d)?\\d{2}))|((0?[1-9]|[12]\\d|30)[\\.\\-\\/](0?[13456789]|1[012])[\\.\\-\\/]((1[6-9]|[2-9]\\d)?\\d{2}))|((0?[1-9]|1\\d|2[0-8])[\\.\\-\\/]0?2[\\.\\-\\/]((1[6-9]|[2-9]\\d)?\\d{2}))|(29[\\.\\-\\/]0?2[\\.\\-\\/]((1[6-9]|[2-9]\\d)?(0[48]|[2468][048]|[13579][26])|((16|[2468][048]|[3579][26])00)|00)))|(((0[1-9]|[12]\\d|3[01])(0[13578]|1[02])((1[6-9]|[2-9]\\d)?\\d{2}))|((0[1-9]|[12]\\d|30)(0[13456789]|1[012])((1[6-9]|[2-9]\\d)?\\d{2}))|((0[1-9]|1\\d|2[0-8])02((1[6-9]|[2-9]\\d)?\\d{2}))|(2902((1[6-9]|[2-9]\\d)?(0[48]|[2468][048]|[13579][26])|((16|[2468][048]|[3579][26])00)|00))))$/.test(date);\n}\n\nfunction isValidDateCard(date) {\n  // return /^(0[1-9]|1[0-2])\\/?([0-9]{4}|[0-9]{2})$/.test(date);\n  return /^((0[1-9])|(1[0-2]))\\/((2009)|(20[1-2][0-9]))$/.test(date);\n}\n\nfunction getCardFlag(cardnumber) {\n  var cardnumber = cardnumber.replace(/[^0-9]+/g, '');\n  var cards = {\n    visa: /^4[0-9]{12}(?:[0-9]{3})/,\n    mastercard: /^5[1-5][0-9]{14}/,\n    diners: /^3(?:0[0-5]|[68][0-9])[0-9]{11}/,\n    amex: /^3[47][0-9]{13}/,\n    discover: /^6(?:011|5[0-9]{2})[0-9]{12}/,\n    hipercard: /^(606282\\d{10}(\\d{3})?)|(3841\\d{15})/,\n    elo: /^((((636368)|(438935)|(504175)|(451416)|(636297))\\d{0,10})|((5067)|(4576)|(4011))\\d{0,12})/,\n    jcb: /^(?:2131|1800|35\\d{3})\\d{11}/,\n    aura: /^(5078\\d{2})(\\d{2})(\\d{11})$/\n  };\n\n  for (var flag in cards) {\n    if (cards[flag].test(cardnumber)) {\n      return flag;\n    }\n  }\n\n  return false;\n}\n\nyup.addMethod(yup.string, \"cpf\", function (message) {\n  // return yup.mixed().test(\"cpf\", message || \"número de CPF inválido\", value => cpfValidate(value));\n  return yup.mixed().test(\"cpf\", message || \"número de CPF inválido\", value => isValidCPF(value));\n});\nyup.addMethod(yup.string, \"phone\", function (message) {\n  return yup.mixed().test(\"phone\", message || \"número de celular inválido\", value => isValidPhone(value));\n});\nyup.addMethod(yup.string, \"date\", function (message) {\n  return yup.mixed().test(\"date\", message || \"data inválida\", value => isValidDate(value));\n});\nyup.addMethod(yup.string, \"dateCard\", function (message) {\n  return yup.mixed().test(\"date\", message || \"Por favor, digite uma data válida\", value => isValidDateCard(value));\n});\nyup.addMethod(yup.string, \"card\", function (message) {\n  return yup.mixed().test(\"card\", message || \"Por favor, digite um número de cartão válido\", value => getCardFlag(value));\n});\nconst SignupSchema = yup.object().shape({\n  id: yup.string(),\n  number: yup.string().card().required(),\n  name: yup.string().required(),\n  validade: yup.string().dateCard().required(),\n  cvv: yup.string().matches(/^[0-9]{3}$/, 'Por favor, digite um CVV válido').required(),\n  cpf: yup.string().cpf(\"Por favor, informe um CPF válido\").required(),\n  cupom: yup.string()\n});\n\nconst formatValueParcela = value => {\n  let returnValue = new String(value).replace(\",\", \".\");\n  return parseFloat(returnValue).toFixed(2);\n};\n\nconst formatValuePresentation = value => {\n  let returnDecimal = formatValueParcela(value);\n  let returnValue = new String(returnDecimal).replace(\".\", \",\");\n  return returnValue;\n};\n\nconst descontoTotal = premios => {\n  let valorDesconto = 0;\n  premios.listaPremios.map((premio, i) => {\n    console.log(\"formatValueParcela(premio.valorDesconto)\");\n    console.log(formatValueParcela(premio.valorDesconto));\n    valorDesconto = parseFloat(valorDesconto + formatValueParcela(premio.valorDesconto));\n  });\n  console.log(valorDesconto);\n  return parseFloat(valorDesconto);\n}; // const schema = yup.object().shape({\n//   first: yup.string().required(),\n//   age: yup.number().positive().integer().required(),\n// });\n\n\nexport default function SectionPayment(props) {\n  // const { register, errors, handleSubmit} = useForm({\n  //   validationSchema: SignupSchema\n  // });\n  const {\n    register,\n    getValues,\n    trigger,\n    handleSubmit,\n    errors\n  } = useForm({\n    resolver: yupResolver(SignupSchema),\n    mode: \"onBlur\" // mode: \"onChange\"\n\n  });\n\n  const onSubmit = data => {\n    console.log(data); // alert(JSON.stringify(data, null));\n  };\n\n  useEffect(() => {\n    // history.pushState({}, null, \"/checkout/payment\");\n    TagManager.dataLayer({\n      dataLayer: {\n        event: \"paymentView\",\n        userId: '001',\n        userProject: 'project',\n        page: 'home'\n      }\n    });\n    TagManager.dataLayer({\n      dataLayer: {\n        'event': 'checkoutOption',\n        'ecommerce': {\n          'checkout_option': {\n            'actionField': {\n              'step': 2\n            }\n          }\n        }\n      }\n    });\n    getPlan();\n  }, []);\n  const [checked, setChecked] = React.useState([]);\n\n  const handleToggle = value => {\n    const currentIndex = checked.indexOf(value);\n    const newChecked = [...checked];\n\n    if (currentIndex === -1) {\n      newChecked.push(value);\n    } else {\n      newChecked.splice(currentIndex, 1);\n    }\n\n    setChecked(newChecked);\n  };\n\n  const [isAluno, setIsAluno] = React.useState(false);\n  const [activeForm, setActiveForm] = React.useState(0); // const [activeField, setActiveField] = React.useState(\"first\");\n\n  const [activeField, setActiveField] = React.useState([\"id\", \"number\", \"name\", \"validade\", \"cvv\", \"cpf\", \"cupom\"]);\n  const [isDisableNext, setIsDisableNext] = React.useState(true);\n  const [isLoadingCupom, setIsLoadingCupom] = React.useState(false);\n  const [insertCupom, setInsertCupom] = React.useState(false);\n  const [listaPremios, setListaPremios] = React.useState({\n    numeroCupom: \"\",\n    listaPremios: [{\n      percentualDesconto: \"0\",\n      valorDesconto: \"10\",\n      descricaoPremio: \"PARCELA 1\",\n      tipoPremio: \"MENSALIDADE\"\n    }]\n  });\n  const [plan, setPlan] = React.useState({\n    \"parcelamentoOperadora\": \"True\",\n    \"maxDivisao\": 1,\n    \"descricaoEncantamento\": \"\",\n    \"nome\": \"\",\n    \"mesAnuidade\": \"Parcela 0\",\n    \"codigo\": 2,\n    \"adesao\": 0.0,\n    \"anuidade\": 0.0,\n    \"horario\": \"LIVRE\",\n    \"fidelidade\": 10,\n    \"mensalidade\": 39.9,\n    \"primeiraParcela\": 39.9,\n    \"valorProdutos\": 0.0,\n    \"produtos\": \"\",\n    \"inicioMinimo\": null,\n    \"modalidades\": [\"ONLINE\"],\n    \"diasVencimento\": [],\n    \"inicioFuturo\": \"False\",\n    \"anuidadeAgora\": \"False\",\n    \"qtdCreditoPlanoCredito\": \"0\",\n    \"regimeRecorrencia\": \"False\",\n    \"matricula\": \"0.0\",\n    \"parcelasAnuidade\": []\n  });\n  const {\n    0: error,\n    1: setError\n  } = useState(false);\n  const [activeCard, setActiveCard] = React.useState(nocard);\n  const [cardField, setCardField] = React.useState({\n    number: \"0000 0000 0000 0000\",\n    name: \"NOME IMPRESSO NO CARTÃO\",\n    valid: \"00/00\",\n    cvv: \"000\",\n    cpf: \"\"\n  });\n\n  const handleNext = async type => {\n    console.log(activeField);\n    const result = await trigger(activeField); // const result = await trigger();\n\n    console.log(result);\n    console.log(\"cupom\");\n    console.log(getValues(\"cupom\"));\n    getCupom(getValues(\"cupom\"));\n\n    if (result) {\n      console.log(getValues());\n      const cardForm = getValues();\n      const codBrand = getBrandCod(cardForm.number);\n\n      if (activeForm == 0) {\n        let hoje = new Date();\n        let dia = (\"0\" + hoje.getDate()).slice(-2);\n        let mes = (\"0\" + (hoje.getMonth() + 1)).slice(-2);\n        let ano = hoje.getFullYear();\n        let anoFinal = hoje.getFullYear() + 1;\n        props.setDataSale(prevDataSale => {\n          return _objectSpread({}, prevDataSale, {\n            numeroCartao: cardForm.number.replace(/\\s+/g, ''),\n            nomeCartao: cardForm.name,\n            cvv: cardForm.cvv,\n            validade: cardForm.validade,\n            // brand: codBrand,\n            cpftitularcard: cardForm.cpf,\n            numeroCupomDesconto: cardForm.cupom,\n            anamnese: _objectSpread({}, prevDataSale.anamnese)\n          });\n        });\n        props.setStepCheckout(2);\n      } else {\n        setActiveForm(prevActiveStep => prevActiveStep + 1);\n        handleFieldActive(activeForm + 1);\n      }\n    }\n  };\n\n  React.useEffect(() => {\n    // props.setDataSale( prevDataSale => {\n    //   return {  \n    //     customer: {     \n    //     ...prevDataSale.customer,\n    //     card : {\n    //       ...prevDataSale.card,\n    //       ...cardField \n    //     }  \n    //     }         \n    //   }\n    // });    \n    console.log(cardField.number.replace(/\\s+/g, ''));\n  }, []);\n\n  const handleBack = type => {\n    if (activeForm !== 0) {\n      setActiveForm(prevActiveStep => prevActiveStep - 1);\n      handleFieldActive(activeForm - 1);\n    } else {\n      props.setStepCheckout(0);\n    }\n  };\n\n  const handleFocus = event => {\n    // event.target.select()\n    if (event.target.value == \"\") {\n      event.target.selectionStart = 0;\n      event.target.selectionEnd = 0;\n    } else {\n      event.target.select();\n    }\n  };\n\n  const handleFieldActive = step => {\n    console.log(\"handleFieldActive\");\n\n    switch (step) {\n      case 0:\n        setActiveField([\"id\", \"number\", \"name\", \"validade\", \"cvv\", \"cpf\"]);\n        break;\n\n      case 1:\n        setActiveField([\"nome\", \"email\", \"telefone\", \"dataNascimento\"]);\n        break;\n\n      case 2:\n        setActiveField([\"cep\", \"endereco\", \"numero\", \"complemento\", \"bairro\", \"estado\", \"cidade\"]);\n        break;\n\n      default:\n        setActiveField([\"id\", \"number\", \"name\", \"validade\", \"cvv\"]);\n        break;\n    }\n\n    console.log(step); // console.log(activeField);\n  };\n\n  const [payment, setPayment] = React.useState({\n    \"paymentMethod\": \"creditCard\",\n    \"card\": {\n      \"id\": 123456,\n      \"number\": \"5464082622239784\",\n      \"name\": \"nome no cartão\",\n      \"valid\": \"12/2022\",\n      \"cvv\": \"782\",\n      \"brand\": 1\n    }\n  });\n\n  const getPlan = async () => {\n    await axios.get(`https://admin.justfit.com.br/app.justfit/api/iAPIClicou/planosUnidade?codUnidade=1`).then(res => {\n      console.log(res.data);\n      props.setDataSale(prevDataSale => {\n        return _objectSpread({}, prevDataSale, {\n          unidade: 1,\n          plano: res.data.planos[0].codigo\n        });\n      });\n      setPlan(res.data.planos[0]);\n    }).catch(error => {\n      console.log(error);\n    });\n  };\n\n  const getBrandCod = numberCard => {\n    let brandCard = getCardFlag(numberCard);\n\n    switch (brandCard) {\n      case \"visa\":\n        return 1;\n        break;\n\n      case \"mastercard\":\n        return 2;\n        break;\n\n      case \"diners\":\n        return 3;\n        break;\n\n      case \"amex\":\n        return 4;\n        break;\n\n      case \"discover\":\n        return 8;\n        break;\n\n      case \"hipercard\":\n        return 9;\n        break;\n\n      case \"elo\":\n        return 6;\n        break;\n\n      case \"jcb\":\n        return 7;\n        break;\n\n      case \"aura\":\n        return 5;\n        break;\n\n      default:\n        return 0;\n        break;\n    }\n  };\n\n  const handlerOnBlur = event => {\n    let brandCard = getCardFlag(event.target.value);\n    let brandCod = 0; // handleFocus(event);\n\n    switch (brandCard) {\n      case \"visa\":\n        setActiveCard(visa);\n        brandCod = 1;\n        break;\n\n      case \"mastercard\":\n        setActiveCard(mastercard);\n        brandCod = 2;\n        break;\n\n      case \"diners\":\n        setActiveCard(diners);\n        brandCod = 3;\n        break;\n\n      case \"amex\":\n        setActiveCard(amex);\n        brandCod = 4;\n        break;\n\n      case \"discover\":\n        setActiveCard(discover);\n        brandCod = 8;\n        break;\n\n      case \"hipercard\":\n        setActiveCard(hipercard);\n        brandCod = 9;\n        break;\n\n      case \"elo\":\n        setActiveCard(elo);\n        brandCod = 6;\n        break;\n\n      case \"jcb\":\n        setActiveCard(jcb);\n        brandCod = 7;\n        break;\n\n      case \"aura\":\n        setActiveCard(aura);\n        brandCod = 5;\n        break;\n\n      default:\n        setActiveCard(nocard);\n        break;\n    }\n\n    console.log(brandCod);\n    setCardField({\n      number: getValues(\"number\"),\n      name: getValues(\"name\"),\n      valid: getValues(\"validade\"),\n      cvv: getValues(\"cvv\"),\n      brand: brandCod\n    });\n  };\n\n  const handlerOnChange = event => {\n    setCardField({\n      number: getValues(\"number\"),\n      name: getValues(\"name\"),\n      valid: getValues(\"validade\"),\n      cvv: getValues(\"cvv\")\n    });\n  };\n\n  const getCardFlag = cardnumber => {\n    var cardnumber = cardnumber.replace(/[^0-9]+/g, '');\n    var cards = {\n      visa: /^4[0-9]{12}(?:[0-9]{3})/,\n      mastercard: /^5[1-5][0-9]{14}/,\n      diners: /^3(?:0[0-5]|[68][0-9])[0-9]{11}/,\n      amex: /^3[47][0-9]{13}/,\n      discover: /^6(?:011|5[0-9]{2})[0-9]{12}/,\n      hipercard: /^(606282\\d{10}(\\d{3})?)|(3841\\d{15})/,\n      elo: /^((((636368)|(438935)|(504175)|(451416)|(636297))\\d{0,10})|((5067)|(4576)|(4011))\\d{0,12})/,\n      jcb: /^(?:2131|1800|35\\d{3})\\d{11}/,\n      aura: /^(5078\\d{2})(\\d{2})(\\d{11})$/\n    };\n\n    for (var flag in cards) {\n      if (cards[flag].test(cardnumber)) {\n        return flag;\n      }\n    }\n\n    return nocard;\n  };\n\n  const getCupom = async cupom => {\n    setIsLoadingCupom(true);\n    setInsertCupom(false);\n    setError(false);\n    await axios.post(`https://admin.justfit.com.br/app.justfit/api/LoadPersonalOnline/GetCupomInfo?cupom=${cupom}`).then(res => {\n      if (res.data.code != \"0\") {\n        console.log(\"error getCupom\");\n        setError(true);\n        return false;\n      }\n\n      console.log(res.data); // const withoutAspas = new String(res.data.cupom).replace(/[']/g,'\"');           \n      // const withoutAspas2 = new String(withoutAspas).replace('\"return\":\"{\"','\"return\": {\"');     \n      // const withoutAspas3 = new String(withoutAspas2).replace('}\"}', '}}');   \n      // console.log(JSON.parse(withoutAspas3));     \n\n      console.log(res.data.cupom.cupom);\n      setInsertCupom(true);\n      setListaPremios(res.data.cupom.cupom);\n    }).catch(error => {\n      console.log(error);\n      setError(true);\n    }).finally(() => {\n      setIsLoadingCupom(false);\n    });\n  };\n\n  const getPremios = premios => {\n    return __jsx(GridItem, {\n      xs: 12,\n      sm: 12,\n      md: 12,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 834,\n        columnNumber: 5\n      }\n    }, __jsx(\"h5\", {\n      className: classes.cardCategory,\n      style: {\n        color: \"#425cc7\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 837,\n        columnNumber: 11\n      }\n    }, \"Cupom aplicado\"), __jsx(\"small\", {\n      style: {\n        fontSize: \"1rem\",\n        fontWeight: \"900\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 838,\n        columnNumber: 11\n      }\n    }, '\\u00A0', \" \", premios.numeroCupom), __jsx(\"ul\", {\n      className: classes.itensResumo,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 839,\n        columnNumber: 11\n      }\n    }, premios.listaPremios.map((premio, i) => __jsx(React.Fragment, null, __jsx(\"li\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 842,\n        columnNumber: 17\n      }\n    }, __jsx(GridContainer, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 843,\n        columnNumber: 19\n      }\n    }, __jsx(GridItem, {\n      xs: 8,\n      sm: 8,\n      md: 8,\n      style: {\n        textAlign: \"left\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 844,\n        columnNumber: 21\n      }\n    }, premio.descricaoPremio), __jsx(GridItem, {\n      xs: 4,\n      sm: 4,\n      md: 4,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 847,\n        columnNumber: 21\n      }\n    }, i == 0 ? __jsx(React.Fragment, null, \"R$ \", formatValuePresentation(formatValueParcela(plan.primeiraParcela) - formatValueParcela(listaPremios.listaPremios[i].valorDesconto))) : __jsx(React.Fragment, null, \"R$ \", formatValuePresentation(formatValueParcela(plan.mensalidade) - formatValueParcela(listaPremios.listaPremios[i].valorDesconto)))))))), __jsx(\"li\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 867,\n        columnNumber: 13\n      }\n    }, __jsx(GridContainer, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 868,\n        columnNumber: 15\n      }\n    }, __jsx(GridItem, {\n      xs: 8,\n      sm: 8,\n      md: 8,\n      style: {\n        textAlign: \"left\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 869,\n        columnNumber: 17\n      }\n    }, \"OUTRAS PARCELAS\"), __jsx(GridItem, {\n      xs: 4,\n      sm: 4,\n      md: 4,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 872,\n        columnNumber: 17\n      }\n    }, \"R$ \", formatValuePresentation(plan.mensalidade))))));\n  };\n\n  const classes = useStyles();\n  return __jsx(\"div\", {\n    className: \"cd-section\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 901,\n      columnNumber: 5\n    }\n  }, __jsx(\"div\", {\n    className: classes.contacts + \" \" + classes.section // style={{ backgroundImage: `url(${city})` }}\n    ,\n    style: {\n      backgroundColor: \"#ffffff\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 903,\n      columnNumber: 7\n    }\n  }, __jsx(\"div\", {\n    className: classes.container,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 908,\n      columnNumber: 9\n    }\n  }, __jsx(GridContainer, {\n    justify: \"center\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 909,\n      columnNumber: 11\n    }\n  }, __jsx(Box, {\n    clone: true,\n    order: {\n      xs: 2,\n      sm: 2,\n      md: 1\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 911,\n      columnNumber: 13\n    }\n  }, __jsx(GridItem, {\n    xs: 12,\n    sm: 12,\n    md: 5,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 912,\n      columnNumber: 15\n    }\n  }, __jsx(Grow, _extends({\n    in: true,\n    style: {\n      transformOrigin: '0 0 0'\n    }\n  }, true ? {\n    timeout: 1000\n  } : {}, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 913,\n      columnNumber: 17\n    }\n  }), __jsx(Card, {\n    className: classes.card1,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 918,\n      columnNumber: 19\n    }\n  }, __jsx(\"form\", {\n    onSubmit: handleSubmit(onSubmit),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 919,\n      columnNumber: 19\n    }\n  }, __jsx(CardHeader, {\n    contact: true,\n    color: \"primary\",\n    className: classes.textCenter,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 920,\n      columnNumber: 21\n    }\n  }, __jsx(\"h4\", {\n    className: classes.cardTitle,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 925,\n      columnNumber: 23\n    }\n  }, \"Pagamento\")), __jsx(Grow, _extends({\n    in: activeForm === 0,\n    style: {\n      transformOrigin: '0 0 0',\n      display: activeForm === 0 ? \"block\" : \"none\"\n    }\n  }, activeForm === 0 ? {\n    timeout: 1000\n  } : {}, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 929,\n      columnNumber: 21\n    }\n  }), __jsx(CardBody, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 935,\n      columnNumber: 23\n    }\n  }, __jsx(Card, {\n    color: \"info\",\n    className: classes.containerCart,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 939,\n      columnNumber: 23\n    }\n  }, __jsx(CardBody, {\n    color: true,\n    className: classes.noPaddingBottom,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 940,\n      columnNumber: 25\n    }\n  }, __jsx(\"h5\", {\n    className: classes.cardCategorySocialWhite,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 942,\n      columnNumber: 29\n    }\n  }, __jsx(\"img\", {\n    src: chipCard,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 943,\n      columnNumber: 31\n    }\n  })), __jsx(\"h4\", {\n    className: classes.cardTitleWhite,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 946,\n      columnNumber: 29\n    }\n  }, cardField.number), __jsx(\"h4\", {\n    className: classes.cardTitleWhite,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 949,\n      columnNumber: 29\n    }\n  }, cardField.name)), __jsx(CardFooter, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 954,\n      columnNumber: 25\n    }\n  }, __jsx(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 955,\n      columnNumber: 27\n    }\n  }, __jsx(\"a\", {\n    href: \"#pablo\",\n    onClick: e => e.preventDefault(),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 956,\n      columnNumber: 29\n    }\n  }, __jsx(\"span\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 957,\n      columnNumber: 31\n    }\n  }, \"Valid\"), \" \", cardField.valid, \" \\xA0 \\xA0\", __jsx(\"span\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 958,\n      columnNumber: 31\n    }\n  }, \"CVV\"), \" \", cardField.cvv)), __jsx(\"div\", {\n    className: classes.statsWhite + \" \" + classes.mlAuto,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 961,\n      columnNumber: 27\n    }\n  }, __jsx(\"img\", {\n    src: activeCard,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 964,\n      columnNumber: 29\n    }\n  })))), __jsx(GridContainer, {\n    justify: \"center\",\n    className: classes.containerFieldsCard,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 969,\n      columnNumber: 25\n    }\n  }, __jsx(GridItem, {\n    xs: 12,\n    sm: 12,\n    md: 12,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 970,\n      columnNumber: 27\n    }\n  }, __jsx(CustomInput, {\n    labelText: \"N\\xFAmero do cart\\xE3o *\",\n    labelError: errors.number && errors.number.message,\n    error: errors.number ? true : false,\n    id: \"number\",\n    formControlProps: {\n      fullWidth: true\n    },\n    inputProps: {\n      type: \"tel\",\n      name: \"number\",\n      inputRef: register,\n      onClick: handleFocus,\n      inputComponent: CardMask,\n      onBlur: handlerOnBlur // startAdornment: (\n      //   <InputAdornment position=\"start\">\n      //     <AssignmentInd className={classes.inputIconsColor} />\n      //   </InputAdornment>\n      // )                           \n\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 971,\n      columnNumber: 29\n    }\n  })), __jsx(GridItem, {\n    xs: 12,\n    sm: 12,\n    md: 12,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 994,\n      columnNumber: 27\n    }\n  }, __jsx(CustomInput, {\n    labelText: \"Nome impresso no cart\\xE3o\",\n    labelError: errors.name && errors.name.message,\n    error: errors.name ? true : false,\n    id: \"name\",\n    formControlProps: {\n      fullWidth: true\n    },\n    inputProps: {\n      name: \"name\",\n      inputRef: register,\n      onChange: handlerOnChange\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 996,\n      columnNumber: 29\n    }\n  })), __jsx(GridItem, {\n    xs: 12,\n    sm: 12,\n    md: 6,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1011,\n      columnNumber: 27\n    }\n  }, __jsx(CustomInput, {\n    labelText: \"Validade (MM/AAAA)\",\n    labelError: errors.validade && errors.validade.message,\n    error: errors.validade ? true : false,\n    id: \"validade\",\n    formControlProps: {\n      fullWidth: true\n    },\n    inputProps: {\n      type: \"tel\",\n      name: \"validade\",\n      inputRef: register,\n      onClick: handleFocus,\n      inputComponent: ValidadeMask,\n      onChange: handlerOnChange\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1012,\n      columnNumber: 29\n    }\n  })), __jsx(GridItem, {\n    xs: 12,\n    sm: 12,\n    md: 6,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1030,\n      columnNumber: 27\n    }\n  }, __jsx(CustomInput, {\n    labelText: \"CVV\",\n    labelError: errors.cvv && errors.cvv.message,\n    error: errors.cvv ? true : false,\n    id: \"cvv\",\n    formControlProps: {\n      fullWidth: true\n    },\n    inputProps: {\n      type: \"tel\",\n      name: \"cvv\",\n      inputRef: register,\n      onClick: handleFocus,\n      inputComponent: CVVMask,\n      onChange: handlerOnChange\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1031,\n      columnNumber: 29\n    }\n  })), __jsx(GridItem, {\n    xs: 12,\n    sm: 12,\n    md: 12,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1049,\n      columnNumber: 27\n    }\n  }, __jsx(CustomInput, {\n    labelText: \"CPF do titular do cart\\xE3o\",\n    labelError: errors.cpf && errors.cpf.message,\n    error: errors.cpf ? true : false,\n    id: \"cpf\",\n    formControlProps: {\n      fullWidth: true\n    },\n    inputProps: {\n      name: \"cpf\",\n      inputRef: register,\n      inputComponent: TextMaskCustom\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1051,\n      columnNumber: 29\n    }\n  })), __jsx(GridItem, {\n    xs: 8,\n    sm: 8,\n    md: 9,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1066,\n      columnNumber: 27\n    }\n  }, __jsx(CustomInput, {\n    labelText: \"Inserir cupom\",\n    labelError: errors.cupom && errors.cupom.message,\n    error: errors.cupom ? true : false,\n    id: \"cupom\",\n    formControlProps: {\n      fullWidth: true\n    },\n    inputProps: {\n      name: \"cupom\",\n      inputRef: register,\n      onBlur: () => getCupom(getValues('cupom'))\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1068,\n      columnNumber: 29\n    }\n  })), __jsx(GridItem, {\n    xs: 4,\n    sm: 4,\n    md: 3,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1085,\n      columnNumber: 27\n    }\n  }, isLoadingCupom ? __jsx(CircularProgress, {\n    style: {\n      color: \"#425CD0\",\n      position: \"absolute\",\n      bottom: \"20px\",\n      left: \"20px\"\n    },\n    size: 30,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1088,\n      columnNumber: 33\n    }\n  }) : __jsx(Button, {\n    style: {\n      position: \"absolute\",\n      bottom: \"10px\",\n      left: \"10px\"\n    },\n    color: \"primary\",\n    onClick: () => getCupom(getValues('cupom')),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1091,\n      columnNumber: 33\n    }\n  }, \"Ok\")), error && __jsx(GridItem, {\n    xs: 12,\n    sm: 12,\n    md: 12,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1100,\n      columnNumber: 29\n    }\n  }, __jsx(SnackbarContent, {\n    message: __jsx(\"span\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1103,\n        columnNumber: 35\n      }\n    }, __jsx(\"b\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1104,\n        columnNumber: 37\n      }\n    }, \"Cupom n\\xE3o encontrado\"), \" \", __jsx(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1104,\n        columnNumber: 65\n      }\n    }), \" Insira um cupom v\\xE1lido\") // close\n    ,\n    color: \"danger\",\n    icon: \"info_outline\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1101,\n      columnNumber: 31\n    }\n  }))))), __jsx(CardFooter, {\n    className: classes.textCenter,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1123,\n      columnNumber: 21\n    }\n  }, __jsx(GridContainer, {\n    justify: \"center\",\n    style: {\n      margin: \"0\",\n      width: \"100%\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1124,\n      columnNumber: 23\n    }\n  }, __jsx(GridItem, {\n    xs: 12,\n    sm: 12,\n    md: 12,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1126,\n      columnNumber: 25\n    }\n  }, __jsx(Button, {\n    color: \"primary\",\n    fullWidth: true,\n    onClick: handleNext,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1129,\n      columnNumber: 27\n    }\n  }, \"Pr\\xF3ximo\")), __jsx(GridItem, {\n    xs: 12,\n    sm: 12,\n    md: 12,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1135,\n      columnNumber: 25\n    }\n  }, __jsx(Button, {\n    simple: true,\n    color: \"primary\",\n    fullWidth: true,\n    onClick: handleBack,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1137,\n      columnNumber: 27\n    }\n  }, \"Voltar\"))))))))), __jsx(Box, {\n    clone: true,\n    order: {\n      xs: 1,\n      sm: 1,\n      md: 2\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1151,\n      columnNumber: 13\n    }\n  }, __jsx(GridItem, {\n    xs: 12,\n    sm: 12,\n    md: 4,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1152,\n      columnNumber: 15\n    }\n  }, __jsx(Grow, _extends({\n    in: true,\n    style: {\n      transformOrigin: '0 0 0'\n    }\n  }, true ? {\n    timeout: 1000\n  } : {}, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1153,\n      columnNumber: 17\n    }\n  }), __jsx(Card, {\n    className: classes.card1,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1158,\n      columnNumber: 19\n    }\n  }, __jsx(\"form\", {\n    onSubmit: handleSubmit(onSubmit),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1159,\n      columnNumber: 19\n    }\n  }, __jsx(CardHeader, {\n    contact: true,\n    color: \"primary\",\n    className: classes.textCenter,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1160,\n      columnNumber: 21\n    }\n  }, __jsx(\"h4\", {\n    className: classes.cardTitle,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1165,\n      columnNumber: 23\n    }\n  }, \"Resumo\")), __jsx(Grow, _extends({\n    in: activeForm === 0,\n    style: {\n      transformOrigin: '0 0 0',\n      display: activeForm === 0 ? \"block\" : \"none\"\n    }\n  }, activeForm === 0 ? {\n    timeout: 1000\n  } : {}, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1169,\n      columnNumber: 21\n    }\n  }), __jsx(CardBody, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1175,\n      columnNumber: 23\n    }\n  }, __jsx(GridContainer, {\n    justify: \"center\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1179,\n      columnNumber: 25\n    }\n  }, __jsx(GridItem, {\n    xs: 12,\n    sm: 12,\n    md: 12,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1180,\n      columnNumber: 27\n    }\n  }, __jsx(Card, {\n    pricing: true,\n    plain: true,\n    className: classes.marginZero,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1181,\n      columnNumber: 29\n    }\n  }, __jsx(CardBody, {\n    pricing: true,\n    plain: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1182,\n      columnNumber: 31\n    }\n  }, __jsx(\"h5\", {\n    className: classes.cardCategory,\n    style: {\n      color: \"#425cc7\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1183,\n      columnNumber: 33\n    }\n  }, \"Plano \", __jsx(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1183,\n      columnNumber: 105\n    }\n  }), \" \", plan.nome), __jsx(\"hr\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1184,\n      columnNumber: 33\n    }\n  }), insertCupom ? __jsx(React.Fragment, null, __jsx(\"small\", {\n    style: {\n      fontSize: \"1rem\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1189,\n      columnNumber: 39\n    }\n  }, '\\u00A0', \" Primeira mensalidade\"), __jsx(\"h1\", {\n    className: classes.cardTitle,\n    style: {\n      color: \"#425cc7\",\n      marginTop: \"0.75rem\",\n      marginBottom: \"0 !important\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1190,\n      columnNumber: 39\n    }\n  }, __jsx(\"small\", {\n    style: {\n      color: \"#425cc7\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1191,\n      columnNumber: 41\n    }\n  }, \"R$\"), \" \", formatValuePresentation(formatValueParcela(plan.primeiraParcela) - formatValueParcela(listaPremios.listaPremios[0].valorDesconto))), __jsx(\"small\", {\n    style: {\n      fontSize: \"0.7rem\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1193,\n      columnNumber: 39\n    }\n  }, '\\u00A0', \" Valor anual do plano: R$ \", formatValuePresentation(formatValueParcela(plan.mensalidade) * formatValueParcela(plan.fidelidade) - descontoTotal(listaPremios))), getPremios(listaPremios)) : __jsx(React.Fragment, null, __jsx(\"small\", {\n    style: {\n      fontSize: \"1rem\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1198,\n      columnNumber: 39\n    }\n  }, '\\u00A0', \" \", plan.fidelidade, \" parcelas de\"), __jsx(\"h1\", {\n    className: classes.cardTitle,\n    style: {\n      color: \"#425cc7\",\n      marginTop: \"0.75rem\",\n      marginBottom: \"0 !important\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1199,\n      columnNumber: 39\n    }\n  }, __jsx(\"small\", {\n    style: {\n      color: \"#425cc7\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1200,\n      columnNumber: 41\n    }\n  }, \"R$\"), \" \", formatValuePresentation(plan.mensalidade)), __jsx(\"small\", {\n    style: {\n      fontSize: \"0.7rem\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1202,\n      columnNumber: 39\n    }\n  }, '\\u00A0', \" Valor anual do plano: R$ \", formatValuePresentation(formatValueParcela(plan.mensalidade) * formatValueParcela(plan.fidelidade)))), __jsx(\"ul\", {\n    className: classes.itensResumo,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1207,\n      columnNumber: 33\n    }\n  }, __jsx(\"li\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1208,\n      columnNumber: 35\n    }\n  }, __jsx(Check, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1209,\n      columnNumber: 37\n    }\n  }), \" Treinos Personalizados\"), __jsx(\"li\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1211,\n      columnNumber: 35\n    }\n  }, __jsx(Check, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1212,\n      columnNumber: 37\n    }\n  }), \" Acompanhamento em Grupo\"), __jsx(\"li\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1214,\n      columnNumber: 35\n    }\n  }, __jsx(Check, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1215,\n      columnNumber: 37\n    }\n  }), \" V\\xEDdeos Explicativos por Exerc\\xEDcio\"), __jsx(\"li\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1217,\n      columnNumber: 35\n    }\n  }, __jsx(Check, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1218,\n      columnNumber: 37\n    }\n  }), \" Master Classes Ao Vivo 1x/semana\")))))))))))))))));\n}","map":{"version":3,"sources":["/Users/gabrieldossantos/Google Drive (webmaster@wigoo.com.br)/Wigoo Desenvolvimento/justfit.com.br/clicoupersonal.com.br/checkout/pages-sections/checkout/SectionPayment.js"],"names":["React","useEffect","useState","axios","withScriptjs","withGoogleMap","GoogleMap","Marker","TagManager","makeStyles","Checkbox","FormControlLabel","InputAdornment","Box","PinDrop","Phone","Check","Email","EventIcon","Favorite","AssignmentInd","CircularProgress","GridContainer","GridItem","InfoArea","Card","CardHeader","CardBody","CardFooter","CustomInput","Button","SnackbarContent","FormHelperText","FormControl","FormGroup","Grow","InputMask","MaskedInput","PropTypes","useForm","yupResolver","yup","setLocale","checkoutStyle","chipCard","visa","mastercard","diners","amex","discover","hipercard","elo","jcb","aura","nocard","useStyles","TextMaskCustom","props","inputRef","other","ref","inputElement","propTypes","func","isRequired","ValidadeMask","CVVMask","CardMask","mixed","notType","_ref","type","default","required","oneOf","notOneOf","string","length","min","max","email","url","trim","lowercase","uppercase","number","lessThan","moreThan","notEqual","positive","negative","integer","date","array","regexCPF","cpfValidate","cpf","console","log","isValidCPF","replace","soma","resto","i","parseInt","substring","isValidPhone","phone","test","isValidDate","isValidDateCard","getCardFlag","cardnumber","cards","flag","addMethod","message","value","SignupSchema","object","shape","id","card","name","validade","dateCard","cvv","matches","cupom","formatValueParcela","returnValue","String","parseFloat","toFixed","formatValuePresentation","returnDecimal","descontoTotal","premios","valorDesconto","listaPremios","map","premio","SectionPayment","register","getValues","trigger","handleSubmit","errors","resolver","mode","onSubmit","data","dataLayer","event","userId","userProject","page","getPlan","checked","setChecked","handleToggle","currentIndex","indexOf","newChecked","push","splice","isAluno","setIsAluno","activeForm","setActiveForm","activeField","setActiveField","isDisableNext","setIsDisableNext","isLoadingCupom","setIsLoadingCupom","insertCupom","setInsertCupom","setListaPremios","numeroCupom","percentualDesconto","descricaoPremio","tipoPremio","plan","setPlan","error","setError","activeCard","setActiveCard","cardField","setCardField","valid","handleNext","result","getCupom","cardForm","codBrand","getBrandCod","hoje","Date","dia","getDate","slice","mes","getMonth","ano","getFullYear","anoFinal","setDataSale","prevDataSale","numeroCartao","nomeCartao","cpftitularcard","numeroCupomDesconto","anamnese","setStepCheckout","prevActiveStep","handleFieldActive","handleBack","handleFocus","target","selectionStart","selectionEnd","select","step","payment","setPayment","get","then","res","unidade","plano","planos","codigo","catch","numberCard","brandCard","handlerOnBlur","brandCod","brand","handlerOnChange","post","code","finally","getPremios","classes","cardCategory","color","fontSize","fontWeight","itensResumo","textAlign","primeiraParcela","mensalidade","contacts","section","backgroundColor","container","xs","sm","md","transformOrigin","timeout","card1","textCenter","cardTitle","display","containerCart","noPaddingBottom","cardCategorySocialWhite","cardTitleWhite","e","preventDefault","statsWhite","mlAuto","containerFieldsCard","fullWidth","onClick","inputComponent","onBlur","onChange","position","bottom","left","margin","width","marginZero","nome","marginTop","marginBottom","fidelidade"],"mappings":";;;;;;;;;;;;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,SAAT,EAAoBC,QAApB,QAAoC,OAApC;AACA,OAAOC,KAAP,MAAkB,OAAlB,C,CACA;;AACA,SACEC,YADF,EAEEC,aAFF,EAGEC,SAHF,EAIEC,MAJF,QAKO,mBALP;AAMA,OAAOC,UAAP,MAAuB,kBAAvB,C,CACA;;AACA,SAASC,UAAT,QAA2B,0BAA3B;AACA,OAAOC,QAAP,MAAqB,4BAArB;AACA,OAAOC,gBAAP,MAA6B,oCAA7B;AACA,OAAOC,cAAP,MAA2B,kCAA3B;AACA,OAAOC,GAAP,MAAgB,uBAAhB,C,CACA;;AACA,OAAOC,OAAP,MAAoB,4BAApB;AACA,OAAOC,KAAP,MAAkB,0BAAlB;AACA,OAAOC,KAAP,MAAkB,0BAAlB;AACA,OAAOC,KAAP,MAAkB,0BAAlB;AACA,OAAOC,SAAP,MAAsB,0BAAtB;AACA,OAAOC,QAAP,MAAqB,6BAArB;AACA,OAAOC,aAAP,MAA0B,kCAA1B;AACA,OAAOC,gBAAP,MAA6B,oCAA7B,C,CACA;;AACA,OAAOC,aAAP,MAA0B,kCAA1B;AACA,OAAOC,QAAP,MAAqB,6BAArB;AACA,OAAOC,QAAP,MAAqB,iCAArB;AACA,OAAOC,IAAP,MAAiB,yBAAjB;AACA,OAAOC,UAAP,MAAuB,+BAAvB;AACA,OAAOC,QAAP,MAAqB,6BAArB;AACA,OAAOC,UAAP,MAAuB,+BAAvB;AACA,OAAOC,WAAP,MAAwB,uCAAxB;AACA,OAAOC,MAAP,MAAmB,oCAAnB;AACA,OAAOC,eAAP,MAA4B,wCAA5B;AACA,OAAOC,cAAP,MAA2B,kCAA3B;AAEA,OAAOC,WAAP,MAAwB,+BAAxB;AACA,OAAOC,SAAP,MAAsB,6BAAtB;AAEA,OAAOC,IAAP,MAAiB,wBAAjB;AAGA,OAAOC,SAAP,MAAsB,kBAAtB;AACA,OAAOC,WAAP,MAAwB,iBAAxB;AACA,OAAOC,SAAP,MAAsB,YAAtB;AAEA,SAASC,OAAT,QAAwB,iBAAxB;AACA,SAASC,WAAT,QAA4B,qBAA5B;AACA,OAAO,KAAKC,GAAZ,MAAqB,KAArB;AACA,SAASC,SAAT,QAA0B,KAA1B;AAEA,OAAOC,aAAP,MAA0B,4EAA1B;AAEA,OAAOC,QAAP,MAAqB,uCAArB;AACA,OAAOC,IAAP,MAAiB,uCAAjB;AACA,OAAOC,UAAP,MAAuB,yCAAvB;AACA,OAAOC,MAAP,MAAmB,yCAAnB;AACA,OAAOC,IAAP,MAAiB,uCAAjB;AACA,OAAOC,QAAP,MAAqB,2CAArB;AACA,OAAOC,SAAP,MAAsB,4CAAtB;AACA,OAAOC,GAAP,MAAgB,sCAAhB;AACA,OAAOC,GAAP,MAAgB,sCAAhB;AACA,OAAOC,IAAP,MAAiB,uCAAjB;AACA,OAAOC,MAAP,MAAmB,yCAAnB;AAEA,MAAMC,SAAS,GAAG9C,UAAU,CAACkC,aAAD,CAA5B;;AAEA,SAASa,cAAT,CAAwBC,KAAxB,EAA+B;AAC7B,QAAM;AAAEC,IAAAA;AAAF,MAAyBD,KAA/B;AAAA,QAAqBE,KAArB,4BAA+BF,KAA/B;;AAEA,SACE,MAAC,WAAD,eACME,KADN;AAEE,IAAA,GAAG,EAAGC,GAAD,IAAS;AACZF,MAAAA,QAAQ,CAACE,GAAG,GAAGA,GAAG,CAACC,YAAP,GAAsB,IAA1B,CAAR;AACD,KAJH;AAKE,IAAA,IAAI,EAAE,CAAC,OAAD,EAAU,OAAV,EAAmB,OAAnB,EAA4B,GAA5B,EAAiC,OAAjC,EAA0C,OAA1C,EAAmD,OAAnD,EAA4D,GAA5D,EAAiE,OAAjE,EAA0E,OAA1E,EAAmF,OAAnF,EAA4F,GAA5F,EAAiG,OAAjG,EAA0G,OAA1G,CALR;AAME,IAAA,eAAe,EAAE,QANnB;AAOE,IAAA,KAAK,EAAE,KAPT;AAQE,IAAA,QAAQ,MARV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KADF;AAYD;;AAEDL,cAAc,CAACM,SAAf,GAA2B;AACzBJ,EAAAA,QAAQ,EAAEpB,SAAS,CAACyB,IAAV,CAAeC;AADA,CAA3B;;AAKA,SAASC,YAAT,CAAsBR,KAAtB,EAA6B;AAC3B,QAAM;AAAEC,IAAAA;AAAF,MAAyBD,KAA/B;AAAA,QAAqBE,KAArB,4BAA+BF,KAA/B;;AAEA,SACE,MAAC,WAAD,eACME,KADN;AAEE,IAAA,GAAG,EAAGC,GAAD,IAAS;AACZF,MAAAA,QAAQ,CAACE,GAAG,GAAGA,GAAG,CAACC,YAAP,GAAsB,IAA1B,CAAR;AACD,KAJH;AAKE,IAAA,IAAI,EAAE,CAAC,OAAD,EAAU,OAAV,EAAmB,GAAnB,EAAwB,OAAxB,EAAiC,OAAjC,EAA0C,OAA1C,EAAmD,OAAnD,CALR;AAME,IAAA,eAAe,EAAE,QANnB;AAOE,IAAA,KAAK,EAAE,KAPT;AAQE,IAAA,QAAQ,MARV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KADF;AAYD;;AAEDI,YAAY,CAACH,SAAb,GAAyB;AACvBJ,EAAAA,QAAQ,EAAEpB,SAAS,CAACyB,IAAV,CAAeC;AADF,CAAzB;;AAIA,SAASE,OAAT,CAAiBT,KAAjB,EAAwB;AACtB,QAAM;AAAEC,IAAAA;AAAF,MAAyBD,KAA/B;AAAA,QAAqBE,KAArB,4BAA+BF,KAA/B;;AAEA,SACE,MAAC,WAAD,eACME,KADN;AAEE,IAAA,GAAG,EAAGC,GAAD,IAAS;AACZF,MAAAA,QAAQ,CAACE,GAAG,GAAGA,GAAG,CAACC,YAAP,GAAsB,IAA1B,CAAR;AACD,KAJH,CAKE;AALF;AAME,IAAA,IAAI,EAAE,CAAC,OAAD,EAAU,OAAV,EAAmB,OAAnB,CANR;AAOE,IAAA,eAAe,EAAE,QAPnB;AAQE,IAAA,KAAK,EAAE,KART;AASE,IAAA,QAAQ,MATV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KADF;AAaD;;AAEDK,OAAO,CAACJ,SAAR,GAAoB;AAClBJ,EAAAA,QAAQ,EAAEpB,SAAS,CAACyB,IAAV,CAAeC;AADP,CAApB;;AAKA,SAASG,QAAT,CAAkBV,KAAlB,EAAyB;AACvB,QAAM;AAAEC,IAAAA;AAAF,MAAyBD,KAA/B;AAAA,QAAqBE,KAArB,4BAA+BF,KAA/B;;AAEA,SACE,MAAC,WAAD,eACME,KADN;AAEE,IAAA,GAAG,EAAGC,GAAD,IAAS;AACZF,MAAAA,QAAQ,CAACE,GAAG,GAAGA,GAAG,CAACC,YAAP,GAAsB,IAA1B,CAAR;AACD,KAJH,CAKE;AALF;AAME,IAAA,IAAI,EAAE,CAAC,OAAD,EAAU,OAAV,EAAmB,OAAnB,EAA4B,OAA5B,EAAqC,GAArC,EAA0C,OAA1C,EAAmD,OAAnD,EAA4D,OAA5D,EAAqE,OAArE,EAA8E,GAA9E,EAAmF,OAAnF,EAA4F,OAA5F,EAAqG,OAArG,EAA8G,OAA9G,EAAuH,GAAvH,EAA4H,OAA5H,EAAqI,OAArI,EAA8I,OAA9I,EAAuJ,OAAvJ,CANR;AAOE,IAAA,eAAe,EAAE,QAPnB;AAQE,IAAA,KAAK,EAAE,KART;AASE,IAAA,QAAQ,MATV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KADF;AAaD;;AAEDM,QAAQ,CAACL,SAAT,GAAqB;AACnBJ,EAAAA,QAAQ,EAAEpB,SAAS,CAACyB,IAAV,CAAeC;AADN,CAArB;AAOAtB,SAAS,CAAC;AACR0B,EAAAA,KAAK,EAAE;AACLC,IAAAA,OAAO,EAAE,SAASA,OAAT,CAAiBC,IAAjB,EAAuB;AAC9B,cAAQA,IAAI,CAACC,IAAb;AACE,aAAK,QAAL;AACE,iBAAO,oBAAP;;AACF,aAAK,QAAL;AACE,iBAAO,mBAAP;;AACF;AACE,iBAAO,gBAAP;AANJ;AAQD,KAVI;AAWLC,IAAAA,OAAO,EAAE,YAXJ;AAYLC,IAAAA,QAAQ,EAAE,oCAZL;AAaLC,IAAAA,KAAK,EAAE,8CAbF;AAcLC,IAAAA,QAAQ,EAAE;AAdL,GADC;AAiBRC,EAAAA,MAAM,EAAE;AACJC,IAAAA,MAAM,EAAE,0CADJ;AAEJC,IAAAA,GAAG,EAAE,uCAFD;AAGJC,IAAAA,GAAG,EAAE,sCAHD;AAIJC,IAAAA,KAAK,EAAE,uCAJH;AAKJC,IAAAA,GAAG,EAAE,mCALD;AAMJC,IAAAA,IAAI,EAAE,8CANF;AAOJC,IAAAA,SAAS,EAAE,yBAPP;AAQJC,IAAAA,SAAS,EAAE;AARP,GAjBA;AA2BRC,EAAAA,MAAM,EAAE;AACJP,IAAAA,GAAG,EAAE,2BADD;AAEJC,IAAAA,GAAG,EAAE,2BAFD;AAGJO,IAAAA,QAAQ,EAAE,4BAHN;AAIJC,IAAAA,QAAQ,EAAE,4BAJN;AAKJC,IAAAA,QAAQ,EAAE,kCALN;AAMJC,IAAAA,QAAQ,EAAE,6BANN;AAOJC,IAAAA,QAAQ,EAAE,6BAPN;AAQJC,IAAAA,OAAO,EAAE;AARL,GA3BA;AAqCJC,EAAAA,IAAI,EAAE;AACNd,IAAAA,GAAG,EAAE,kCADC;AAENC,IAAAA,GAAG,EAAE;AAFC,GArCF;AAyCJc,EAAAA,KAAK,EAAE;AACPf,IAAAA,GAAG,EAAE,iCADE;AAEPC,IAAAA,GAAG,EAAE;AAFE;AAzCH,CAAD,CAAT;AAgDA,MAAMe,QAAQ,GAAG,kHAAjB;;AACA,SAASC,WAAT,CAAqBC,GAArB,EAA0B;AACzBC,EAAAA,OAAO,CAACC,GAAR,CAAY,aAAZ,EAA2BF,GAA3B;AACA,SAAOA,GAAG,CAACnB,MAAJ,GAAa,EAApB;AACA;;AAED,SAASsB,UAAT,CAAoBH,GAApB,EAAyB;AACvB,MAAI,OAAOA,GAAP,KAAe,QAAnB,EAA6B,OAAO,KAAP;AAC7BA,EAAAA,GAAG,GAAGA,GAAG,CAACI,OAAJ,CAAY,YAAZ,EAA0B,EAA1B,CAAN;;AACA,MACI,CAACJ,GAAD,IACAA,GAAG,CAACnB,MAAJ,IAAc,EADd,IAEAmB,GAAG,IAAI,aAFP,IAGAA,GAAG,IAAI,aAHP,IAIAA,GAAG,IAAI,aAJP,IAKAA,GAAG,IAAI,aALP,IAMAA,GAAG,IAAI,aANP,IAOAA,GAAG,IAAI,aAPP,IAQAA,GAAG,IAAI,aARP,IASAA,GAAG,IAAI,aATP,IAUAA,GAAG,IAAI,aAVP,IAWAA,GAAG,IAAI,aAZX,EAaE;AACE,WAAO,KAAP;AACH;;AACD,MAAIK,IAAI,GAAG,CAAX;AACA,MAAIC,KAAJ;;AACA,OAAK,IAAIC,CAAC,GAAG,CAAb,EAAgBA,CAAC,IAAI,CAArB,EAAwBA,CAAC,EAAzB,EACIF,IAAI,GAAGA,IAAI,GAAGG,QAAQ,CAACR,GAAG,CAACS,SAAJ,CAAcF,CAAC,GAAC,CAAhB,EAAmBA,CAAnB,CAAD,CAAR,IAAmC,KAAKA,CAAxC,CAAd;;AACJD,EAAAA,KAAK,GAAID,IAAI,GAAG,EAAR,GAAc,EAAtB;AACA,MAAKC,KAAK,IAAI,EAAV,IAAkBA,KAAK,IAAI,EAA/B,EAAqCA,KAAK,GAAG,CAAR;AACrC,MAAIA,KAAK,IAAIE,QAAQ,CAACR,GAAG,CAACS,SAAJ,CAAc,CAAd,EAAiB,EAAjB,CAAD,CAArB,EAA8C,OAAO,KAAP;AAC9CJ,EAAAA,IAAI,GAAG,CAAP;;AACA,OAAK,IAAIE,CAAC,GAAG,CAAb,EAAgBA,CAAC,IAAI,EAArB,EAAyBA,CAAC,EAA1B,EACIF,IAAI,GAAGA,IAAI,GAAGG,QAAQ,CAACR,GAAG,CAACS,SAAJ,CAAcF,CAAC,GAAC,CAAhB,EAAmBA,CAAnB,CAAD,CAAR,IAAmC,KAAKA,CAAxC,CAAd;;AACJD,EAAAA,KAAK,GAAID,IAAI,GAAG,EAAR,GAAc,EAAtB;AACA,MAAKC,KAAK,IAAI,EAAV,IAAkBA,KAAK,IAAI,EAA/B,EAAqCA,KAAK,GAAG,CAAR;AACrC,MAAIA,KAAK,IAAIE,QAAQ,CAACR,GAAG,CAACS,SAAJ,CAAc,EAAd,EAAkB,EAAlB,CAAD,CAArB,EAAgD,OAAO,KAAP;AAChD,SAAO,IAAP;AACD;;AAED,SAASC,YAAT,CAAsBC,KAAtB,EAA4B;AAC1B,SAAO,uFAAuFC,IAAvF,CAA4FD,KAA5F,CAAP;AACD;;AAED,SAASE,WAAT,CAAqBjB,IAArB,EAA2B;AACzB,SAAO,inBAAinBgB,IAAjnB,CAAsnBhB,IAAtnB,CAAP;AACD;;AAED,SAASkB,eAAT,CAAyBlB,IAAzB,EAA+B;AAC7B;AACA,SAAO,iDAAiDgB,IAAjD,CAAsDhB,IAAtD,CAAP;AACD;;AAGD,SAASmB,WAAT,CAAqBC,UAArB,EAAiC;AAC/B,MAAIA,UAAU,GAAGA,UAAU,CAACZ,OAAX,CAAmB,UAAnB,EAA+B,EAA/B,CAAjB;AAEA,MAAIa,KAAK,GAAG;AACRpE,IAAAA,IAAI,EAAQ,yBADJ;AAERC,IAAAA,UAAU,EAAG,kBAFL;AAGRC,IAAAA,MAAM,EAAM,iCAHJ;AAIRC,IAAAA,IAAI,EAAQ,iBAJJ;AAKRC,IAAAA,QAAQ,EAAI,8BALJ;AAMRC,IAAAA,SAAS,EAAI,sCANL;AAORC,IAAAA,GAAG,EAAU,4FAPL;AAQRC,IAAAA,GAAG,EAAU,8BARL;AASRC,IAAAA,IAAI,EAAQ;AATJ,GAAZ;;AAYA,OAAK,IAAI6D,IAAT,IAAiBD,KAAjB,EAAwB;AACpB,QAAGA,KAAK,CAACC,IAAD,CAAL,CAAYN,IAAZ,CAAiBI,UAAjB,CAAH,EAAiC;AAC7B,aAAOE,IAAP;AACH;AACJ;;AAED,SAAO,KAAP;AACD;;AAGDzE,GAAG,CAAC0E,SAAJ,CAAc1E,GAAG,CAACmC,MAAlB,EAA0B,KAA1B,EAAiC,UAASwC,OAAT,EAAkB;AAClD;AACA,SAAO3E,GAAG,CAAC2B,KAAJ,GAAYwC,IAAZ,CAAiB,KAAjB,EAAwBQ,OAAO,IAAI,wBAAnC,EAA6DC,KAAK,IAAIlB,UAAU,CAACkB,KAAD,CAAhF,CAAP;AACA,CAHD;AAKA5E,GAAG,CAAC0E,SAAJ,CAAc1E,GAAG,CAACmC,MAAlB,EAA0B,OAA1B,EAAmC,UAASwC,OAAT,EAAkB;AACpD,SAAO3E,GAAG,CAAC2B,KAAJ,GAAYwC,IAAZ,CAAiB,OAAjB,EAA0BQ,OAAO,IAAI,4BAArC,EAAmEC,KAAK,IAAIX,YAAY,CAACW,KAAD,CAAxF,CAAP;AACA,CAFD;AAIA5E,GAAG,CAAC0E,SAAJ,CAAc1E,GAAG,CAACmC,MAAlB,EAA0B,MAA1B,EAAkC,UAASwC,OAAT,EAAkB;AACnD,SAAO3E,GAAG,CAAC2B,KAAJ,GAAYwC,IAAZ,CAAiB,MAAjB,EAAyBQ,OAAO,IAAI,eAApC,EAAqDC,KAAK,IAAIR,WAAW,CAACQ,KAAD,CAAzE,CAAP;AACA,CAFD;AAIA5E,GAAG,CAAC0E,SAAJ,CAAc1E,GAAG,CAACmC,MAAlB,EAA0B,UAA1B,EAAsC,UAASwC,OAAT,EAAkB;AACvD,SAAO3E,GAAG,CAAC2B,KAAJ,GAAYwC,IAAZ,CAAiB,MAAjB,EAAyBQ,OAAO,IAAI,mCAApC,EAAyEC,KAAK,IAAIP,eAAe,CAACO,KAAD,CAAjG,CAAP;AACA,CAFD;AAIA5E,GAAG,CAAC0E,SAAJ,CAAc1E,GAAG,CAACmC,MAAlB,EAA0B,MAA1B,EAAkC,UAASwC,OAAT,EAAkB;AACnD,SAAO3E,GAAG,CAAC2B,KAAJ,GAAYwC,IAAZ,CAAiB,MAAjB,EAAyBQ,OAAO,IAAI,8CAApC,EAAoFC,KAAK,IAAIN,WAAW,CAACM,KAAD,CAAxG,CAAP;AACA,CAFD;AAOA,MAAMC,YAAY,GAAG7E,GAAG,CAAC8E,MAAJ,GAAaC,KAAb,CAAmB;AACtCC,EAAAA,EAAE,EAAEhF,GAAG,CACJmC,MADC,EADkC;AAGtCS,EAAAA,MAAM,EAAE5C,GAAG,CACRmC,MADK,GAEL8C,IAFK,GAGLjD,QAHK,EAH8B;AAOtCkD,EAAAA,IAAI,EAAElF,GAAG,CACNmC,MADG,GAEHH,QAFG,EAPgC;AAUtCmD,EAAAA,QAAQ,EAAEnF,GAAG,CACVmC,MADO,GAEPiD,QAFO,GAGPpD,QAHO,EAV4B;AActCqD,EAAAA,GAAG,EAAErF,GAAG,CACLmC,MADE,GAEFmD,OAFE,CAEM,YAFN,EAEoB,iCAFpB,EAGFtD,QAHE,EAdiC;AAkBtCuB,EAAAA,GAAG,EAAEvD,GAAG,CACLmC,MADE,GAEFoB,GAFE,CAEE,kCAFF,EAGFvB,QAHE,EAlBiC;AAsBtCuD,EAAAA,KAAK,EAAEvF,GAAG,CACPmC,MADI;AAtB+B,CAAnB,CAArB;;AA8BA,MAAMqD,kBAAkB,GAAIZ,KAAD,IAAW;AACpC,MAAIa,WAAW,GAAI,IAAIC,MAAJ,CAAWd,KAAX,EAAkBjB,OAAlB,CAA0B,GAA1B,EAA+B,GAA/B,CAAnB;AACA,SAAOgC,UAAU,CAACF,WAAD,CAAV,CAAwBG,OAAxB,CAAgC,CAAhC,CAAP;AACD,CAHD;;AAKA,MAAMC,uBAAuB,GAAIjB,KAAD,IAAW;AACzC,MAAIkB,aAAa,GAAGN,kBAAkB,CAACZ,KAAD,CAAtC;AACA,MAAIa,WAAW,GAAI,IAAIC,MAAJ,CAAWI,aAAX,EAA0BnC,OAA1B,CAAkC,GAAlC,EAAuC,GAAvC,CAAnB;AACA,SAAO8B,WAAP;AACD,CAJD;;AAMA,MAAMM,aAAa,GAAIC,OAAD,IAAa;AAEjC,MAAIC,aAAa,GAAG,CAApB;AAEAD,EAAAA,OAAO,CAACE,YAAR,CAAqBC,GAArB,CAAyB,CAACC,MAAD,EAAStC,CAAT,KAAe;AACtCN,IAAAA,OAAO,CAACC,GAAR,CAAY,0CAAZ;AACAD,IAAAA,OAAO,CAACC,GAAR,CAAY+B,kBAAkB,CAACY,MAAM,CAACH,aAAR,CAA9B;AACAA,IAAAA,aAAa,GAAGN,UAAU,CAAEM,aAAa,GAAIT,kBAAkB,CAACY,MAAM,CAACH,aAAR,CAArC,CAA1B;AACD,GAJD;AAMAzC,EAAAA,OAAO,CAACC,GAAR,CAAYwC,aAAZ;AAEA,SAAON,UAAU,CAAEM,aAAF,CAAjB;AACD,CAbD,C,CAiBA;AACA;AACA;AACA;;;AAEA,eAAe,SAASI,cAAT,CAAwBrF,KAAxB,EAA+B;AAC5C;AACA;AACA;AACA,QAAM;AAAEsF,IAAAA,QAAF;AAAYC,IAAAA,SAAZ;AAAuBC,IAAAA,OAAvB;AAAgCC,IAAAA,YAAhC;AAA8CC,IAAAA;AAA9C,MAAyD5G,OAAO,CAAC;AACrE6G,IAAAA,QAAQ,EAAE5G,WAAW,CAAC8E,YAAD,CADgD;AAErE+B,IAAAA,IAAI,EAAE,QAF+D,CAGrE;;AAHqE,GAAD,CAAtE;;AAKA,QAAMC,QAAQ,GAAGC,IAAI,IAAI;AACvBtD,IAAAA,OAAO,CAACC,GAAR,CAAYqD,IAAZ,EADuB,CAEvB;AACD,GAHD;;AAMAtJ,EAAAA,SAAS,CAAC,MAAM;AACd;AACAO,IAAAA,UAAU,CAACgJ,SAAX,CAAqB;AACnBA,MAAAA,SAAS,EAAE;AACTC,QAAAA,KAAK,EAAE,aADE;AAETC,QAAAA,MAAM,EAAE,KAFC;AAGTC,QAAAA,WAAW,EAAE,SAHJ;AAITC,QAAAA,IAAI,EAAE;AAJG;AADQ,KAArB;AASApJ,IAAAA,UAAU,CAACgJ,SAAX,CAAqB;AACnBA,MAAAA,SAAS,EAAE;AACT,iBAAS,gBADA;AAET,qBAAa;AACX,6BAAmB;AACjB,2BAAe;AAAC,sBAAQ;AAAT;AADE;AADR;AAFJ;AADQ,KAArB;AAWAK,IAAAA,OAAO;AAER,GAxBQ,EAwBN,EAxBM,CAAT;AA2BA,QAAM,CAACC,OAAD,EAAUC,UAAV,IAAwB/J,KAAK,CAACE,QAAN,CAAe,EAAf,CAA9B;;AACA,QAAM8J,YAAY,GAAG3C,KAAK,IAAI;AAC5B,UAAM4C,YAAY,GAAGH,OAAO,CAACI,OAAR,CAAgB7C,KAAhB,CAArB;AACA,UAAM8C,UAAU,GAAG,CAAC,GAAGL,OAAJ,CAAnB;;AACA,QAAIG,YAAY,KAAK,CAAC,CAAtB,EAAyB;AACvBE,MAAAA,UAAU,CAACC,IAAX,CAAgB/C,KAAhB;AACD,KAFD,MAEO;AACL8C,MAAAA,UAAU,CAACE,MAAX,CAAkBJ,YAAlB,EAAgC,CAAhC;AACD;;AACDF,IAAAA,UAAU,CAACI,UAAD,CAAV;AACD,GATD;;AAWA,QAAM,CAACG,OAAD,EAAUC,UAAV,IAAwBvK,KAAK,CAACE,QAAN,CAAe,KAAf,CAA9B;AACA,QAAM,CAACsK,UAAD,EAAaC,aAAb,IAA8BzK,KAAK,CAACE,QAAN,CAAe,CAAf,CAApC,CAvD4C,CAwD5C;;AACA,QAAM,CAACwK,WAAD,EAAcC,cAAd,IAAgC3K,KAAK,CAACE,QAAN,CAAe,CAAC,IAAD,EAAM,QAAN,EAAe,MAAf,EAAsB,UAAtB,EAAkC,KAAlC,EAAyC,KAAzC,EAAgD,OAAhD,CAAf,CAAtC;AACA,QAAM,CAAC0K,aAAD,EAAgBC,gBAAhB,IAAoC7K,KAAK,CAACE,QAAN,CAAe,IAAf,CAA1C;AACA,QAAM,CAAC4K,cAAD,EAAiBC,iBAAjB,IAAsC/K,KAAK,CAACE,QAAN,CAAe,KAAf,CAA5C;AACA,QAAM,CAAC8K,WAAD,EAAcC,cAAd,IAAgCjL,KAAK,CAACE,QAAN,CAAe,KAAf,CAAtC;AACA,QAAM,CAACyI,YAAD,EAAeuC,eAAf,IAAkClL,KAAK,CAACE,QAAN,CACtC;AACEiL,IAAAA,WAAW,EAAE,EADf;AAEExC,IAAAA,YAAY,EAAE,CAAC;AACbyC,MAAAA,kBAAkB,EAAE,GADP;AAEb1C,MAAAA,aAAa,EAAE,IAFF;AAGb2C,MAAAA,eAAe,EAAE,WAHJ;AAIbC,MAAAA,UAAU,EAAE;AAJC,KAAD;AAFhB,GADsC,CAAxC;AAWA,QAAM,CAACC,IAAD,EAAOC,OAAP,IAAkBxL,KAAK,CAACE,QAAN,CACtB;AACE,6BAAwB,MAD1B;AAEE,kBAAa,CAFf;AAGE,6BAAwB,EAH1B;AAIE,YAAO,EAJT;AAKE,mBAAc,WALhB;AAME,cAAS,CANX;AAOE,cAAS,GAPX;AAQE,gBAAW,GARb;AASE,eAAU,OATZ;AAUE,kBAAa,EAVf;AAWE,mBAAc,IAXhB;AAYE,uBAAkB,IAZpB;AAaE,qBAAgB,GAblB;AAcE,gBAAW,EAdb;AAeE,oBAAe,IAfjB;AAgBE,mBAAc,CACX,QADW,CAhBhB;AAmBE,sBAAiB,EAnBnB;AAsBE,oBAAe,OAtBjB;AAuBE,qBAAgB,OAvBlB;AAwBE,8BAAyB,GAxB3B;AAyBE,yBAAoB,OAzBtB;AA0BE,iBAAY,KA1Bd;AA2BE,wBAAmB;AA3BrB,GADsB,CAAxB;AAkCA,QAAM;AAAA,OAACuL,KAAD;AAAA,OAAQC;AAAR,MAAoBxL,QAAQ,CAAC,KAAD,CAAlC;AAEA,QAAM,CAACyL,UAAD,EAAaC,aAAb,IAA8B5L,KAAK,CAACE,QAAN,CAAeoD,MAAf,CAApC;AAEA,QAAM,CAACuI,SAAD,EAAYC,YAAZ,IAA4B9L,KAAK,CAACE,QAAN,CAAe;AAC/CmF,IAAAA,MAAM,EAAE,qBADuC;AAE/CsC,IAAAA,IAAI,EAAE,yBAFyC;AAG/CoE,IAAAA,KAAK,EAAE,OAHwC;AAI/CjE,IAAAA,GAAG,EAAE,KAJ0C;AAK/C9B,IAAAA,GAAG,EAAE;AAL0C,GAAf,CAAlC;;AASA,QAAMgG,UAAU,GAAG,MAAOzH,IAAP,IAAgB;AAEjC0B,IAAAA,OAAO,CAACC,GAAR,CAAYwE,WAAZ;AACA,UAAMuB,MAAM,GAAG,MAAMhD,OAAO,CAACyB,WAAD,CAA5B,CAHiC,CAIjC;;AACAzE,IAAAA,OAAO,CAACC,GAAR,CAAY+F,MAAZ;AAEAhG,IAAAA,OAAO,CAACC,GAAR,CAAY,OAAZ;AACAD,IAAAA,OAAO,CAACC,GAAR,CAAY8C,SAAS,CAAC,OAAD,CAArB;AACAkD,IAAAA,QAAQ,CAAClD,SAAS,CAAC,OAAD,CAAV,CAAR;;AAGA,QAAGiD,MAAH,EAAW;AACThG,MAAAA,OAAO,CAACC,GAAR,CAAY8C,SAAS,EAArB;AACA,YAAMmD,QAAQ,GAAGnD,SAAS,EAA1B;AACA,YAAMoD,QAAQ,GAAEC,WAAW,CAACF,QAAQ,CAAC9G,MAAV,CAA3B;;AAGA,UAAGmF,UAAU,IAAI,CAAjB,EAAmB;AAEjB,YAAI8B,IAAI,GAAG,IAAIC,IAAJ,EAAX;AACA,YAAIC,GAAG,GAAG,CAAC,MAAOF,IAAI,CAACG,OAAL,EAAR,EAAyBC,KAAzB,CAA+B,CAAC,CAAhC,CAAV;AACA,YAAIC,GAAG,GAAG,CAAC,OAAOL,IAAI,CAACM,QAAL,KAAkB,CAAzB,CAAD,EAA8BF,KAA9B,CAAoC,CAAC,CAArC,CAAV;AACA,YAAIG,GAAG,GAAGP,IAAI,CAACQ,WAAL,EAAV;AACA,YAAIC,QAAQ,GAAGT,IAAI,CAACQ,WAAL,KAAqB,CAApC;AAEArJ,QAAAA,KAAK,CAACuJ,WAAN,CAAmBC,YAAY,IAAI;AACjC,mCAEOA,YAFP;AAGIC,YAAAA,YAAY,EAAEf,QAAQ,CAAC9G,MAAT,CAAgBe,OAAhB,CAAwB,MAAxB,EAAgC,EAAhC,CAHlB;AAII+G,YAAAA,UAAU,EAAEhB,QAAQ,CAACxE,IAJzB;AAKIG,YAAAA,GAAG,EAAEqE,QAAQ,CAACrE,GALlB;AAMIF,YAAAA,QAAQ,EAAEuE,QAAQ,CAACvE,QANvB;AAOI;AACAwF,YAAAA,cAAc,EAAEjB,QAAQ,CAACnG,GAR7B;AASIqH,YAAAA,mBAAmB,EAAElB,QAAQ,CAACnE,KATlC;AAUIsF,YAAAA,QAAQ,oBACHL,YAAY,CAACK,QADV;AAVZ;AAgBD,SAjBD;AAkBA7J,QAAAA,KAAK,CAAC8J,eAAN,CAAsB,CAAtB;AACD,OA3BD,MA2BM;AACJ9C,QAAAA,aAAa,CAAE+C,cAAD,IAAoBA,cAAc,GAAG,CAAtC,CAAb;AACAC,QAAAA,iBAAiB,CAACjD,UAAU,GAAG,CAAd,CAAjB;AACD;AACF;AAGF,GApDD;;AAsDAxK,EAAAA,KAAK,CAACC,SAAN,CAAgB,MAAM;AAEpB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEAgG,IAAAA,OAAO,CAACC,GAAR,CAAY2F,SAAS,CAACxG,MAAV,CAAiBe,OAAjB,CAAyB,MAAzB,EAAiC,EAAjC,CAAZ;AAED,GAhBD,EAgBG,EAhBH;;AAoBA,QAAMsH,UAAU,GAAInJ,IAAD,IAAU;AAE3B,QAAGiG,UAAU,KAAK,CAAlB,EAAoB;AAClBC,MAAAA,aAAa,CAAE+C,cAAD,IAAoBA,cAAc,GAAG,CAAtC,CAAb;AACAC,MAAAA,iBAAiB,CAACjD,UAAU,GAAG,CAAd,CAAjB;AACD,KAHD,MAGK;AACH/G,MAAAA,KAAK,CAAC8J,eAAN,CAAsB,CAAtB;AACD;AAEF,GATD;;AAWA,QAAMI,WAAW,GAAIlE,KAAD,IAAW;AAC7B;AAEA,QAAGA,KAAK,CAACmE,MAAN,CAAavG,KAAb,IAAsB,EAAzB,EAA4B;AAC1BoC,MAAAA,KAAK,CAACmE,MAAN,CAAaC,cAAb,GAA8B,CAA9B;AACApE,MAAAA,KAAK,CAACmE,MAAN,CAAaE,YAAb,GAA4B,CAA5B;AACD,KAHD,MAGO;AACLrE,MAAAA,KAAK,CAACmE,MAAN,CAAaG,MAAb;AACD;AAEF,GAVD;;AAaA,QAAMN,iBAAiB,GAAIO,IAAD,IAAU;AAElC/H,IAAAA,OAAO,CAACC,GAAR,CAAY,mBAAZ;;AAEA,YAAQ8H,IAAR;AACE,WAAK,CAAL;AACErD,QAAAA,cAAc,CAAC,CAAC,IAAD,EAAM,QAAN,EAAe,MAAf,EAAsB,UAAtB,EAAkC,KAAlC,EAAyC,KAAzC,CAAD,CAAd;AACA;;AACF,WAAK,CAAL;AACEA,QAAAA,cAAc,CAAC,CAAC,MAAD,EAAQ,OAAR,EAAgB,UAAhB,EAA2B,gBAA3B,CAAD,CAAd;AACA;;AACF,WAAK,CAAL;AACEA,QAAAA,cAAc,CAAC,CAAC,KAAD,EAAO,UAAP,EAAkB,QAAlB,EAA4B,aAA5B,EAA0C,QAA1C,EAAoD,QAApD,EAA8D,QAA9D,CAAD,CAAd;AACA;;AACF;AACEA,QAAAA,cAAc,CAAC,CAAC,IAAD,EAAM,QAAN,EAAe,MAAf,EAAsB,UAAtB,EAAkC,KAAlC,CAAD,CAAd;AACA;AAZJ;;AAeA1E,IAAAA,OAAO,CAACC,GAAR,CAAY8H,IAAZ,EAnBkC,CAoBlC;AAED,GAtBD;;AA2BA,QAAM,CAACC,OAAD,EAAUC,UAAV,IAAwBlO,KAAK,CAACE,QAAN,CAAe;AAC3C,qBAAiB,YAD0B;AAE3C,YAAQ;AACT,YAAM,MADG;AAET,gBAAU,kBAFD;AAGT,cAAQ,gBAHC;AAIT,eAAS,SAJA;AAKN,aAAO,KALD;AAMN,eAAS;AANH;AAFmC,GAAf,CAA9B;;AAgBA,QAAM2J,OAAO,GAAG,YAAY;AAC1B,UAAM1J,KAAK,CAACgO,GAAN,CAAW,oFAAX,EACHC,IADG,CACEC,GAAG,IAAI;AACXpI,MAAAA,OAAO,CAACC,GAAR,CAAYmI,GAAG,CAAC9E,IAAhB;AACA9F,MAAAA,KAAK,CAACuJ,WAAN,CAAmBC,YAAY,IAAI;AACjC,iCACKA,YADL;AAEEqB,UAAAA,OAAO,EAAE,CAFX;AAGEC,UAAAA,KAAK,EAAEF,GAAG,CAAC9E,IAAJ,CAASiF,MAAT,CAAgB,CAAhB,EAAmBC;AAH5B;AAKD,OAND;AAQAjD,MAAAA,OAAO,CAAC6C,GAAG,CAAC9E,IAAJ,CAASiF,MAAT,CAAgB,CAAhB,CAAD,CAAP;AAED,KAbG,EAcHE,KAdG,CAcIjD,KAAD,IAAW;AAChBxF,MAAAA,OAAO,CAACC,GAAR,CAAYuF,KAAZ;AACD,KAhBG,CAAN;AAiBD,GAlBD;;AAqBA,QAAMY,WAAW,GAAIsC,UAAD,IAAgB;AAClC,QAAIC,SAAS,GAAG7H,WAAW,CAAC4H,UAAD,CAA3B;;AACA,YAAQC,SAAR;AACE,WAAK,MAAL;AACE,eAAO,CAAP;AACA;;AACF,WAAK,YAAL;AACE,eAAO,CAAP;AACA;;AACF,WAAK,QAAL;AACE,eAAO,CAAP;AACA;;AACF,WAAK,MAAL;AACE,eAAO,CAAP;AACA;;AACF,WAAK,UAAL;AACE,eAAO,CAAP;AACA;;AACF,WAAK,WAAL;AACE,eAAO,CAAP;AACA;;AACF,WAAK,KAAL;AACE,eAAO,CAAP;AACA;;AACF,WAAK,KAAL;AACE,eAAO,CAAP;AACA;;AACF,WAAK,MAAL;AACE,eAAO,CAAP;AACA;;AACF;AACE,eAAO,CAAP;AACA;AA9BJ;AAgCD,GAlCD;;AAoCA,QAAMC,aAAa,GAAIpF,KAAD,IAAW;AAC/B,QAAImF,SAAS,GAAG7H,WAAW,CAAC0C,KAAK,CAACmE,MAAN,CAAavG,KAAd,CAA3B;AAEA,QAAIyH,QAAQ,GAAG,CAAf,CAH+B,CAI/B;;AAEA,YAAQF,SAAR;AACE,WAAK,MAAL;AACEhD,QAAAA,aAAa,CAAC/I,IAAD,CAAb;AACAiM,QAAAA,QAAQ,GAAG,CAAX;AACA;;AACF,WAAK,YAAL;AACElD,QAAAA,aAAa,CAAC9I,UAAD,CAAb;AACAgM,QAAAA,QAAQ,GAAG,CAAX;AACA;;AACF,WAAK,QAAL;AACElD,QAAAA,aAAa,CAAC7I,MAAD,CAAb;AACA+L,QAAAA,QAAQ,GAAG,CAAX;AACA;;AACF,WAAK,MAAL;AACElD,QAAAA,aAAa,CAAC5I,IAAD,CAAb;AACA8L,QAAAA,QAAQ,GAAG,CAAX;AACA;;AACF,WAAK,UAAL;AACElD,QAAAA,aAAa,CAAC3I,QAAD,CAAb;AACA6L,QAAAA,QAAQ,GAAG,CAAX;AACA;;AACF,WAAK,WAAL;AACElD,QAAAA,aAAa,CAAC1I,SAAD,CAAb;AACA4L,QAAAA,QAAQ,GAAG,CAAX;AACA;;AACF,WAAK,KAAL;AACElD,QAAAA,aAAa,CAACzI,GAAD,CAAb;AACA2L,QAAAA,QAAQ,GAAG,CAAX;AACA;;AACF,WAAK,KAAL;AACElD,QAAAA,aAAa,CAACxI,GAAD,CAAb;AACA0L,QAAAA,QAAQ,GAAG,CAAX;AACA;;AACF,WAAK,MAAL;AACElD,QAAAA,aAAa,CAACvI,IAAD,CAAb;AACAyL,QAAAA,QAAQ,GAAG,CAAX;AACA;;AACF;AACElD,QAAAA,aAAa,CAACtI,MAAD,CAAb;AACA;AAvCJ;;AA0CA2C,IAAAA,OAAO,CAACC,GAAR,CAAY4I,QAAZ;AAEAhD,IAAAA,YAAY,CAAE;AACZzG,MAAAA,MAAM,EAAE2D,SAAS,CAAC,QAAD,CADL;AAEZrB,MAAAA,IAAI,EAAEqB,SAAS,CAAC,MAAD,CAFH;AAGZ+C,MAAAA,KAAK,EAAE/C,SAAS,CAAC,UAAD,CAHJ;AAIZlB,MAAAA,GAAG,EAAEkB,SAAS,CAAC,KAAD,CAJF;AAKZ+F,MAAAA,KAAK,EAAED;AALK,KAAF,CAAZ;AAUD,GA5DD;;AA6DA,QAAME,eAAe,GAAIvF,KAAD,IAAW;AACjCqC,IAAAA,YAAY,CAAE;AACZzG,MAAAA,MAAM,EAAE2D,SAAS,CAAC,QAAD,CADL;AAEZrB,MAAAA,IAAI,EAAEqB,SAAS,CAAC,MAAD,CAFH;AAGZ+C,MAAAA,KAAK,EAAE/C,SAAS,CAAC,UAAD,CAHJ;AAIZlB,MAAAA,GAAG,EAAEkB,SAAS,CAAC,KAAD;AAJF,KAAF,CAAZ;AAOD,GARD;;AAWA,QAAMjC,WAAW,GAAIC,UAAD,IAAgB;AAClC,QAAIA,UAAU,GAAGA,UAAU,CAACZ,OAAX,CAAmB,UAAnB,EAA+B,EAA/B,CAAjB;AAGA,QAAIa,KAAK,GAAG;AACRpE,MAAAA,IAAI,EAAQ,yBADJ;AAERC,MAAAA,UAAU,EAAG,kBAFL;AAGRC,MAAAA,MAAM,EAAM,iCAHJ;AAIRC,MAAAA,IAAI,EAAQ,iBAJJ;AAKRC,MAAAA,QAAQ,EAAI,8BALJ;AAMRC,MAAAA,SAAS,EAAI,sCANL;AAORC,MAAAA,GAAG,EAAU,4FAPL;AAQRC,MAAAA,GAAG,EAAU,8BARL;AASRC,MAAAA,IAAI,EAAQ;AATJ,KAAZ;;AAYA,SAAK,IAAI6D,IAAT,IAAiBD,KAAjB,EAAwB;AACpB,UAAGA,KAAK,CAACC,IAAD,CAAL,CAAYN,IAAZ,CAAiBI,UAAjB,CAAH,EAAiC;AAC7B,eAAOE,IAAP;AACH;AACJ;;AAED,WAAO5D,MAAP;AACH,GAvBC;;AAyBF,QAAM4I,QAAQ,GAAG,MAAOlE,KAAP,IAAiB;AAChC+C,IAAAA,iBAAiB,CAAC,IAAD,CAAjB;AACAE,IAAAA,cAAc,CAAC,KAAD,CAAd;AACAS,IAAAA,QAAQ,CAAC,KAAD,CAAR;AAEA,UAAMvL,KAAK,CAAC8O,IAAN,CAAY,sFAAqFjH,KAAM,EAAvG,EACHoG,IADG,CACEC,GAAG,IAAI;AAEX,UAAGA,GAAG,CAAC9E,IAAJ,CAAS2F,IAAT,IAAiB,GAApB,EAAwB;AACtBjJ,QAAAA,OAAO,CAACC,GAAR,CAAY,gBAAZ;AACAwF,QAAAA,QAAQ,CAAC,IAAD,CAAR;AACA,eAAO,KAAP;AACD;;AACDzF,MAAAA,OAAO,CAACC,GAAR,CAAYmI,GAAG,CAAC9E,IAAhB,EAPW,CASX;AACA;AACA;AAEA;;AAEAtD,MAAAA,OAAO,CAACC,GAAR,CAAYmI,GAAG,CAAC9E,IAAJ,CAASvB,KAAT,CAAeA,KAA3B;AAEAiD,MAAAA,cAAc,CAAC,IAAD,CAAd;AAEAC,MAAAA,eAAe,CAACmD,GAAG,CAAC9E,IAAJ,CAASvB,KAAT,CAAeA,KAAhB,CAAf;AAID,KAxBG,EAyBH0G,KAzBG,CAyBIjD,KAAD,IAAW;AAChBxF,MAAAA,OAAO,CAACC,GAAR,CAAYuF,KAAZ;AACAC,MAAAA,QAAQ,CAAC,IAAD,CAAR;AACD,KA5BG,EA6BHyD,OA7BG,CA6BK,MAAM;AACbpE,MAAAA,iBAAiB,CAAC,KAAD,CAAjB;AACD,KA/BG,CAAN;AAgCD,GArCD;;AAwCA,QAAOqE,UAAU,GAAI3G,OAAD,IAAa;AAE/B,WACE,MAAC,QAAD;AAAU,MAAA,EAAE,EAAE,EAAd;AAAkB,MAAA,EAAE,EAAE,EAAtB;AAA0B,MAAA,EAAE,EAAE,EAA9B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAGM;AAAI,MAAA,SAAS,EAAE4G,OAAO,CAACC,YAAvB;AAAqC,MAAA,KAAK,EAAE;AAAEC,QAAAA,KAAK,EAAE;AAAT,OAA5C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wBAHN,EAIM;AAAO,MAAA,KAAK,EAAE;AAAEC,QAAAA,QAAQ,EAAE,MAAZ;AAAoBC,QAAAA,UAAU,EAAE;AAAhC,OAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAwD,QAAxD,OAAmEhH,OAAO,CAAC0C,WAA3E,CAJN,EAKM;AAAI,MAAA,SAAS,EAAEkE,OAAO,CAACK,WAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACGjH,OAAO,CAACE,YAAR,CAAqBC,GAArB,CAAyB,CAACC,MAAD,EAAStC,CAAT,KACxB,4BACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,MAAC,aAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,MAAC,QAAD;AAAU,MAAA,EAAE,EAAE,CAAd;AAAiB,MAAA,EAAE,EAAE,CAArB;AAAwB,MAAA,EAAE,EAAE,CAA5B;AAA+B,MAAA,KAAK,EAAG;AAAEoJ,QAAAA,SAAS,EAAE;AAAb,OAAvC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACG9G,MAAM,CAACwC,eADV,CADF,EAIE,MAAC,QAAD;AAAU,MAAA,EAAE,EAAE,CAAd;AAAiB,MAAA,EAAE,EAAE,CAArB;AAAwB,MAAA,EAAE,EAAE,CAA5B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI9E,CAAC,IAAI,CAAL,GACA,mCACK+B,uBAAuB,CAAEL,kBAAkB,CAACsD,IAAI,CAACqE,eAAN,CAAlB,GAA2C3H,kBAAkB,CAACU,YAAY,CAACA,YAAb,CAA0BpC,CAA1B,EAA6BmC,aAA9B,CAA/D,CAD5B,CADA,GAKA,mCACKJ,uBAAuB,CAAEL,kBAAkB,CAACsD,IAAI,CAACsE,WAAN,CAAlB,GAAuC5H,kBAAkB,CAACU,YAAY,CAACA,YAAb,CAA0BpC,CAA1B,EAA6BmC,aAA9B,CAA3D,CAD5B,CANJ,CAJF,CADF,CADF,CADD,CADH,EA4BE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,MAAC,aAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,MAAC,QAAD;AAAU,MAAA,EAAE,EAAE,CAAd;AAAiB,MAAA,EAAE,EAAE,CAArB;AAAwB,MAAA,EAAE,EAAE,CAA5B;AAA+B,MAAA,KAAK,EAAG;AAAEiH,QAAAA,SAAS,EAAE;AAAb,OAAvC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,yBADF,EAIE,MAAC,QAAD;AAAU,MAAA,EAAE,EAAE,CAAd;AAAiB,MAAA,EAAE,EAAE,CAArB;AAAwB,MAAA,EAAE,EAAE,CAA5B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cACMrH,uBAAuB,CAACiD,IAAI,CAACsE,WAAN,CAD7B,CAJF,CADF,CA5BF,CALN,CADF;AA2DD,GA7DD;;AAoEE,QAAMR,OAAO,GAAG9L,SAAS,EAAzB;AACA,SACE;AAAK,IAAA,SAAS,EAAC,YAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAEE;AACE,IAAA,SAAS,EAAE8L,OAAO,CAACS,QAAR,GAAmB,GAAnB,GAAyBT,OAAO,CAACU,OAD9C,CAEE;AAFF;AAGE,IAAA,KAAK,EAAE;AAAEC,MAAAA,eAAe,EAAE;AAAnB,KAHT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAKE;AAAK,IAAA,SAAS,EAAEX,OAAO,CAACY,SAAxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,MAAC,aAAD;AAAe,IAAA,OAAO,EAAC,QAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAEE,MAAC,GAAD;AAAK,IAAA,KAAK,MAAV;AAAW,IAAA,KAAK,EAAE;AAAEC,MAAAA,EAAE,EAAE,CAAN;AAASC,MAAAA,EAAE,EAAE,CAAb;AAAgBC,MAAAA,EAAE,EAAE;AAApB,KAAlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,MAAC,QAAD;AAAU,IAAA,EAAE,EAAE,EAAd;AAAkB,IAAA,EAAE,EAAE,EAAtB;AAA0B,IAAA,EAAE,EAAE,CAA9B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,MAAC,IAAD;AACE,IAAA,EAAE,EAAE,IADN;AAEE,IAAA,KAAK,EAAE;AAAEC,MAAAA,eAAe,EAAE;AAAnB;AAFT,KAGO,OAAO;AAAEC,IAAAA,OAAO,EAAE;AAAX,GAAP,GAA2B,EAHlC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAKE,MAAC,IAAD;AAAM,IAAA,SAAS,EAAEjB,OAAO,CAACkB,KAAzB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACA;AAAM,IAAA,QAAQ,EAAErH,YAAY,CAACI,QAAD,CAA5B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,MAAC,UAAD;AACE,IAAA,OAAO,MADT;AAEE,IAAA,KAAK,EAAC,SAFR;AAGE,IAAA,SAAS,EAAE+F,OAAO,CAACmB,UAHrB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAKE;AAAI,IAAA,SAAS,EAAEnB,OAAO,CAACoB,SAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBALF,CADF,EAUE,MAAC,IAAD;AACE,IAAA,EAAE,EAAEjG,UAAU,KAAK,CADrB;AAEE,IAAA,KAAK,EAAE;AAAE6F,MAAAA,eAAe,EAAE,OAAnB;AAA4BK,MAAAA,OAAO,EAAElG,UAAU,KAAK,CAAf,GAAmB,OAAnB,GAA6B;AAAlE;AAFT,KAGOA,UAAU,KAAK,CAAf,GAAmB;AAAE8F,IAAAA,OAAO,EAAE;AAAX,GAAnB,GAAuC,EAH9C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAME,MAAC,QAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAIA,MAAC,IAAD;AAAM,IAAA,KAAK,EAAC,MAAZ;AAAmB,IAAA,SAAS,EAAEjB,OAAO,CAACsB,aAAtC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,MAAC,QAAD;AAAU,IAAA,KAAK,MAAf;AAAgB,IAAA,SAAS,EAAEtB,OAAO,CAACuB,eAAnC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAEI;AAAI,IAAA,SAAS,EAAEvB,OAAO,CAACwB,uBAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAK,IAAA,GAAG,EAAEjO,QAAV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,CAFJ,EAMI;AAAI,IAAA,SAAS,EAAEyM,OAAO,CAACyB,cAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGjF,SAAS,CAACxG,MADb,CANJ,EASI;AAAI,IAAA,SAAS,EAAEgK,OAAO,CAACyB,cAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGjF,SAAS,CAAClE,IADb,CATJ,CADF,EAeE,MAAC,UAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAG,IAAA,IAAI,EAAC,QAAR;AAAiB,IAAA,OAAO,EAAEoJ,CAAC,IAAIA,CAAC,CAACC,cAAF,EAA/B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aADF,OACsBnF,SAAS,CAACE,KADhC,gBAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WAFF,OAEoBF,SAAS,CAAC/D,GAF9B,CADF,CADF,EAOE;AACE,IAAA,SAAS,EAAEuH,OAAO,CAAC4B,UAAR,GAAqB,GAArB,GAA2B5B,OAAO,CAAC6B,MADhD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAGE;AAAK,IAAA,GAAG,EAAEvF,UAAV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAHF,CAPF,CAfF,CAJA,EAkCE,MAAC,aAAD;AAAe,IAAA,OAAO,EAAC,QAAvB;AAAgC,IAAA,SAAS,EAAG0D,OAAO,CAAC8B,mBAApD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,MAAC,QAAD;AAAU,IAAA,EAAE,EAAE,EAAd;AAAkB,IAAA,EAAE,EAAE,EAAtB;AAA0B,IAAA,EAAE,EAAE,EAA9B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,MAAC,WAAD;AACE,IAAA,SAAS,EAAC,0BADZ;AAEE,IAAA,UAAU,EAAEhI,MAAM,CAAC9D,MAAP,IAAiB8D,MAAM,CAAC9D,MAAP,CAAc+B,OAF7C;AAGE,IAAA,KAAK,EAAE+B,MAAM,CAAC9D,MAAP,GAAgB,IAAhB,GAAuB,KAHhC;AAIE,IAAA,EAAE,EAAC,QAJL;AAKE,IAAA,gBAAgB,EAAE;AAChB+L,MAAAA,SAAS,EAAE;AADK,KALpB;AAQE,IAAA,UAAU,EAAE;AACV7M,MAAAA,IAAI,EAAE,KADI;AAEVoD,MAAAA,IAAI,EAAE,QAFI;AAGVjE,MAAAA,QAAQ,EAAEqF,QAHA;AAIVsI,MAAAA,OAAO,EAAE1D,WAJC;AAKV2D,MAAAA,cAAc,EAAEnN,QALN;AAMVoN,MAAAA,MAAM,EAAE1C,aANE,CAOV;AACA;AACA;AACA;AACA;;AAXU,KARd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,CADF,EAyBE,MAAC,QAAD;AAAU,IAAA,EAAE,EAAE,EAAd;AAAkB,IAAA,EAAE,EAAE,EAAtB;AAA0B,IAAA,EAAE,EAAE,EAA9B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAEE,MAAC,WAAD;AACE,IAAA,SAAS,EAAC,4BADZ;AAEE,IAAA,UAAU,EAAE1F,MAAM,CAACxB,IAAP,IAAewB,MAAM,CAACxB,IAAP,CAAYP,OAFzC;AAGE,IAAA,KAAK,EAAE+B,MAAM,CAACxB,IAAP,GAAc,IAAd,GAAqB,KAH9B;AAIE,IAAA,EAAE,EAAC,MAJL;AAKE,IAAA,gBAAgB,EAAE;AAChByJ,MAAAA,SAAS,EAAE;AADK,KALpB;AAQE,IAAA,UAAU,EAAE;AACVzJ,MAAAA,IAAI,EAAE,MADI;AAEVjE,MAAAA,QAAQ,EAAEqF,QAFA;AAGVyI,MAAAA,QAAQ,EAAExC;AAHA,KARd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFF,CAzBF,EA0CE,MAAC,QAAD;AAAU,IAAA,EAAE,EAAE,EAAd;AAAkB,IAAA,EAAE,EAAE,EAAtB;AAA0B,IAAA,EAAE,EAAE,CAA9B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,MAAC,WAAD;AACE,IAAA,SAAS,EAAC,oBADZ;AAEE,IAAA,UAAU,EAAE7F,MAAM,CAACvB,QAAP,IAAmBuB,MAAM,CAACvB,QAAP,CAAgBR,OAFjD;AAGE,IAAA,KAAK,EAAE+B,MAAM,CAACvB,QAAP,GAAkB,IAAlB,GAAyB,KAHlC;AAIE,IAAA,EAAE,EAAC,UAJL;AAKE,IAAA,gBAAgB,EAAE;AAChBwJ,MAAAA,SAAS,EAAE;AADK,KALpB;AAQE,IAAA,UAAU,EAAE;AACV7M,MAAAA,IAAI,EAAE,KADI;AAEVoD,MAAAA,IAAI,EAAE,UAFI;AAGVjE,MAAAA,QAAQ,EAAEqF,QAHA;AAIVsI,MAAAA,OAAO,EAAE1D,WAJC;AAKV2D,MAAAA,cAAc,EAAErN,YALN;AAMVuN,MAAAA,QAAQ,EAAExC;AANA,KARd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,CA1CF,EA6DE,MAAC,QAAD;AAAU,IAAA,EAAE,EAAE,EAAd;AAAkB,IAAA,EAAE,EAAE,EAAtB;AAA0B,IAAA,EAAE,EAAE,CAA9B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,MAAC,WAAD;AACE,IAAA,SAAS,EAAC,KADZ;AAEE,IAAA,UAAU,EAAE7F,MAAM,CAACrB,GAAP,IAAcqB,MAAM,CAACrB,GAAP,CAAWV,OAFvC;AAGE,IAAA,KAAK,EAAE+B,MAAM,CAACrB,GAAP,GAAa,IAAb,GAAoB,KAH7B;AAIE,IAAA,EAAE,EAAC,KAJL;AAKE,IAAA,gBAAgB,EAAE;AAChBsJ,MAAAA,SAAS,EAAE;AADK,KALpB;AAQE,IAAA,UAAU,EAAE;AACV7M,MAAAA,IAAI,EAAE,KADI;AAEVoD,MAAAA,IAAI,EAAE,KAFI;AAGVjE,MAAAA,QAAQ,EAAEqF,QAHA;AAIVsI,MAAAA,OAAO,EAAE1D,WAJC;AAKV2D,MAAAA,cAAc,EAAEpN,OALN;AAMVsN,MAAAA,QAAQ,EAAExC;AANA,KARd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,CA7DF,EAgFE,MAAC,QAAD;AAAU,IAAA,EAAE,EAAE,EAAd;AAAkB,IAAA,EAAE,EAAE,EAAtB;AAA0B,IAAA,EAAE,EAAE,EAA9B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAEE,MAAC,WAAD;AACE,IAAA,SAAS,EAAC,6BADZ;AAEE,IAAA,UAAU,EAAE7F,MAAM,CAACnD,GAAP,IAAcmD,MAAM,CAACnD,GAAP,CAAWoB,OAFvC;AAGE,IAAA,KAAK,EAAE+B,MAAM,CAACnD,GAAP,GAAa,IAAb,GAAoB,KAH7B;AAIE,IAAA,EAAE,EAAC,KAJL;AAKE,IAAA,gBAAgB,EAAE;AAChBoL,MAAAA,SAAS,EAAE;AADK,KALpB;AAQE,IAAA,UAAU,EAAE;AACVzJ,MAAAA,IAAI,EAAE,KADI;AAEVjE,MAAAA,QAAQ,EAAEqF,QAFA;AAGVuI,MAAAA,cAAc,EAAE9N;AAHN,KARd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFF,CAhFF,EAiGE,MAAC,QAAD;AAAU,IAAA,EAAE,EAAE,CAAd;AAAiB,IAAA,EAAE,EAAE,CAArB;AAAwB,IAAA,EAAE,EAAE,CAA5B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAEE,MAAC,WAAD;AACE,IAAA,SAAS,EAAC,eADZ;AAEE,IAAA,UAAU,EAAE2F,MAAM,CAACnB,KAAP,IAAgBmB,MAAM,CAACnB,KAAP,CAAaZ,OAF3C;AAGE,IAAA,KAAK,EAAE+B,MAAM,CAACnB,KAAP,GAAe,IAAf,GAAsB,KAH/B;AAIE,IAAA,EAAE,EAAC,OAJL;AAKE,IAAA,gBAAgB,EAAE;AAChBoJ,MAAAA,SAAS,EAAE;AADK,KALpB;AAQE,IAAA,UAAU,EAAE;AACVzJ,MAAAA,IAAI,EAAE,OADI;AAEVjE,MAAAA,QAAQ,EAAEqF,QAFA;AAGVwI,MAAAA,MAAM,EAAE,MAAMrF,QAAQ,CAAClD,SAAS,CAAC,OAAD,CAAV;AAHZ,KARd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFF,CAjGF,EAoHE,MAAC,QAAD;AAAU,IAAA,EAAE,EAAE,CAAd;AAAiB,IAAA,EAAE,EAAE,CAArB;AAAwB,IAAA,EAAE,EAAE,CAA5B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAEI8B,cAAc,GACZ,MAAC,gBAAD;AAAkB,IAAA,KAAK,EAAE;AAAEyE,MAAAA,KAAK,EAAE,SAAT;AAAoBkC,MAAAA,QAAQ,EAAC,UAA7B;AAAyCC,MAAAA,MAAM,EAAC,MAAhD;AAAwDC,MAAAA,IAAI,EAAC;AAA7D,KAAzB;AAAgG,IAAA,IAAI,EAAE,EAAtG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADY,GAIZ,MAAC,MAAD;AAAQ,IAAA,KAAK,EAAE;AAAEF,MAAAA,QAAQ,EAAC,UAAX;AAAuBC,MAAAA,MAAM,EAAC,MAA9B;AAAsCC,MAAAA,IAAI,EAAC;AAA3C,KAAf;AAAoE,IAAA,KAAK,EAAC,SAA1E;AAAoF,IAAA,OAAO,EAAG,MAAMzF,QAAQ,CAAClD,SAAS,CAAC,OAAD,CAAV,CAA5G;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UANN,CApHF,EAkIGyC,KAAK,IACJ,MAAC,QAAD;AAAU,IAAA,EAAE,EAAE,EAAd;AAAkB,IAAA,EAAE,EAAE,EAAtB;AAA0B,IAAA,EAAE,EAAE,EAA9B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,MAAC,eAAD;AACE,IAAA,OAAO,EACL;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iCADF,OAC8B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAD9B,+BAFJ,CAME;AANF;AAOE,IAAA,KAAK,EAAC,QAPR;AAQE,IAAA,IAAI,EAAC,cARP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,CAnIJ,CAlCF,CANF,CAVF,EA4ME,MAAC,UAAD;AAAY,IAAA,SAAS,EAAE4D,OAAO,CAACmB,UAA/B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,MAAC,aAAD;AAAe,IAAA,OAAO,EAAC,QAAvB;AAAgC,IAAA,KAAK,EAAE;AAAEoB,MAAAA,MAAM,EAAE,GAAV;AAAeC,MAAAA,KAAK,EAAE;AAAtB,KAAvC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAEE,MAAC,QAAD;AAAU,IAAA,EAAE,EAAE,EAAd;AAAkB,IAAA,EAAE,EAAE,EAAtB;AAA0B,IAAA,EAAE,EAAE,EAA9B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAGE,MAAC,MAAD;AAAQ,IAAA,KAAK,EAAC,SAAd;AAAwB,IAAA,SAAS,MAAjC;AAAkC,IAAA,OAAO,EAAE7F,UAA3C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAHF,CAFF,EAWE,MAAC,QAAD;AAAU,IAAA,EAAE,EAAE,EAAd;AAAkB,IAAA,EAAE,EAAE,EAAtB;AAA0B,IAAA,EAAE,EAAE,EAA9B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAEE,MAAC,MAAD;AAAQ,IAAA,MAAM,MAAd;AAAe,IAAA,KAAK,EAAC,SAArB;AAA+B,IAAA,SAAS,MAAxC;AAAyC,IAAA,OAAO,EAAE0B,UAAlD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAFF,CAXF,CADF,CA5MF,CADA,CALF,CADF,CADF,CAFF,EAkPE,MAAC,GAAD;AAAK,IAAA,KAAK,MAAV;AAAW,IAAA,KAAK,EAAE;AAAEwC,MAAAA,EAAE,EAAE,CAAN;AAASC,MAAAA,EAAE,EAAE,CAAb;AAAgBC,MAAAA,EAAE,EAAE;AAApB,KAAlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,MAAC,QAAD;AAAU,IAAA,EAAE,EAAE,EAAd;AAAkB,IAAA,EAAE,EAAE,EAAtB;AAA0B,IAAA,EAAE,EAAE,CAA9B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,MAAC,IAAD;AACE,IAAA,EAAE,EAAE,IADN;AAEE,IAAA,KAAK,EAAE;AAAEC,MAAAA,eAAe,EAAE;AAAnB;AAFT,KAGO,OAAO;AAAEC,IAAAA,OAAO,EAAE;AAAX,GAAP,GAA2B,EAHlC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAKE,MAAC,IAAD;AAAM,IAAA,SAAS,EAAEjB,OAAO,CAACkB,KAAzB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACA;AAAM,IAAA,QAAQ,EAAErH,YAAY,CAACI,QAAD,CAA5B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,MAAC,UAAD;AACE,IAAA,OAAO,MADT;AAEE,IAAA,KAAK,EAAC,SAFR;AAGE,IAAA,SAAS,EAAE+F,OAAO,CAACmB,UAHrB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAKE;AAAI,IAAA,SAAS,EAAEnB,OAAO,CAACoB,SAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cALF,CADF,EAUE,MAAC,IAAD;AACE,IAAA,EAAE,EAAEjG,UAAU,KAAK,CADrB;AAEE,IAAA,KAAK,EAAE;AAAE6F,MAAAA,eAAe,EAAE,OAAnB;AAA4BK,MAAAA,OAAO,EAAElG,UAAU,KAAK,CAAf,GAAmB,OAAnB,GAA6B;AAAlE;AAFT,KAGOA,UAAU,KAAK,CAAf,GAAmB;AAAE8F,IAAAA,OAAO,EAAE;AAAX,GAAnB,GAAuC,EAH9C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAME,MAAC,QAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAIE,MAAC,aAAD;AAAe,IAAA,OAAO,EAAC,QAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,MAAC,QAAD;AAAU,IAAA,EAAE,EAAE,EAAd;AAAkB,IAAA,EAAE,EAAE,EAAtB;AAA0B,IAAA,EAAE,EAAE,EAA9B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,MAAC,IAAD;AAAM,IAAA,OAAO,MAAb;AAAc,IAAA,KAAK,MAAnB;AAAoB,IAAA,SAAS,EAAEjB,OAAO,CAACyC,UAAvC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,MAAC,QAAD;AAAU,IAAA,OAAO,MAAjB;AAAkB,IAAA,KAAK,MAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAI,IAAA,SAAS,EAAEzC,OAAO,CAACC,YAAvB;AAAqC,IAAA,KAAK,EAAE;AAAEC,MAAAA,KAAK,EAAE;AAAT,KAA5C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eAAwE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAAxE,OAA+EhE,IAAI,CAACwG,IAApF,CADF,EAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFF,EAKI/G,WAAW,GACT,4BACE;AAAO,IAAA,KAAK,EAAE;AAAEwE,MAAAA,QAAQ,EAAE;AAAZ,KAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAqC,QAArC,0BADF,EAEE;AAAI,IAAA,SAAS,EAAEH,OAAO,CAACoB,SAAvB;AAAkC,IAAA,KAAK,EAAE;AAAElB,MAAAA,KAAK,EAAE,SAAT;AAAoByC,MAAAA,SAAS,EAAE,SAA/B;AAA0CC,MAAAA,YAAY,EAAE;AAAxD,KAAzC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAO,IAAA,KAAK,EAAE;AAAE1C,MAAAA,KAAK,EAAE;AAAT,KAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UADF,OACkDjH,uBAAuB,CAAEL,kBAAkB,CAACsD,IAAI,CAACqE,eAAN,CAAlB,GAA2C3H,kBAAkB,CAACU,YAAY,CAACA,YAAb,CAA0B,CAA1B,EAA6BD,aAA9B,CAA/D,CADzE,CAFF,EAKE;AAAO,IAAA,KAAK,EAAE;AAAE8G,MAAAA,QAAQ,EAAE;AAAZ,KAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAuC,QAAvC,gCAA4ElH,uBAAuB,CAAGL,kBAAkB,CAACsD,IAAI,CAACsE,WAAN,CAAlB,GAAuC5H,kBAAkB,CAACsD,IAAI,CAAC2G,UAAN,CAA1D,GAA+E1J,aAAa,CAACG,YAAD,CAA9F,CAAnG,CALF,EAMGyG,UAAU,CAACzG,YAAD,CANb,CADS,GAUT,4BACE;AAAO,IAAA,KAAK,EAAE;AAAE6G,MAAAA,QAAQ,EAAE;AAAZ,KAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAqC,QAArC,OAAgDjE,IAAI,CAAC2G,UAArD,iBADF,EAEE;AAAI,IAAA,SAAS,EAAE7C,OAAO,CAACoB,SAAvB;AAAkC,IAAA,KAAK,EAAE;AAAElB,MAAAA,KAAK,EAAE,SAAT;AAAoByC,MAAAA,SAAS,EAAE,SAA/B;AAA0CC,MAAAA,YAAY,EAAE;AAAxD,KAAzC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAO,IAAA,KAAK,EAAE;AAAE1C,MAAAA,KAAK,EAAE;AAAT,KAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UADF,OACkDjH,uBAAuB,CAACiD,IAAI,CAACsE,WAAN,CADzE,CAFF,EAKE;AAAO,IAAA,KAAK,EAAE;AAAEL,MAAAA,QAAQ,EAAE;AAAZ,KAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAuC,QAAvC,gCAA4ElH,uBAAuB,CAAGL,kBAAkB,CAACsD,IAAI,CAACsE,WAAN,CAAlB,GAAuC5H,kBAAkB,CAACsD,IAAI,CAAC2G,UAAN,CAA5D,CAAnG,CALF,CAfN,EAyBE;AAAI,IAAA,SAAS,EAAE7C,OAAO,CAACK,WAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,MAAC,KAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,4BADF,EAIE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,MAAC,KAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,6BAJF,EAOE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,MAAC,KAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,6CAPF,EAUE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,MAAC,KAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,sCAVF,CAzBF,CADF,CADF,CADF,CAJF,CANF,CAVF,CADA,CALF,CADF,CADF,CAlPF,CADF,CALF,CAFF,CADF;AAqVD","sourcesContent":["import React from \"react\";\nimport { useEffect, useState } from \"react\";\nimport axios from 'axios';\n// react components used to create a google map\nimport {\n  withScriptjs,\n  withGoogleMap,\n  GoogleMap,\n  Marker\n} from \"react-google-maps\";\nimport TagManager from 'react-gtm-module';\n// @material-ui/core components\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Checkbox from \"@material-ui/core/Checkbox\";\nimport FormControlLabel from \"@material-ui/core/FormControlLabel\";\nimport InputAdornment from \"@material-ui/core/InputAdornment\";\nimport Box from '@material-ui/core/Box';\n// @material-ui/icons\nimport PinDrop from \"@material-ui/icons/PinDrop\";\nimport Phone from \"@material-ui/icons/Phone\";\nimport Check from \"@material-ui/icons/Check\";\nimport Email from \"@material-ui/icons/Email\";\nimport EventIcon from '@material-ui/icons/Event';\nimport Favorite from \"@material-ui/icons/Favorite\";\nimport AssignmentInd from \"@material-ui/icons/AssignmentInd\";\nimport CircularProgress from '@material-ui/core/CircularProgress';\n// core components\nimport GridContainer from \"components/Grid/GridContainer.js\";\nimport GridItem from \"components/Grid/GridItem.js\";\nimport InfoArea from \"components/InfoArea/InfoArea.js\";\nimport Card from \"components/Card/Card.js\";\nimport CardHeader from \"components/Card/CardHeader.js\";\nimport CardBody from \"components/Card/CardBody.js\";\nimport CardFooter from \"components/Card/CardFooter.js\";\nimport CustomInput from \"components/CustomInput/CustomInput.js\";\nimport Button from \"components/CustomButtons/Button.js\";\nimport SnackbarContent from \"components/Snackbar/SnackbarContent.js\";\nimport FormHelperText from '@material-ui/core/FormHelperText'; \n\nimport FormControl from '@material-ui/core/FormControl';\nimport FormGroup from '@material-ui/core/FormGroup';\n\nimport Grow from '@material-ui/core/Grow';\n\n\nimport InputMask from \"react-input-mask\";\nimport MaskedInput from 'react-text-mask';\nimport PropTypes from 'prop-types';\n\nimport { useForm } from \"react-hook-form\";\nimport { yupResolver } from '@hookform/resolvers';\nimport * as yup from \"yup\";\nimport { setLocale } from 'yup';\n\nimport checkoutStyle from \"assets/jss/nextjs-material-kit-pro/pages/checkoutSections/checkoutStyle.js\";\n\nimport chipCard from \"assets/img/icon-cartoes/icon-chip.png\";\nimport visa from \"assets/img/icon-cartoes/icon-visa.png\";\nimport mastercard from \"assets/img/icon-cartoes/icon-master.png\";\nimport diners from \"assets/img/icon-cartoes/icon-diners.png\";\nimport amex from \"assets/img/icon-cartoes/icon-amex.png\";\nimport discover from \"assets/img/icon-cartoes/icon-discover.png\";\nimport hipercard from \"assets/img/icon-cartoes/icon-hipercard.png\";\nimport elo from \"assets/img/icon-cartoes/icon-elo.png\";\nimport jcb from \"assets/img/icon-cartoes/icon-jcb.png\";\nimport aura from \"assets/img/icon-cartoes/icon-aura.png\";\nimport nocard from \"assets/img/icon-cartoes/icon-nocard.png\";\n\nconst useStyles = makeStyles(checkoutStyle);\n\nfunction TextMaskCustom(props) {\n  const { inputRef, ...other } = props;\n\n  return (\n    <MaskedInput\n      {...other}\n      ref={(ref) => {\n        inputRef(ref ? ref.inputElement : null);\n      }}      \n      mask={[/[0-9]/, /[0-9]/, /[0-9]/, '.', /[0-9]/, /[0-9]/, /[0-9]/, '.', /[0-9]/, /[0-9]/, /[0-9]/, '-', /[0-9]/, /[0-9]/]}\n      placeholderChar={'\\u2000'}\n      guide={false}\n      showMask\n    />\n  );\n}\n\nTextMaskCustom.propTypes = {\n  inputRef: PropTypes.func.isRequired,\n};\n\n\nfunction ValidadeMask(props) {\n  const { inputRef, ...other } = props;\n\n  return (\n    <MaskedInput\n      {...other}\n      ref={(ref) => {\n        inputRef(ref ? ref.inputElement : null);\n      }}      \n      mask={[/[0-9]/, /[0-9]/, '/', /[0-9]/, /[0-9]/, /[0-9]/, /[0-9]/]}\n      placeholderChar={'\\u2000'}\n      guide={false}\n      showMask\n    />\n  );\n}\n\nValidadeMask.propTypes = {\n  inputRef: PropTypes.func.isRequired,\n};\n\nfunction CVVMask(props) {\n  const { inputRef, ...other } = props;\n\n  return (\n    <MaskedInput\n      {...other}\n      ref={(ref) => {\n        inputRef(ref ? ref.inputElement : null);\n      }}\n      // mask={['(', /[1-9]/, /\\d/, /\\d/, ')', ' ', /\\d/, /\\d/, /\\d/, '-', /\\d/, /\\d/, /\\d/, /\\d/]}\n      mask={[/[0-9]/, /[0-9]/, /[0-9]/]}\n      placeholderChar={'\\u2000'}\n      guide={false}\n      showMask\n    />\n  );\n}\n\nCVVMask.propTypes = {\n  inputRef: PropTypes.func.isRequired,\n};\n\n\nfunction CardMask(props) {\n  const { inputRef, ...other } = props;\n\n  return (\n    <MaskedInput\n      {...other}\n      ref={(ref) => {\n        inputRef(ref ? ref.inputElement : null);\n      }}\n      // mask={['(', /[1-9]/, /\\d/, /\\d/, ')', ' ', /\\d/, /\\d/, /\\d/, '-', /\\d/, /\\d/, /\\d/, /\\d/]}\n      mask={[/[0-9]/, /[0-9]/, /[0-9]/, /[0-9]/, ' ', /[0-9]/, /[0-9]/, /[0-9]/, /[0-9]/, ' ', /[0-9]/, /[0-9]/, /[0-9]/, /[0-9]/, ' ', /[0-9]/, /[0-9]/, /[0-9]/, /[0-9]/ ]}\n      placeholderChar={'\\u2000'}\n      guide={false}\n      showMask\n    />\n  );\n}\n\nCardMask.propTypes = {\n  inputRef: PropTypes.func.isRequired,\n};\n\n\n\n\nsetLocale({  \n  mixed: {\n    notType: function notType(_ref) {\n      switch (_ref.type) {\n        case 'number':\n          return 'deve ser um número';\n        case 'string':\n          return 'deve ser um texto';\n        default:\n          return 'formato errado';\n      }\n    },\n    default: 'é inválido',\n    required: 'Desculpe, este campo é obrigatório',\n    oneOf: 'deve ser um dos seguintes valores: ${values}',\n    notOneOf: 'não pode ser um dos seguintes valores: ${values}',\n  },\n  string: {\n      length: 'deve ter exatamente ${length} caracteres',\n      min: 'deve ter pelo menos ${min} caracteres',\n      max: 'deve ter no máximo ${max} caracteres',\n      email: 'Por favor, informe um e-mail inválido',\n      url: 'deve ter um formato de URL válida',\n      trim: 'não deve conter espaços no início ou no fim.',\n      lowercase: 'deve estar em maiúsculo',\n      uppercase: 'deve estar em minúsculo',\n  },\n  number: {\n      min: 'deve ser no mínimo ${min}',\n      max: 'deve ser no máximo ${max}',\n      lessThan: 'deve ser menor que ${less}',\n      moreThan: 'deve ser maior que ${more}',\n      notEqual: 'não pode ser igual à ${notEqual}',\n      positive: 'deve ser um número posítivo',\n      negative: 'deve ser um número negativo',\n      integer: 'deve ser um número inteiro',      \n  },\n      date: {\n      min: 'deve ser maior que a data ${min}',\n      max: 'deve ser menor que a data ${max}',\n  },\n      array: {\n      min: 'deve ter no mínimo ${min} itens',\n      max: 'deve ter no máximo ${max} itens',\n  }\n});\n\n\nconst regexCPF = /([0-9]{2}[\\.]?[0-9]{3}[\\.]?[0-9]{3}[\\/]?[0-9]{4}[-]?[0-9]{2})|([0-9]{3}[\\.]?[0-9]{3}[\\.]?[0-9]{3}[-]?[0-9]{2})/gm;\nfunction cpfValidate(cpf) {\n\tconsole.log(\"Validatring\", cpf);\n\treturn cpf.length > 10\n}\n\nfunction isValidCPF(cpf) {\n  if (typeof cpf !== \"string\") return false\n  cpf = cpf.replace(/[\\s.-]*/igm, '')\n  if (\n      !cpf ||\n      cpf.length != 11 ||\n      cpf == \"00000000000\" ||\n      cpf == \"11111111111\" ||\n      cpf == \"22222222222\" ||\n      cpf == \"33333333333\" ||\n      cpf == \"44444444444\" ||\n      cpf == \"55555555555\" ||\n      cpf == \"66666666666\" ||\n      cpf == \"77777777777\" ||\n      cpf == \"88888888888\" ||\n      cpf == \"99999999999\" \n  ) {\n      return false\n  }\n  var soma = 0\n  var resto\n  for (var i = 1; i <= 9; i++) \n      soma = soma + parseInt(cpf.substring(i-1, i)) * (11 - i)\n  resto = (soma * 10) % 11\n  if ((resto == 10) || (resto == 11))  resto = 0\n  if (resto != parseInt(cpf.substring(9, 10)) ) return false\n  soma = 0\n  for (var i = 1; i <= 10; i++) \n      soma = soma + parseInt(cpf.substring(i-1, i)) * (12 - i)\n  resto = (soma * 10) % 11\n  if ((resto == 10) || (resto == 11))  resto = 0\n  if (resto != parseInt(cpf.substring(10, 11) ) ) return false\n  return true\n}\n\nfunction isValidPhone(phone){\n  return /^(?:(?:\\+|00)?(55)\\s?)?(?:\\(?([1-9][0-9])\\)?\\s?)?(?:((?:9\\d|[2-9])\\d{3})\\-?(\\d{4}))$/.test(phone);\n}\n\nfunction isValidDate(date) {\n  return /^((((0?[1-9]|[12]\\d|3[01])[\\.\\-\\/](0?[13578]|1[02])      [\\.\\-\\/]((1[6-9]|[2-9]\\d)?\\d{2}))|((0?[1-9]|[12]\\d|30)[\\.\\-\\/](0?[13456789]|1[012])[\\.\\-\\/]((1[6-9]|[2-9]\\d)?\\d{2}))|((0?[1-9]|1\\d|2[0-8])[\\.\\-\\/]0?2[\\.\\-\\/]((1[6-9]|[2-9]\\d)?\\d{2}))|(29[\\.\\-\\/]0?2[\\.\\-\\/]((1[6-9]|[2-9]\\d)?(0[48]|[2468][048]|[13579][26])|((16|[2468][048]|[3579][26])00)|00)))|(((0[1-9]|[12]\\d|3[01])(0[13578]|1[02])((1[6-9]|[2-9]\\d)?\\d{2}))|((0[1-9]|[12]\\d|30)(0[13456789]|1[012])((1[6-9]|[2-9]\\d)?\\d{2}))|((0[1-9]|1\\d|2[0-8])02((1[6-9]|[2-9]\\d)?\\d{2}))|(2902((1[6-9]|[2-9]\\d)?(0[48]|[2468][048]|[13579][26])|((16|[2468][048]|[3579][26])00)|00))))$/.test(date);\n}\n\nfunction isValidDateCard(date) {\n  // return /^(0[1-9]|1[0-2])\\/?([0-9]{4}|[0-9]{2})$/.test(date);\n  return /^((0[1-9])|(1[0-2]))\\/((2009)|(20[1-2][0-9]))$/.test(date);\n}\n\n\nfunction getCardFlag(cardnumber) {\n  var cardnumber = cardnumber.replace(/[^0-9]+/g, '');\n\n  var cards = {\n      visa      : /^4[0-9]{12}(?:[0-9]{3})/,\n      mastercard : /^5[1-5][0-9]{14}/,\n      diners    : /^3(?:0[0-5]|[68][0-9])[0-9]{11}/,\n      amex      : /^3[47][0-9]{13}/,\n      discover  : /^6(?:011|5[0-9]{2})[0-9]{12}/,\n      hipercard  : /^(606282\\d{10}(\\d{3})?)|(3841\\d{15})/,\n      elo        : /^((((636368)|(438935)|(504175)|(451416)|(636297))\\d{0,10})|((5067)|(4576)|(4011))\\d{0,12})/,\n      jcb        : /^(?:2131|1800|35\\d{3})\\d{11}/,       \n      aura      : /^(5078\\d{2})(\\d{2})(\\d{11})$/     \n  };\n\n  for (var flag in cards) {\n      if(cards[flag].test(cardnumber)) {\n          return flag;\n      }\n  }       \n\n  return false;\n}\n\n\nyup.addMethod(yup.string, \"cpf\", function(message) {\n\t// return yup.mixed().test(\"cpf\", message || \"número de CPF inválido\", value => cpfValidate(value));\n\treturn yup.mixed().test(\"cpf\", message || \"número de CPF inválido\", value => isValidCPF(value));\n});\n\nyup.addMethod(yup.string, \"phone\", function(message) {\t\n\treturn yup.mixed().test(\"phone\", message || \"número de celular inválido\", value => isValidPhone(value));\n});\n\nyup.addMethod(yup.string, \"date\", function(message) {\t\n\treturn yup.mixed().test(\"date\", message || \"data inválida\", value => isValidDate(value));\n});\n\nyup.addMethod(yup.string, \"dateCard\", function(message) {\t\n\treturn yup.mixed().test(\"date\", message || \"Por favor, digite uma data válida\", value => isValidDateCard(value));\n});\n\nyup.addMethod(yup.string, \"card\", function(message) {\t\n\treturn yup.mixed().test(\"card\", message || \"Por favor, digite um número de cartão válido\", value => getCardFlag(value));\n});\n\n\n\n\nconst SignupSchema = yup.object().shape({  \n  id: yup\n    .string(),    \n  number: yup\n    .string()\n    .card()\n    .required(),  \n  name: yup\n    .string()\n    .required(),\n  validade: yup\n    .string()\n    .dateCard()\n    .required(),\n  cvv: yup\n    .string()\n    .matches(/^[0-9]{3}$/, 'Por favor, digite um CVV válido') \n    .required(),   \n  cpf: yup\n    .string()\n    .cpf(\"Por favor, informe um CPF válido\") \n    .required(), \n  cupom: yup\n    .string()\n      \n    \n\n});\n\n\nconst formatValueParcela = (value) => {\n  let returnValue =  new String(value).replace(\",\", \".\");  \n  return parseFloat(returnValue).toFixed(2); \n}\n\nconst formatValuePresentation = (value) => {\n  let returnDecimal = formatValueParcela(value);\n  let returnValue =  new String(returnDecimal).replace(\".\", \",\");\n  return returnValue;    \n}\n\nconst descontoTotal = (premios) => {\n \n  let valorDesconto = 0;\n\n  premios.listaPremios.map((premio, i) => {\n    console.log(\"formatValueParcela(premio.valorDesconto)\" );\n    console.log(formatValueParcela(premio.valorDesconto) );\n    valorDesconto = parseFloat( valorDesconto +  formatValueParcela(premio.valorDesconto) );\n  })\n\n  console.log(valorDesconto);\n\n  return parseFloat( valorDesconto );    \n}\n\n\n\n// const schema = yup.object().shape({\n//   first: yup.string().required(),\n//   age: yup.number().positive().integer().required(),\n// });\n\nexport default function SectionPayment(props) {\n  // const { register, errors, handleSubmit} = useForm({\n  //   validationSchema: SignupSchema\n  // });\n  const { register, getValues, trigger, handleSubmit, errors } = useForm({\n    resolver: yupResolver(SignupSchema),\n    mode: \"onBlur\"\n    // mode: \"onChange\"\n  });\n  const onSubmit = data => {\n    console.log(data);\n    // alert(JSON.stringify(data, null));\n  };\n\n\n  useEffect(() => {        \n    // history.pushState({}, null, \"/checkout/payment\");\n    TagManager.dataLayer({\n      dataLayer: {\n        event: \"paymentView\",\n        userId: '001',\n        userProject: 'project',\n        page: 'home'\n      },          \n    })\n\n    TagManager.dataLayer({\n      dataLayer: {\n        'event': 'checkoutOption',\n        'ecommerce': {\n          'checkout_option': {\n            'actionField': {'step': 2}\n          }\n        }       \n      },          \n    })\n\n    getPlan();\n\n  }, []);\n\n\n  const [checked, setChecked] = React.useState([]);\n  const handleToggle = value => {\n    const currentIndex = checked.indexOf(value);\n    const newChecked = [...checked];\n    if (currentIndex === -1) {\n      newChecked.push(value);\n    } else {\n      newChecked.splice(currentIndex, 1);\n    }\n    setChecked(newChecked);\n  };\n\n  const [isAluno, setIsAluno] = React.useState(false);\n  const [activeForm, setActiveForm] = React.useState(0);\n  // const [activeField, setActiveField] = React.useState(\"first\");\n  const [activeField, setActiveField] = React.useState([\"id\",\"number\",\"name\",\"validade\", \"cvv\", \"cpf\", \"cupom\"]);\n  const [isDisableNext, setIsDisableNext] = React.useState(true);\n  const [isLoadingCupom, setIsLoadingCupom] = React.useState(false);  \n  const [insertCupom, setInsertCupom] = React.useState(false);\n  const [listaPremios, setListaPremios] = React.useState(\n    {\n      numeroCupom: \"\",\n      listaPremios: [{\n        percentualDesconto: \"0\",\n        valorDesconto: \"10\",\n        descricaoPremio: \"PARCELA 1\",\n        tipoPremio: \"MENSALIDADE\"\n      }]\n    }\n  );\n  const [plan, setPlan] = React.useState(\n    {\n      \"parcelamentoOperadora\":\"True\",\n      \"maxDivisao\":1,\n      \"descricaoEncantamento\":\"\",\n      \"nome\":\"\",\n      \"mesAnuidade\":\"Parcela 0\",\n      \"codigo\":2,\n      \"adesao\":0.0,\n      \"anuidade\":0.0,\n      \"horario\":\"LIVRE\",\n      \"fidelidade\":10,\n      \"mensalidade\":39.9,\n      \"primeiraParcela\":39.9,\n      \"valorProdutos\":0.0,\n      \"produtos\":\"\",\n      \"inicioMinimo\":null,\n      \"modalidades\":[\n         \"ONLINE\"\n      ],\n      \"diasVencimento\":[\n         \n      ],\n      \"inicioFuturo\":\"False\",\n      \"anuidadeAgora\":\"False\",\n      \"qtdCreditoPlanoCredito\":\"0\",\n      \"regimeRecorrencia\":\"False\",\n      \"matricula\":\"0.0\",\n      \"parcelasAnuidade\":[\n         \n      ]\n   }\n  );\n       \n  const [error, setError] = useState(false);\n\n  const [activeCard, setActiveCard] = React.useState(nocard);\n\n  const [cardField, setCardField] = React.useState({    \n    number: \"0000 0000 0000 0000\",\n    name: \"NOME IMPRESSO NO CARTÃO\",\n    valid: \"00/00\",\n    cvv: \"000\", \n    cpf: \"\"   \n  });\n\n\n  const handleNext = async (type) => {\n\n    console.log(activeField);\n    const result = await trigger(activeField);\n    // const result = await trigger();\n    console.log(result);    \n\n    console.log(\"cupom\");\n    console.log(getValues(\"cupom\"));\n    getCupom(getValues(\"cupom\"));\n  \n\n    if(result) {       \n      console.log(getValues());\n      const cardForm = getValues();\n      const codBrand= getBrandCod(cardForm.number);      \n\n\n      if(activeForm == 0){   \n        \n        let hoje = new Date();\n        let dia = (\"0\" + (hoje.getDate())).slice(-2);\n        let mes = (\"0\" + (hoje.getMonth() + 1)).slice(-2);\n        let ano = hoje.getFullYear();\n        let anoFinal = hoje.getFullYear() + 1;\n\n        props.setDataSale( prevDataSale => {\n          return {  \n               \n              ...prevDataSale,\n              numeroCartao: cardForm.number.replace(/\\s+/g, ''),\n              nomeCartao: cardForm.name,\n              cvv: cardForm.cvv,\n              validade: cardForm.validade,\n              // brand: codBrand,\n              cpftitularcard: cardForm.cpf,  \n              numeroCupomDesconto: cardForm.cupom,            \n              anamnese:{\n                ...prevDataSale.anamnese,                \n                // created_at: dia + \"/\" + mes + \"/\" + ano,\n                // updated_at: dia + \"/\" + mes + \"/\" + ano,\n              },                  \n          }\n        });    \n        props.setStepCheckout(2);\n      }else {\n        setActiveForm((prevActiveStep) => prevActiveStep + 1);\n        handleFieldActive(activeForm + 1);                \n      }\n    }\n        \n\n  };\n\n  React.useEffect(() => {\n\n    // props.setDataSale( prevDataSale => {\n    //   return {  \n    //     customer: {     \n    //     ...prevDataSale.customer,\n    //     card : {\n    //       ...prevDataSale.card,\n    //       ...cardField \n    //     }  \n    //     }         \n    //   }\n    // });    \n\n    console.log(cardField.number.replace(/\\s+/g, ''));\n    \n  }, [ ]);\n\n\n\n  const handleBack = (type) => {\n\n    if(activeForm !== 0){\n      setActiveForm((prevActiveStep) => prevActiveStep - 1);  \n      handleFieldActive(activeForm - 1); \n    }else{\n      props.setStepCheckout(0);\n    }\n\n  };\n\n  const handleFocus = (event) => {\n    // event.target.select()\n\n    if(event.target.value == \"\"){      \n      event.target.selectionStart = 0;\n      event.target.selectionEnd = 0;      \n    } else {\n      event.target.select();      \n    }\n    \n  };\n\n\n  const handleFieldActive = (step) => {\n\n    console.log(\"handleFieldActive\");\n\n    switch (step) {\n      case 0:       \n        setActiveField([\"id\",\"number\",\"name\",\"validade\", \"cvv\", \"cpf\"]);\n        break;\n      case 1:\n        setActiveField([\"nome\",\"email\",\"telefone\",\"dataNascimento\"]);\n        break;      \n      case 2:\n        setActiveField([\"cep\",\"endereco\",\"numero\", \"complemento\",\"bairro\", \"estado\", \"cidade\"]);\n        break;      \n      default:\n        setActiveField([\"id\",\"number\",\"name\",\"validade\", \"cvv\"]);\n        break;\n    }\n\n    console.log(step);\n    // console.log(activeField);\n\n  };\n\n\n  \n  \n  const [payment, setPayment] = React.useState({\n    \"paymentMethod\": \"creditCard\",\n    \"card\": {\n\t\t\t\"id\": 123456,\n\t\t\t\"number\": \"5464082622239784\",\n\t\t\t\"name\": \"nome no cartão\",\n\t\t\t\"valid\": \"12/2022\",\n      \"cvv\": \"782\",\n      \"brand\": 1\n\t\t}\n\n  });\n\n\n\n\n  const getPlan = async () => {    \n    await axios.get(`https://admin.justfit.com.br/app.justfit/api/iAPIClicou/planosUnidade?codUnidade=1`)\n      .then(res => {        \n        console.log(res.data);\n        props.setDataSale( prevDataSale => {\n          return {                 \n            ...prevDataSale,\n            unidade: 1,\n            plano: res.data.planos[0].codigo                     \n          }\n        });    \n        \n        setPlan(res.data.planos[0]);\n        \n      })\n      .catch((error) => {\n        console.log(error);        \n      })      \n  };\n\n\n  const getBrandCod = (numberCard) => {\n    let brandCard = getCardFlag(numberCard);\n    switch (brandCard) {\n      case \"visa\":                \n        return 1;\n        break;\n      case \"mastercard\":        \n        return 2;\n        break;      \n      case \"diners\":        \n        return 3;\n        break;  \n      case \"amex\":        \n        return 4;\n        break;    \n      case \"discover\":        \n        return 8;\n        break;    \n      case \"hipercard\":        \n        return 9;\n        break;    \n      case \"elo\":        \n        return 6;\n        break;    \n      case \"jcb\":        \n        return 7;\n        break;    \n      case \"aura\":        \n        return 5;\n        break;      \n      default:\n        return 0;        \n        break    \n      }\n  }\n\n  const handlerOnBlur = (event) => {\n    let brandCard = getCardFlag(event.target.value);\n\n    let brandCod = 0\n    // handleFocus(event);\n\n    switch (brandCard) {\n      case \"visa\":        \n        setActiveCard(visa);\n        brandCod = 1;\n        break;\n      case \"mastercard\":\n        setActiveCard(mastercard);\n        brandCod = 2;\n        break;      \n      case \"diners\":\n        setActiveCard(diners);\n        brandCod = 3;\n        break;  \n      case \"amex\":        \n        setActiveCard(amex);\n        brandCod = 4;\n        break;    \n      case \"discover\":        \n        setActiveCard(discover);\n        brandCod = 8;\n        break;    \n      case \"hipercard\":        \n        setActiveCard(hipercard);\n        brandCod = 9;\n        break;    \n      case \"elo\":        \n        setActiveCard(elo);\n        brandCod = 6;\n        break;    \n      case \"jcb\":        \n        setActiveCard(jcb);\n        brandCod = 7;\n        break;    \n      case \"aura\":        \n        setActiveCard(aura);\n        brandCod = 5;\n        break;      \n      default:\n        setActiveCard(nocard);\n        break;\n    }\n\n    console.log(brandCod);\n\n    setCardField( {\n      number: getValues(\"number\"),\n      name: getValues(\"name\"),\n      valid: getValues(\"validade\"),\n      cvv: getValues(\"cvv\"),\n      brand: brandCod\n\n    })\n\n\n  }\n  const handlerOnChange = (event) => {\n    setCardField( {\n      number: getValues(\"number\"),\n      name: getValues(\"name\"),\n      valid: getValues(\"validade\"),\n      cvv: getValues(\"cvv\")\n    })\n\n  }\n\n\n  const getCardFlag = (cardnumber) => {\n    var cardnumber = cardnumber.replace(/[^0-9]+/g, '');\n\n\n    var cards = {\n        visa      : /^4[0-9]{12}(?:[0-9]{3})/,\n        mastercard : /^5[1-5][0-9]{14}/,\n        diners    : /^3(?:0[0-5]|[68][0-9])[0-9]{11}/,\n        amex      : /^3[47][0-9]{13}/,\n        discover  : /^6(?:011|5[0-9]{2})[0-9]{12}/,\n        hipercard  : /^(606282\\d{10}(\\d{3})?)|(3841\\d{15})/,\n        elo        : /^((((636368)|(438935)|(504175)|(451416)|(636297))\\d{0,10})|((5067)|(4576)|(4011))\\d{0,12})/,\n        jcb        : /^(?:2131|1800|35\\d{3})\\d{11}/,       \n        aura      : /^(5078\\d{2})(\\d{2})(\\d{11})$/     \n    };\n\n    for (var flag in cards) {\n        if(cards[flag].test(cardnumber)) {\n            return flag;\n        }\n    }       \n\n    return nocard;\n}\n\nconst getCupom = async (cupom) => {    \n  setIsLoadingCupom(true);  \n  setInsertCupom(false);\n  setError(false);  \n\n  await axios.post(`https://admin.justfit.com.br/app.justfit/api/LoadPersonalOnline/GetCupomInfo?cupom=${cupom}`)\n    .then(res => {\n\n      if(res.data.code != \"0\"){\n        console.log(\"error getCupom\");    \n        setError(true);    \n        return false;\n      }\n      console.log(res.data);     \n      \n      // const withoutAspas = new String(res.data.cupom).replace(/[']/g,'\"');           \n      // const withoutAspas2 = new String(withoutAspas).replace('\"return\":\"{\"','\"return\": {\"');     \n      // const withoutAspas3 = new String(withoutAspas2).replace('}\"}', '}}');   \n      \n      // console.log(JSON.parse(withoutAspas3));     \n\n      console.log(res.data.cupom.cupom);     \n      \n      setInsertCupom(true);\n\n      setListaPremios(res.data.cupom.cupom);\n      \n\n      \n    })\n    .catch((error) => {\n      console.log(error);\n      setError(true);\n    })\n    .finally(() => {\n      setIsLoadingCupom(false);  \n    });\n};\n\n\nconst  getPremios = (premios) => {\n\n  return (\n    <GridItem xs={12} sm={12} md={12}>   \n      {/* <Card pricing plain className={classes.marginZero}>\n        <CardBody pricing plain> */}\n          <h5 className={classes.cardCategory} style={{ color: \"#425cc7\" }}>Cupom aplicado</h5>                                                               \n          <small style={{ fontSize: \"1rem\", fontWeight: \"900\" }}>{'\\u00A0'} {premios.numeroCupom}</small>\n          <ul className={classes.itensResumo}>\n            {premios.listaPremios.map((premio, i) => ( \n              <>\n                <li>\n                  <GridContainer>\n                    <GridItem xs={8} sm={8} md={8} style={ { textAlign: \"left\" } }>\n                      {premio.descricaoPremio}  \n                    </GridItem>                    \n                    <GridItem xs={4} sm={4} md={4}>                        \n                      { i == 0 ? (   \n                        <>                   \n                        R$ { formatValuePresentation( formatValueParcela(plan.primeiraParcela) - formatValueParcela(listaPremios.listaPremios[i].valorDesconto) ) }                      \n                        </>\n                      ) : (\n                        <>\n                        R$ { formatValuePresentation( formatValueParcela(plan.mensalidade) - formatValueParcela(listaPremios.listaPremios[i].valorDesconto) ) }\n                        </>\n                      )\n\n                      }\n                      \n                    </GridItem>                    \n                  </GridContainer>\n\n                  \n                </li>\n              </>            \n            ))}\n            <li>\n              <GridContainer>\n                <GridItem xs={8} sm={8} md={8} style={ { textAlign: \"left\" } }>\n                  OUTRAS PARCELAS\n                </GridItem>                    \n                <GridItem xs={4} sm={4} md={4}>  \n                  R$ {formatValuePresentation(plan.mensalidade)}\n                </GridItem>                    \n              </GridContainer>\n            </li>\n\n            {/* <li>\n              <Check/> Treinos Personalizados\n            </li> */}\n          </ul>\n        {/* </CardBody> */}\n\n      {/* </Card>                     */}\n      \n    </GridItem>\n    )\n\n\n\n\n}\n\n\n\n\n\n\n  const classes = useStyles();\n  return (\n    <div className=\"cd-section\" >\n      {/* Contact us 1 START */}\n      <div\n        className={classes.contacts + \" \" + classes.section}\n        // style={{ backgroundImage: `url(${city})` }}\n        style={{ backgroundColor: \"#ffffff\" }}\n      >\n        <div className={classes.container}>\n          <GridContainer justify=\"center\">\n            {/* <GridItem xs={12} sm={12} md={8} className={classes.mlAuto}> */}\n            <Box clone order={{ xs: 2, sm: 2, md: 1 }}>\n              <GridItem xs={12} sm={12} md={5}>\n                <Grow \n                  in={true}\n                  style={{ transformOrigin: '0 0 0' }}\n                  {...(true ? { timeout: 1000 } : {})}\n                >\n                  <Card className={classes.card1}>\n                  <form onSubmit={handleSubmit(onSubmit)}>\n                    <CardHeader\n                      contact\n                      color=\"primary\"\n                      className={classes.textCenter}\n                    >\n                      <h4 className={classes.cardTitle}>Pagamento</h4>\n                    </CardHeader>\n\n                    \n                    <Grow \n                      in={activeForm === 0}\n                      style={{ transformOrigin: '0 0 0', display: activeForm === 0 ? \"block\" : \"none\" }}\n                      {...(activeForm === 0 ? { timeout: 1000 } : {})}\n                    >\n\n                      <CardBody>\n\n                      \n\n                      <Card color=\"info\" className={classes.containerCart}>\n                        <CardBody color className={classes.noPaddingBottom}>\n                          {/* <div className={classes.containerCart}> */}\n                            <h5 className={classes.cardCategorySocialWhite}>\n                              <img src={chipCard}></img>\n                              \n                            </h5>\n                            <h4 className={classes.cardTitleWhite}>\n                              {cardField.number}\n                            </h4>\n                            <h4 className={classes.cardTitleWhite}>\n                              {cardField.name}\n                            </h4>\n                          {/* </div> */}\n                        </CardBody>\n                        <CardFooter>\n                          <div>\n                            <a href=\"#pablo\" onClick={e => e.preventDefault()}>                            \n                              <span>Valid</span> {cardField.valid} &nbsp; &nbsp;\n                              <span>CVV</span> {cardField.cvv}\n                            </a>\n                          </div>\n                          <div\n                            className={classes.statsWhite + \" \" + classes.mlAuto}\n                          >\n                            <img src={activeCard}></img>                    \n                          </div>\n                        </CardFooter>\n                      </Card>\n\n                        <GridContainer justify=\"center\" className={ classes.containerFieldsCard }> \n                          <GridItem xs={12} sm={12} md={12}>\n                            <CustomInput\n                              labelText=\"Número do cartão *\"\n                              labelError={errors.number && errors.number.message}                          \n                              error={errors.number ? true : false}\n                              id=\"number\"\n                              formControlProps={{\n                                fullWidth: true\n                              }}\n                              inputProps={{\n                                type: \"tel\",\n                                name: \"number\",\n                                inputRef: register,\n                                onClick: handleFocus,                              \n                                inputComponent: CardMask,\n                                onBlur: handlerOnBlur,\n                                // startAdornment: (\n                                //   <InputAdornment position=\"start\">\n                                //     <AssignmentInd className={classes.inputIconsColor} />\n                                //   </InputAdornment>\n                                // )                           \n                              }}\n                            />  \n                          </GridItem>                   \n                          <GridItem xs={12} sm={12} md={12}>\n                          \n                            <CustomInput\n                              labelText=\"Nome impresso no cartão\"\n                              labelError={errors.name && errors.name.message}                          \n                              error={errors.name ? true : false}\n                              id=\"name\"\n                              formControlProps={{\n                                fullWidth: true\n                              }}                            \n                              inputProps={{\n                                name: \"name\",\n                                inputRef: register,\n                                onChange: handlerOnChange,                                                           \n                              }}\n                            />   \n                          </GridItem>\n                          <GridItem xs={12} sm={12} md={6}>                                                            \n                            <CustomInput\n                              labelText=\"Validade (MM/AAAA)\"\n                              labelError={errors.validade && errors.validade.message}                          \n                              error={errors.validade ? true : false}\n                              id=\"validade\"\n                              formControlProps={{\n                                fullWidth: true\n                              }}\n                              inputProps={{\n                                type: \"tel\",\n                                name: \"validade\",\n                                inputRef: register,  \n                                onClick: handleFocus,                              \n                                inputComponent: ValidadeMask,\n                                onChange: handlerOnChange,                                                                                                              \n                              }}\n                            /> \n                          </GridItem> \n                          <GridItem xs={12} sm={12} md={6}>                                                             \n                            <CustomInput\n                              labelText=\"CVV\"\n                              labelError={errors.cvv && errors.cvv.message}                          \n                              error={errors.cvv ? true : false}\n                              id=\"cvv\"\n                              formControlProps={{\n                                fullWidth: true\n                              }}\n                              inputProps={{\n                                type: \"tel\",\n                                name: \"cvv\",\n                                inputRef: register,                                \n                                onClick: handleFocus,                              \n                                inputComponent: CVVMask,\n                                onChange: handlerOnChange,\n                              }}\n                            />        \n                          </GridItem>   \n                          <GridItem xs={12} sm={12} md={12}>\n                          \n                            <CustomInput\n                              labelText=\"CPF do titular do cartão\"\n                              labelError={errors.cpf && errors.cpf.message}                          \n                              error={errors.cpf ? true : false}\n                              id=\"cpf\"\n                              formControlProps={{\n                                fullWidth: true\n                              }}                            \n                              inputProps={{\n                                name: \"cpf\",\n                                inputRef: register,                                    \n                                inputComponent: TextMaskCustom                                                    \n                              }}\n                            />   \n                          </GridItem>\n                          <GridItem xs={8} sm={8} md={9}>\n                          \n                            <CustomInput\n                              labelText=\"Inserir cupom\"\n                              labelError={errors.cupom && errors.cupom.message}                          \n                              error={errors.cupom ? true : false}\n                              id=\"cupom\"\n                              formControlProps={{\n                                fullWidth: true\n                              }}                            \n                              inputProps={{\n                                name: \"cupom\",\n                                inputRef: register, \n                                onBlur: () => getCupom(getValues('cupom'))\n                                                                                                                                                     \n                              }}\n                            />   \n                          </GridItem>\n                         \n                          <GridItem xs={4} sm={4} md={3}>   \n                            {\n                              isLoadingCupom ? (\n                                <CircularProgress style={{ color: \"#425CD0\", position:\"absolute\", bottom:\"20px\", left:\"20px\" }} size={30}/>\n\n                              ) : (\n                                <Button style={{ position:\"absolute\", bottom:\"10px\", left:\"10px\" }} color=\"primary\" onClick={ () => getCupom(getValues('cupom'))}>\n                                  Ok\n                                </Button>\n                              )\n\n                            }                       \n                            \n                          </GridItem>\n                          {error && ( \n                            <GridItem xs={12} sm={12} md={12}>   \n                              <SnackbarContent\n                                message={\n                                  <span>\n                                    <b>Cupom não encontrado</b> <br/> Insira um cupom válido\n                                  </span>\n                                }\n                                // close\n                                color=\"danger\"\n                                icon=\"info_outline\"\n                              />\n                            </GridItem>   \n                          )} \n                          \n                          \n                          \n                        </GridContainer>                 \n                    \n                      </CardBody>\n\n                    </Grow>\n\n                    \n                    <CardFooter className={classes.textCenter}>   \n                      <GridContainer justify=\"center\" style={{ margin: \"0\", width: \"100%\" }}> \n                        \n                        <GridItem xs={12} sm={12} md={12}>\n\n                          \n                          <Button color=\"primary\" fullWidth onClick={handleNext}>\n                            Próximo\n                          </Button>\n                                                  \n                          \n                        </GridItem> \n                        <GridItem xs={12} sm={12} md={12}>\n                          \n                          <Button simple color=\"primary\" fullWidth onClick={handleBack}>\n                            Voltar\n                          </Button>\n                          \n                        </GridItem> \n                      </GridContainer>  \n                      \n                    </CardFooter>\n                  </form>\n                </Card>\n                </Grow>\n              </GridItem>\n            </Box>\n            \n            <Box clone order={{ xs: 1, sm: 1, md: 2 }}>\n              <GridItem xs={12} sm={12} md={4}>\n                <Grow \n                  in={true}\n                  style={{ transformOrigin: '0 0 0' }}\n                  {...(true ? { timeout: 1000 } : {})}\n                >\n                  <Card className={classes.card1}>\n                  <form onSubmit={handleSubmit(onSubmit)}>\n                    <CardHeader\n                      contact\n                      color=\"primary\"\n                      className={classes.textCenter}\n                    >\n                      <h4 className={classes.cardTitle}>Resumo</h4>\n                    </CardHeader>\n\n                    \n                    <Grow \n                      in={activeForm === 0}\n                      style={{ transformOrigin: '0 0 0', display: activeForm === 0 ? \"block\" : \"none\" }}\n                      {...(activeForm === 0 ? { timeout: 1000 } : {})}\n                    >\n\n                      <CardBody>\n\n             \n\n                        <GridContainer justify=\"center\"> \n                          <GridItem xs={12} sm={12} md={12}>\n                            <Card pricing plain className={classes.marginZero}>\n                              <CardBody pricing plain>\n                                <h5 className={classes.cardCategory} style={{ color: \"#425cc7\" }}>Plano <br/> {plan.nome}</h5>\n                                <hr/>\n                                \n                                {\n                                  insertCupom ? (\n                                    <>\n                                      <small style={{ fontSize: \"1rem\" }}>{'\\u00A0'} Primeira mensalidade</small>\n                                      <h1 className={classes.cardTitle} style={{ color: \"#425cc7\", marginTop: \"0.75rem\", marginBottom: \"0 !important\" }}>\n                                        <small style={{ color: \"#425cc7\" }}>R$</small> {formatValuePresentation( formatValueParcela(plan.primeiraParcela) - formatValueParcela(listaPremios.listaPremios[0].valorDesconto) )}\n                                      </h1>      \n                                      <small style={{ fontSize: \"0.7rem\" }}>{'\\u00A0'} Valor anual do plano: R$ { formatValuePresentation( (formatValueParcela(plan.mensalidade) * formatValueParcela(plan.fidelidade)) - descontoTotal(listaPremios) ) }</small>\n                                      {getPremios(listaPremios)}    \n                                    </>                  \n                                  ): (\n                                    <>\n                                      <small style={{ fontSize: \"1rem\" }}>{'\\u00A0'} {plan.fidelidade} parcelas de</small>\n                                      <h1 className={classes.cardTitle} style={{ color: \"#425cc7\", marginTop: \"0.75rem\", marginBottom: \"0 !important\" }}>\n                                        <small style={{ color: \"#425cc7\" }}>R$</small> {formatValuePresentation(plan.mensalidade)}\n                                      </h1>\n                                      <small style={{ fontSize: \"0.7rem\" }}>{'\\u00A0'} Valor anual do plano: R$ { formatValuePresentation( (formatValueParcela(plan.mensalidade) * formatValueParcela(plan.fidelidade)) ) }</small>\n                                    </>\n                                  )                            \n                                }\n        \n                                <ul className={classes.itensResumo}>\n                                  <li>\n                                    <Check/> Treinos Personalizados\n                                  </li>\n                                  <li>\n                                    <Check/> Acompanhamento em Grupo\n                                  </li>\n                                  <li>\n                                    <Check/> Vídeos Explicativos por Exercício\n                                  </li>                                  \n                                  <li>\n                                    <Check/> Master Classes Ao Vivo 1x/semana\n                                  </li>\n                                </ul>\n                              </CardBody>\n              \n                            </Card>\n                          </GridItem>                                        \n                        </GridContainer>                 \n                    \n                      </CardBody>\n\n                    </Grow>\n                  </form>\n                </Card>\n                </Grow>\n              </GridItem>\n            </Box>\n          </GridContainer>\n        </div>\n      </div>\n      {/* Contact us 1 END */}\n    </div>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}