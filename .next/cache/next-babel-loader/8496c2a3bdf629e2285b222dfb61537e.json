{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\nvar _jsxFileName = \"/Users/gabrieldossantos/Google Drive (webmaster@wigoo.com.br)/Wigoo Desenvolvimento/justfit.com.br/clicoupersonal.com.br/checkout/components/InfoArea/InfoArea.js\";\nvar __jsx = React.createElement;\nimport React from \"react\"; // nodejs library to set properties for components\n\nimport PropTypes from \"prop-types\"; // nodejs library that concatenates classes\n\nimport classNames from \"classnames\"; // @material-ui/core components\n\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Icon from \"@material-ui/core/Icon\";\nimport styles from \"assets/jss/nextjs-material-kit-pro/components/infoStyle.js\";\nvar useStyles = makeStyles(styles);\nexport default function InfoArea(props) {\n  var _classNames, _classNames2, _classNames3;\n\n  var title = props.title,\n      description = props.description,\n      iconColor = props.iconColor,\n      vertical = props.vertical,\n      className = props.className;\n  var classes = useStyles();\n  var iconWrapper = classNames((_classNames = {}, _defineProperty(_classNames, classes.iconWrapper, true), _defineProperty(_classNames, classes[iconColor], true), _defineProperty(_classNames, classes.iconWrapperVertical, vertical), _classNames));\n  var iconClasses = classNames((_classNames2 = {}, _defineProperty(_classNames2, classes.icon, true), _defineProperty(_classNames2, classes.iconVertical, vertical), _classNames2));\n  var infoAreaClasses = classNames((_classNames3 = {}, _defineProperty(_classNames3, classes.infoArea, true), _defineProperty(_classNames3, className, className !== undefined), _classNames3));\n  var icon = null;\n\n  switch (typeof props.icon) {\n    case \"string\":\n      icon = __jsx(Icon, {\n        className: iconClasses,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 33,\n          columnNumber: 14\n        }\n      }, props.icon);\n      break;\n\n    default:\n      icon = __jsx(props.icon, {\n        className: iconClasses,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 36,\n          columnNumber: 14\n        }\n      });\n      break;\n  }\n\n  return __jsx(\"div\", {\n    className: infoAreaClasses,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 5\n    }\n  }, __jsx(\"div\", {\n    className: iconWrapper,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 7\n    }\n  }, icon), __jsx(\"div\", {\n    className: classes.descriptionWrapper,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 7\n    }\n  }, __jsx(\"h4\", {\n    className: classes.title,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 9\n    }\n  }, title), __jsx(\"div\", {\n    className: classes.description,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 9\n    }\n  }, description)));\n}\nInfoArea.defaultProps = {\n  iconColor: \"gray\"\n};\nInfoArea.propTypes = {\n  icon: PropTypes.oneOfType([PropTypes.object, PropTypes.string]).isRequired,\n  title: PropTypes.string.isRequired,\n  description: PropTypes.node.isRequired,\n  iconColor: PropTypes.oneOf([\"primary\", \"warning\", \"danger\", \"success\", \"info\", \"rose\", \"gray\"]),\n  vertical: PropTypes.bool,\n  className: PropTypes.string\n};","map":{"version":3,"sources":["/Users/gabrieldossantos/Google Drive (webmaster@wigoo.com.br)/Wigoo Desenvolvimento/justfit.com.br/clicoupersonal.com.br/checkout/components/InfoArea/InfoArea.js"],"names":["React","PropTypes","classNames","makeStyles","Icon","styles","useStyles","InfoArea","props","title","description","iconColor","vertical","className","classes","iconWrapper","iconWrapperVertical","iconClasses","icon","iconVertical","infoAreaClasses","infoArea","undefined","descriptionWrapper","defaultProps","propTypes","oneOfType","object","string","isRequired","node","oneOf","bool"],"mappings":"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","sourcesContent":["import React from \"react\";\n// nodejs library to set properties for components\nimport PropTypes from \"prop-types\";\n// nodejs library that concatenates classes\nimport classNames from \"classnames\";\n// @material-ui/core components\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Icon from \"@material-ui/core/Icon\";\n\nimport styles from \"assets/jss/nextjs-material-kit-pro/components/infoStyle.js\";\n\nconst useStyles = makeStyles(styles);\n\nexport default function InfoArea(props) {\n  const { title, description, iconColor, vertical, className } = props;\n  const classes = useStyles();\n  const iconWrapper = classNames({\n    [classes.iconWrapper]: true,\n    [classes[iconColor]]: true,\n    [classes.iconWrapperVertical]: vertical\n  });\n  const iconClasses = classNames({\n    [classes.icon]: true,\n    [classes.iconVertical]: vertical\n  });\n  const infoAreaClasses = classNames({\n    [classes.infoArea]: true,\n    [className]: className !== undefined\n  });\n  let icon = null;\n  switch (typeof props.icon) {\n    case \"string\":\n      icon = <Icon className={iconClasses}>{props.icon}</Icon>;\n      break;\n    default:\n      icon = <props.icon className={iconClasses} />;\n      break;\n  }\n  return (\n    <div className={infoAreaClasses}>\n      <div className={iconWrapper}>{icon}</div>\n      <div className={classes.descriptionWrapper}>\n        <h4 className={classes.title}>{title}</h4>\n        <div className={classes.description}>{description}</div>\n      </div>\n    </div>\n  );\n}\n\nInfoArea.defaultProps = {\n  iconColor: \"gray\"\n};\n\nInfoArea.propTypes = {\n  icon: PropTypes.oneOfType([PropTypes.object, PropTypes.string]).isRequired,\n  title: PropTypes.string.isRequired,\n  description: PropTypes.node.isRequired,\n  iconColor: PropTypes.oneOf([\n    \"primary\",\n    \"warning\",\n    \"danger\",\n    \"success\",\n    \"info\",\n    \"rose\",\n    \"gray\"\n  ]),\n  vertical: PropTypes.bool,\n  className: PropTypes.string\n};\n"]},"metadata":{},"sourceType":"module"}